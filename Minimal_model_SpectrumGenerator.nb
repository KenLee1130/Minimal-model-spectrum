(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    426595,       8116]
NotebookOptionsPosition[    423426,       8054]
NotebookOutlinePosition[    423857,       8071]
CellTagsIndexPosition[    423814,       8068]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Output function", "Subsubsection",
 CellChangeTimes->{{3.954116279155836*^9, 
  3.9541162824347773`*^9}},ExpressionUUID->"bc9e6e39-30e0-4fc2-9bac-\
8cc73e0e3ec9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "displayFusionResult", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayFusionResult", "[", 
    RowBox[{"cc_", ",", "hext_", ",", "cwprimaries_", ",", "cwopes_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "tbl", "}"}], ",", 
     RowBox[{
      RowBox[{"tbl", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Central charge\>\"", ",", "cc"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Chosen external weight (h_ext)\>\"", ",", "hext"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Primary weights\>\"", ",", 
           RowBox[{"Row", "[", 
            RowBox[{"cwprimaries", ",", "\"\<, \>\""}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OPE coefficients\>\"", ",", 
           RowBox[{"Row", "[", 
            RowBox[{"cwopes", ",", "\"\<, \>\""}], "]"}]}], "}"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Parameter\>\"", ",", "\"\<Value\>\""}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"Frame", "->", "All"}], ",", 
        RowBox[{"Alignment", "->", "Left"}], ",", 
        RowBox[{"Spacings", "->", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}]}], ",", 
        RowBox[{"Background", "->", 
         RowBox[{"{", 
          RowBox[{"None", ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", 
             RowBox[{"{", 
              RowBox[{"LightGray", ",", "White"}], "}"}]}], "}"}]}], 
          "}"}]}]}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.954116183938133*^9, 3.9541161839416533`*^9}, 
   3.9541162210960646`*^9},
 CellLabel->
  "In[667]:=",ExpressionUUID->"656d76a5-a611-4823-931d-154e02e214e0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Get primary operators from assigned minimal model", "Subsubsection",
 CellChangeTimes->{{3.94905583191092*^9, 
  3.949055845498935*^9}},ExpressionUUID->"87dfd079-02e4-433a-a1e0-\
07156065b98a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "getPrimaries", ",", "h", ",", "fusionDataList", ",", " ", 
    "fusionDataGrid", ",", " ", "getFusionInfo"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPrimaries", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", ",", "s"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "1", ",", 
         RowBox[{"q", "-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "1", ",", 
         RowBox[{"p", "-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p_", ",", "q_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r_", ",", "s_"}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", "*", "r"}], "-", 
         RowBox[{"q", "*", "s"}]}], ")"}], "^", "2"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", "-", "q"}], ")"}], "^", "2"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "p", " ", "q"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fusionKac", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p_", ",", "q_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r1_", ",", "s1_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r2_", ",", "s2_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rRange", ",", "sRange"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rRange", "=", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"r1", "-", "r2"}], "]"}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"r1", "+", "r2"}], ",", 
            RowBox[{
             RowBox[{"2", " ", "q"}], "-", "r1", "-", "r2"}]}], "]"}], "-", 
          "1"}], ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sRange", "=", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"s1", "-", "s2"}], "]"}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"s1", "+", "s2"}], ",", 
            RowBox[{
             RowBox[{"2", " ", "p"}], "-", "s1", "-", "s2"}]}], "]"}], "-", 
          "1"}], ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r3", ",", "s3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r3", ",", "rRange"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"s3", ",", "sRange"}], "}"}]}], "]"}], ",", "1"}], "]"}],
         ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "<=", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "<=", 
            RowBox[{"q", "-", "1"}]}], "&&", 
           RowBox[{"1", "<=", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<=", 
            RowBox[{"p", "-", "1"}]}]}], ")"}], "&"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fusionDataList", "[", 
     RowBox[{"{", 
      RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"primaries", ",", "raw", ",", "grouped", ",", "rows"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cVal", "=", 
        RowBox[{"1", "-", 
         RowBox[{"6", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "-", "q"}], ")"}], "^", "2"}], "/", 
           RowBox[{"(", 
            RowBox[{"p", " ", "q"}], ")"}]}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"primaries", "=", 
        RowBox[{"getPrimaries", "[", 
         RowBox[{"{", 
          RowBox[{"p", ",", "q"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"raw", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p", ",", "q"}], "}"}], ",", "\[Psi]"}], "]"}], ",", 
            "\[Psi]", ",", 
            RowBox[{"fusionKac", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p", ",", "q"}], "}"}], ",", "\[Psi]", ",", "\[Psi]"}],
              "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Psi]", ",", "primaries"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"grouped", "=", 
        RowBox[{"GatherBy", "[", 
         RowBox[{"raw", ",", "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rows", "=", 
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"group", ",", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "hVal", ",", "lvls", ",", "chans", ",", "uniqChans", ",", 
                "chanWeights"}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"hVal", "=", 
                RowBox[{"group", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"lvls", "=", 
                RowBox[{"group", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"chans", "=", 
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"group", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", "1"}], 
                 "]"}]}], ";", 
               RowBox[{"uniqChans", "=", 
                RowBox[{"DeleteDuplicates", "[", "chans", "]"}]}], ";", 
               RowBox[{"chanWeights", "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{"h", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"p", ",", "q"}], "}"}], ",", "#"}], "]"}], "&"}], 
                 "/@", "uniqChans"}]}], ";", 
               RowBox[{"{", 
                RowBox[{
                "hVal", ",", "lvls", ",", "uniqChans", ",", "chanWeights"}], 
                "}"}]}]}], "]"}]}], "]"}], ",", "grouped"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"cVal", ",", "rows"}], "}"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fusionDataGrid", "[", "fusionData_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cVal", ",", "rows", ",", " ", "formatted", ",", "colLabels"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"cVal", ",", "rows"}], "}"}], "=", "fusionData"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"header", ",", 
         RowBox[{
         "keeping", " ", "cVal", " ", "as", " ", "a", " ", "Fraction"}]}], 
        "*)"}], 
       RowBox[{"header", "=", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<Central charge = \>\"", ",", "cVal"}], "}"}], "]"}], 
          ",", "Bold", ",", 
          RowBox[{"FontSize", "->", "14"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\n", 
       RowBox[{"(*", 
        RowBox[{"column", " ", "labels"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"colLabels", "=", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Weight\>\"", ",", "\"\<Levels\>\"", ",", 
          "\"\<fusion Channels\>\"", ",", "\"\<Conformal Weights\>\""}], 
         "}"}]}], ";", "\[IndentingNewLine]", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "turn", " ", "each", " ", "row", " ", "into", " ", "four", " ", 
         "neat", " ", "columns"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"formatted", "=", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", 
              RowBox[{"Row", "@", 
               RowBox[{"Riffle", "[", 
                RowBox[{"#2", ",", "\"\<; \>\""}], "]"}]}], ",", 
              RowBox[{"Row", "@", 
               RowBox[{"Riffle", "[", 
                RowBox[{"#3", ",", "\"\<; \>\""}], "]"}]}], ",", 
              RowBox[{"Row", "@", 
               RowBox[{"Riffle", "[", 
                RowBox[{"#4", ",", "\"\<, \>\""}], "]"}]}]}], "}"}], "&"}], "@@@",
            "rows"}], ",", "colLabels"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"header", ",", 
           RowBox[{"Grid", "[", 
            RowBox[{"formatted", ",", 
             RowBox[{"Frame", "->", "All"}], ",", 
             RowBox[{"Alignment", "->", "Left"}], ",", 
             RowBox[{"Spacings", "->", 
              RowBox[{"{", 
               RowBox[{"2", ",", "1"}], "}"}]}], ",", 
             RowBox[{"Background", "->", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"{", 
                 RowBox[{"None", ",", 
                  RowBox[{"{", 
                   RowBox[{"LightGray", ",", "White"}], "}"}]}], "}"}]}], 
               "}"}]}]}], "]"}]}], "}"}], ",", 
         RowBox[{"Spacings", "->", "1"}]}], "]"}]}]}], "\n", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getFusionInfo", "[", 
    RowBox[{"hext_", ",", "fusionData_"}], "  ", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cVal", ",", "rows", ",", "thisRow", ",", "hint"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cVal", "=", 
       RowBox[{"fusionData", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rows", "=", 
       RowBox[{"fusionData", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"thisRow", "=", 
       RowBox[{"SelectFirst", "[", 
        RowBox[{"rows", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], "===", "hext"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hint", "=", 
       RowBox[{"thisRow", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"cVal", ",", "hext", ",", "hint"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.953985590587639*^9, 3.9539855905886717`*^9}, {
   3.9539860253107376`*^9, 3.953986052326271*^9}, {3.9539860944012775`*^9, 
   3.953986158090138*^9}, 3.953986197786031*^9, {3.9539862586309166`*^9, 
   3.953986313751633*^9}, 3.9539863865298405`*^9, {3.954043096428529*^9, 
   3.954043115167776*^9}, {3.954043400404643*^9, 3.9540434784010444`*^9}, {
   3.95404361451868*^9, 3.954043630254078*^9}, {3.9540438951429253`*^9, 
   3.95404395293047*^9}, {3.954043985813033*^9, 3.954044018924467*^9}, {
   3.954044576434657*^9, 3.9540445768338923`*^9}, {3.9541178866458178`*^9, 
   3.9541178958040524`*^9}, 3.954117927299086*^9, 3.954118365769602*^9, {
   3.9541184410843315`*^9, 3.9541184427313643`*^9}, {3.95411850678664*^9, 
   3.954118520086032*^9}, 3.9541185787819138`*^9, {3.954118738819051*^9, 
   3.9541187720967836`*^9}, {3.954118808580843*^9, 3.9541188506020947`*^9}, {
   3.954119032386911*^9, 3.9541190581041*^9}, 3.954119199017994*^9, {
   3.954119243786729*^9, 3.954119255248885*^9}, {3.9541196474047365`*^9, 
   3.954119654238821*^9}, {3.9542857668546605`*^9, 3.9542857904277086`*^9}},
 CellLabel->
  "In[669]:=",ExpressionUUID->"657dc304-4071-4919-9615-525dac0d7787"]
}, Closed]],

Cell[CellGroupData[{

Cell["Get Virasoro correlator", "Subsubsection",
 CellChangeTimes->{{3.949055853108801*^9, 
  3.9490558614018736`*^9}},ExpressionUUID->"bc81cfa7-fa30-4737-b1ed-\
796557669a40"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"qCoeffient", ",", " ", "VBlock"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Nprecision", "=", "50"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Set", " ", "precision"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$MinPrecision", "=", "Nprecision"}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["qCoeffient",
       FontWeight->"Bold",
       FontSlant->"Italic"], " ", "returns", " ", "the", " ", "q"}], "-", 
     RowBox[{"expansion", " ", 
      RowBox[{"coefficients", ".", " ", "The"}], " ", "inputs", " ", "of", 
      " ", 
      StyleBox[
       RowBox[{"qCoefficient", "[", "]"}],
       FontWeight->"Bold",
       FontSlant->"Italic"], " ", "are", " ", "the", " ", "the", " ", 
      "central", " ", "charge", " ", 
      StyleBox["cCentralCharge",
       FontWeight->"Bold",
       FontSlant->"Italic"]}]}], ",", " ", 
    RowBox[{"light", "-", 
     RowBox[{"operator", " ", "dimension", " ", 
      StyleBox["hLight",
       FontWeight->"Bold",
       FontSlant->"Italic"]}]}], ",", " ", 
    RowBox[{
     RowBox[{"the", " ", "heavy"}], "-", 
     RowBox[{"operator", " ", "dimension", " ", 
      StyleBox["hHeavy",
       FontWeight->"Bold",
       FontSlant->"Italic"]}]}], ",", " ", 
    RowBox[{
    "the", " ", "intermediate", " ", "operator", " ", "dimension", " ", 
     StyleBox["hIntermediate",
      FontWeight->"Bold",
      FontSlant->"Italic"]}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "highest", " ", "power", " ", "of", " ", "the", 
     " ", "coefficients", " ", 
     StyleBox["NN",
      FontWeight->"Bold",
      FontSlant->"Italic"], " ", 
     RowBox[{"wanted", "."}]}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qCoeffient", "[", 
    RowBox[{
    "cCentralCharge_", ",", "hLight_", ",", "hHeavy_", ",", "hIntermediate_", 
     ",", "NN_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "c", ",", "hL", ",", "hH", ",", "b", ",", "h", ",", "countmn", ",", 
       "lengthmn", ",", "startmn", ",", "Cij", ",", "CHij", ",", 
       "\[Lambda]Lsquare", ",", "\[Lambda]Hsquare", ",", "\[Lambda]pq", ",", 
       "Ppq", ",", "Rmn", ",", "RmnDenominator", ",", "RmnList", ",", 
       "hmnList", ",", "mnhalfList", ",", "temp", ",", 
       RowBox[{"NNhalf", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"NN", "/", "2"}], "]"}]}], ",", 
       RowBox[{"qCoefList", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{"NN", "/", "2"}], "]"}], "+", "1"}]}], "]"}]}]}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        StyleBox["NNhalf",
         FontWeight->"Bold",
         FontSlant->"Italic"], " ", "is", " ", "number", " ", "of", " ", 
        "terms", " ", "in", " ", "the", " ", "list", " ", "of", " ", "the", 
        " ", "coefficients", " ", 
        StyleBox["qCoefList",
         FontWeight->"Bold",
         FontSlant->"Italic"], " ", "that", " ", "need", " ", "to", " ", "be",
         " ", "calculated"}], ",", " ", 
       RowBox[{
        RowBox[{
        "since", " ", "only", " ", "even", " ", "powers", " ", "of", " ", 
         StyleBox["q",
          FontWeight->"Plain"], " ", "are", " ", "non"}], "-", 
        RowBox[{"zero", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Convert", " ", "the", " ", "arguments", " ", "to", " ", "high", " ", 
       "precision", " ", 
       RowBox[{"decimals", ".", " ", "Do"}], " ", "nothing", " ", "for", " ", 
       "symbolic", " ", 
       RowBox[{"calculation", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hL", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", "hLight", "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"Rationalize", "[", "hLight", "]"}], ",", "Nprecision"}], 
          "]"}], ",", "hLight"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hH", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", "hHeavy", "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"Rationalize", "[", "hHeavy", "]"}], ",", "Nprecision"}], 
          "]"}], ",", "hHeavy"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", "cCentralCharge", "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"Rationalize", "[", "cCentralCharge", "]"}], ",", 
           "Nprecision"}], "]"}], ",", "cCentralCharge"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", "c", "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"Rationalize", "[", 
            FractionBox[
             SqrtBox[
              RowBox[{"c", "-", "13", "+", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["c", "2"], "-", 
                 RowBox[{"26", " ", "c"}], "+", "25"}]]}]], 
             RowBox[{"2", " ", 
              SqrtBox["3"]}]], "]"}], ",", "Nprecision"}], "]"}], ",", "b"}], 
        "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"For", " ", "symbolic", " ", "calculation"}], ",", " ", 
        RowBox[{
        "present", " ", "the", " ", "result", " ", "in", " ", "terms", " ", 
         "of", " ", 
         RowBox[{"b", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"h", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", "hIntermediate", "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"Rationalize", "[", "hIntermediate", "]"}], ",", 
           "Nprecision"}], "]"}], ",", "hIntermediate"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]Lsquare", "=", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "+", 
            FractionBox["1", "b"]}], ")"}], "2"]}], "-", "hL"}]}], ";", 
      RowBox[{"(*", 
       SuperscriptBox[
        SubscriptBox["\[Lambda]", "L"], "2"], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]Hsquare", "=", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "+", 
            FractionBox["1", "b"]}], ")"}], "2"]}], "-", "hH"}]}], ";", 
      RowBox[{"(*", 
       SuperscriptBox[
        SubscriptBox["\[Lambda]", "H"], "2"], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Lambda]pq", "[", 
        RowBox[{"p_", ",", "q_"}], "]"}], ":=", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          FractionBox["p", "b"], "+", 
          RowBox[{"q", " ", "b"}]}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       SubscriptBox["\[Lambda]", 
        RowBox[{"p", ",", "q"}]], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Ppq", "[", 
        RowBox[{"p_", ",", "q_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Lambda]pq", "[", 
            RowBox[{"p", ",", "q"}], "]"}], "2"], "-", 
          RowBox[{"4", "\[Lambda]Lsquare"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Lambda]pq", "[", 
            RowBox[{"p", ",", "q"}], "]"}], "2"], "-", 
          RowBox[{"4", "\[Lambda]Hsquare"}]}], " ", ")"}], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]pq", "[", 
          RowBox[{"p", ",", "q"}], "]"}], "4"]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        StyleBox[
         RowBox[{"Ppq", "[", 
          RowBox[{"p", ",", "q"}], "]"}],
         FontWeight->"Bold",
         FontSlant->"Italic"], " ", "gives", " ", "the", " ", "contribution", 
        " ", "to", " ", "the", " ", "numerator", " ", "of", " ", 
        StyleBox[
         SubscriptBox["R", 
          RowBox[{"m", ",", "n"}]],
         FontWeight->"Bold",
         FontSlant->"Italic"], " ", "from", " ", 
        StyleBox[
         SubscriptBox["\[Lambda]", 
          RowBox[{"p", ",", "q"}]],
         FontWeight->"Bold",
         FontSlant->"Italic"], " ", "and", " ", 
        StyleBox[
         SubscriptBox["\[Lambda]", 
          RowBox[{
           RowBox[{"-", "p"}], ",", 
           RowBox[{"-", "q"}]}]],
         FontWeight->"Bold",
         FontSlant->"Italic"]}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RmnDenominator", "[", 
        RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{"k", "\[Equal]", "0"}], "&&", 
                RowBox[{"l", "\[Equal]", "0"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{"k", "\[Equal]", "m"}], "&&", 
                RowBox[{"l", "\[Equal]", "n"}]}]}], "}"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"k", "/", "b"}], "+", 
              RowBox[{"l", " ", "b"}]}], ")"}], "/", "2"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{
            RowBox[{"-", "m"}], "+", "1"}], ",", "m"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"l", ",", 
           RowBox[{
            RowBox[{"-", "n"}], "+", "1"}], ",", "n"}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         StyleBox[
          RowBox[{"RmnDenominator", "[", 
           RowBox[{"m", ",", "n"}], "]"}],
          FontWeight->"Bold",
          FontSlant->"Italic"], " ", "give", " ", "the", " ", "denominator", 
         " ", "of", " ", 
         StyleBox[
          SubscriptBox["R", 
           RowBox[{"m", ",", "n"}]],
          FontWeight->"Bold",
          FontSlant->"Italic"]}], ",", " ", 
        RowBox[{
        "but", " ", "only", " ", "to", " ", "be", " ", "used", " ", "for", 
         " ", "calculation", " ", "of", " ", "the", " ", "first", " ", 
         "several", " ", "terms", " ", "of", " ", 
         RowBox[{
          StyleBox[
           SubscriptBox["R", 
            RowBox[{"m", ",", "n"}]],
           FontWeight->"Bold",
           FontSlant->"Italic"], "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         StyleBox[
          SubscriptBox["R", 
           RowBox[{"m", ",", "n"}]],
          FontWeight->"Bold",
          FontSlant->"Italic"], " ", "is", " ", "filled", " ", "recursively", 
         " ", "from", " ", "higher", " ", "order", " ", "terms"}], ",", " ", 
        RowBox[{
        "but", " ", "we", " ", "need", " ", "to", " ", "set", " ", "the", " ",
          "boundary", " ", "values", " ", "for", " ", "this", " ", 
         "recursive", " ", 
         RowBox[{"calculation", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Rmn", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "NN", ",", "NN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Rmn", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"2", 
        FractionBox[
         RowBox[{"Ppq", "[", 
          RowBox[{"0", ",", "1"}], "]"}], 
         RowBox[{"RmnDenominator", "[", 
          RowBox[{"1", ",", "2"}], "]"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Rmn", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{"2", 
        FractionBox[
         RowBox[{"Ppq", "[", 
          RowBox[{"1", ",", "0"}], "]"}], 
         RowBox[{"RmnDenominator", "[", 
          RowBox[{"2", ",", "1"}], "]"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Rmn", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"2", 
        FractionBox[
         RowBox[{
          RowBox[{"Ppq", "[", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "]"}], 
          RowBox[{"Ppq", "[", 
           RowBox[{"1", ",", "1"}], "]"}]}], 
         RowBox[{"RmnDenominator", "[", 
          RowBox[{"2", ",", "2"}], "]"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Obtain", " ", 
        StyleBox[
         SubscriptBox["R", 
          RowBox[{"m", ",", "1"}]],
         FontWeight->"Bold",
         FontSlant->"Italic"], " ", "and", " ", 
        StyleBox[
         SubscriptBox["R", 
          RowBox[{"m", ",", "2"}]],
         FontWeight->"Bold",
         FontSlant->"Italic"], " ", "from", " ", 
        StyleBox[
         SubscriptBox["R", 
          RowBox[{
           RowBox[{"m", "-", "2"}], ",", "1"}]],
         FontWeight->"Bold",
         FontSlant->"Italic"], " ", "and", " ", 
        StyleBox[
         SubscriptBox["R", 
          RowBox[{
           RowBox[{"m", "-", "2"}], ",", "2"}]],
         FontWeight->"Bold",
         FontSlant->"Italic"], " ", "respectively"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Rmn", "[", 
          RowBox[{"[", 
           RowBox[{"m", ",", "1"}], "]"}], "]"}], "=", 
         RowBox[{
          FractionBox[
           RowBox[{"Rmn", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"m", "-", "2"}], ",", "1"}], "]"}], "]"}], 
           RowBox[{"\[Lambda]pq", "[", 
            RowBox[{
             RowBox[{"m", "-", "2"}], ",", "1"}], "]"}]], 
          RowBox[{"Ppq", "[", 
           RowBox[{
            RowBox[{"m", "-", "1"}], ",", "0"}], "]"}], 
          RowBox[{"\[Lambda]pq", "[", 
           RowBox[{"m", ",", "1"}], "]"}], 
          RowBox[{"Product", "[", 
           RowBox[{
            FractionBox["2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"k", "/", "b"}], "+", 
               RowBox[{"nn", " ", "b"}]}], ")"}]], ",", 
            RowBox[{"{", 
             RowBox[{"nn", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "m"}], "+", "1"}], ",", 
                RowBox[{
                 RowBox[{"-", "m"}], "+", "2"}], ",", 
                RowBox[{"m", "-", "1"}], ",", "m"}], "}"}]}], "}"}]}], 
           "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "4", ",", "NN", ",", "2"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Rmn", "[", 
          RowBox[{"[", 
           RowBox[{"m", ",", "2"}], "]"}], "]"}], "=", 
         RowBox[{
          FractionBox[
           RowBox[{"Rmn", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"m", "-", "2"}], ",", "2"}], "]"}], "]"}], 
           RowBox[{"\[Lambda]pq", "[", 
            RowBox[{
             RowBox[{"m", "-", "2"}], ",", "2"}], "]"}]], 
          RowBox[{"Ppq", "[", 
           RowBox[{
            RowBox[{"m", "-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "]"}], 
          RowBox[{"Ppq", "[", 
           RowBox[{
            RowBox[{"m", "-", "1"}], ",", "1"}], "]"}], 
          RowBox[{"\[Lambda]pq", "[", 
           RowBox[{"m", ",", "2"}], "]"}], 
          RowBox[{"Product", "[", 
           RowBox[{
            FractionBox["2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"k", "/", "b"}], "+", 
               RowBox[{"nn", " ", "b"}]}], ")"}]], ",", 
            RowBox[{"{", 
             RowBox[{"nn", ",", 
              RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "m"}], "+", "1"}], ",", 
                RowBox[{
                 RowBox[{"-", "m"}], "+", "2"}], ",", 
                RowBox[{"m", "-", "1"}], ",", "m"}], "}"}]}], "}"}]}], 
           "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "3", ",", "NN"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Obtain", " ", 
         StyleBox[
          SubscriptBox["R", 
           RowBox[{"m", ",", "n"}]],
          FontWeight->"Bold",
          FontSlant->"Italic"], " ", "from", " ", 
         StyleBox[
          SubscriptBox["R", 
           RowBox[{"m", ",", 
            RowBox[{"n", "-", "2"}]}]],
          FontWeight->"Bold",
          FontSlant->"Italic"]}], ",", " ", 
        RowBox[{
        "only", " ", "calculate", " ", "terms", " ", "with", " ", "even", " ",
          "mn"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Rmn", "[", 
          RowBox[{"[", 
           RowBox[{"m", ",", "n"}], "]"}], "]"}], "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OddQ", "[", 
            RowBox[{"m", " ", "n"}], "]"}], ",", "0", ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Rmn", "[", 
              RowBox[{"[", 
               RowBox[{"m", ",", 
                RowBox[{"n", "-", "2"}]}], "]"}], "]"}], 
             RowBox[{"\[Lambda]pq", "[", 
              RowBox[{"m", ",", 
               RowBox[{"n", "-", "2"}]}], "]"}]], 
            RowBox[{"\[Lambda]pq", "[", 
             RowBox[{"m", ",", "n"}], "]"}], 
            RowBox[{"Product", "[", 
             RowBox[{
              RowBox[{"Ppq", "[", 
               RowBox[{"p", ",", 
                RowBox[{"n", "-", "1"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"p", ",", 
                RowBox[{
                 RowBox[{"-", "m"}], "+", "1"}], ",", 
                RowBox[{"m", "-", "1"}], ",", "2"}], "}"}]}], "]"}], 
            RowBox[{"Product", "[", 
             RowBox[{
              FractionBox["2", 
               RowBox[{" ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"k", "/", "b"}], "+", 
                  RowBox[{"nn", " ", "b"}]}], ")"}]}]], ",", 
              RowBox[{"{", 
               RowBox[{"nn", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "n"}], "+", "1"}], ",", 
                  RowBox[{
                   RowBox[{"-", "n"}], "+", "2"}], ",", 
                  RowBox[{"n", "-", "1"}], ",", "n"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", 
                RowBox[{
                 RowBox[{"-", "m"}], "+", "1"}], ",", "m"}], "}"}]}], 
             "]"}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "NN"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "3", ",", 
          RowBox[{"NN", "/", "m"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"In", " ", "the", " ", "following", " ", "calculation"}], ",",
         " ", 
        RowBox[{
         RowBox[{
          StyleBox[
           SubscriptBox["R", 
            RowBox[{"m", ",", "n"}]],
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "and", " ", 
          StyleBox[
           SubscriptBox["h", 
            RowBox[{"m", ",", "n"}]],
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "are", " ", "stored", " ", "into", " ", 
          "one"}], "-", 
         RowBox[{"dimensional", " ", "tables"}]}], ",", " ", 
        RowBox[{
        "and", " ", "we", " ", "only", " ", "need", " ", "to", " ", 
         "consider", " ", "cases", " ", "that", " ", 
         StyleBox["mn",
          FontWeight->"Bold",
          FontSlant->"Italic"], " ", "is", " ", "even"}]}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"startmn", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"Floor", "[", 
           RowBox[{"NN", "/", "2"}], "]"}], "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lengthmn", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"startmn", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", "lengthmn"}], ";", 
         RowBox[{"lengthmn", "+=", 
          RowBox[{"Length", "[", 
           RowBox[{"Divisors", "[", 
            RowBox[{"2", "i"}], "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"NNhalf", "+", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lengthmn", "-=", 
       RowBox[{"Length", "[", 
        RowBox[{"Divisors", "[", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"NNhalf", "+", "1"}], ")"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          StyleBox["lengthmn",
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "counts", " ", "the", " ", "length", 
          " ", "of", " ", "these", " ", "one"}], "-", 
         RowBox[{"dimension", " ", "tables"}]}], ",", " ", 
        RowBox[{
        "which", " ", "is", " ", "the", " ", "sum", " ", "of", " ", "the", 
         " ", "number", " ", "of", " ", "divisors", " ", "of", " ", "even", 
         " ", "integers", " ", "up", " ", "to", " ", "NN"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"Elements", " ", "from", " ", 
          StyleBox[
           RowBox[{"startmn", "[", 
            RowBox[{"[", "i", "]"}], "]"}],
           FontWeight->"Bold",
           FontSlant->"Italic"]}], 
         StyleBox["+",
          FontWeight->"Bold",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["1",
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "to", " ", 
          StyleBox[
           RowBox[{"startmn", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}],
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "of", " ", "these", " ", "one"}], "-", 
         RowBox[{
         "dimensioanl", " ", "tables", " ", "to", " ", "be", " ", "defiend", 
          " ", "below", "  ", "correspond", " ", "to", " ", "the", " ", 
          StyleBox[
           SubscriptBox["R", 
            RowBox[{"m", ",", "n"}]],
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "and", " ", 
          StyleBox[
           SubscriptBox["h", 
            RowBox[{"m", ",", "n"}]],
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "who", " ", "have", " ", 
          StyleBox[
           FractionBox["mn", "2"],
           FontWeight->"Bold",
           FontSlant->"Italic"]}]}], 
        StyleBox["=",
         FontWeight->"Bold",
         FontSlant->"Italic"], 
        RowBox[{
         StyleBox["i",
          FontWeight->"Bold",
          FontSlant->"Italic"], "."}]}], "*)"}], "  ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"RmnList", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "lengthmn"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hmnList", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "lengthmn"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mnhalfList", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "lengthmn"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          StyleBox["RmnList",
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "and", " ", 
          StyleBox["hmnList",
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "are", " ", "used", " ", "to", " ", 
          "stores", " ", 
          StyleBox[
           SubscriptBox["h", 
            RowBox[{"m", ",", "n"}]],
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "and", " ", 
          StyleBox[
           SubscriptBox["R", 
            RowBox[{"m", ",", "n"}]],
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "into", " ", "a", " ", "one"}], "-", 
         RowBox[{"dimensional", " ", 
          RowBox[{"tables", ".", " ", "Those"}], " ", 
          StyleBox[
           SubscriptBox["h", 
            RowBox[{"m", ",", "n"}]],
           FontWeight->"Bold",
           FontSlant->"Italic"], "s", " ", "with", " ", "the", " ", "same", 
          " ", "product", " ", 
          StyleBox["mn",
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "will", " ", "be", " ", "stored", " ", 
          "in", " ", "hmnList", " ", "from", " ", 
          StyleBox[
           RowBox[{"startmn", "[", 
            RowBox[{"[", 
             FractionBox["mn", "2"], "]"}], "]"}],
           FontWeight->"Bold",
           FontSlant->"Italic"]}], 
         StyleBox["+",
          FontWeight->"Bold",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["1",
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "to", " ", 
          StyleBox[
           RowBox[{"startmn", "[", 
            RowBox[{"[", 
             RowBox[{
              FractionBox["mn", "2"], "+", "1"}], "]"}], "]"}],
           FontWeight->"Bold",
           FontSlant->"Italic"]}]}], ",", " ", 
        RowBox[{"and", " ", "similar", " ", "for", " ", 
         RowBox[{"RmnList", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          StyleBox["mnhalfList",
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "stores", " ", "the", " ", "number", 
          " ", 
          StyleBox[
           FractionBox["mn", "2"],
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "that", " ", "corresponds", " ", "to", 
          " ", "the", " ", "each", " ", "element", " ", "in", " ", "these", 
          " ", "one"}], "-", 
         RowBox[{"dimensional", " ", "tables"}]}], ",", " ", 
        RowBox[{
         RowBox[{"for", " ", "example", " ", 
          StyleBox[
           RowBox[{"mnhalfList", "[", 
            RowBox[{"[", "1", "]"}], "]"}],
           FontWeight->"Bold",
           FontSlant->"Italic"]}], 
         StyleBox["=",
          FontWeight->"Bold",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["1",
           FontWeight->"Bold",
           FontSlant->"Italic"], 
          StyleBox[" ",
           FontWeight->"Bold",
           FontSlant->"Italic"], 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"1", "*", "2"}], "2"], "==", "1"}], ")"}]}]}], ",", " ", 
        RowBox[{
         StyleBox[
          RowBox[{"mnhalfList", "[", 
           RowBox[{"[", "2", "]"}], "]"}],
          FontWeight->"Bold",
          FontSlant->"Italic"], 
         StyleBox["=",
          FontWeight->"Bold",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["1",
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"2", "*", "1"}], "2"], "==", "1"}], ")"}]}]}], ",", " ", 
        RowBox[{
         StyleBox[
          RowBox[{"mnhalfList", "[", 
           RowBox[{"[", "3", "]"}], "]"}],
          FontWeight->"Bold",
          FontSlant->"Italic"], 
         StyleBox["=",
          FontWeight->"Bold",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["2",
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"1", "*", "4"}], "2"], "==", "2"}], ")"}]}]}], ",", " ", 
        RowBox[{"and", " ", "so", " ", "on"}]}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Below", " ", "is", " ", "how", " ", "we", " ", "construct", " ", 
         "these", " ", "one"}], "-", 
        RowBox[{"dimensional", " ", 
         RowBox[{"tables", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"countmn", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "NNhalf"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"EvenQ", "[", 
           RowBox[{"m", " ", "n"}], "]"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"temp", "=", 
             RowBox[{"m", " ", 
              RowBox[{"n", "/", "2"}]}]}], ";", 
            RowBox[{
             RowBox[{"countmn", "[", 
              RowBox[{"[", "temp", "]"}], "]"}], "++"}], ";", 
            RowBox[{
             RowBox[{"mnhalfList", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"startmn", "[", 
                 RowBox[{"[", "temp", "]"}], "]"}], "+", 
                RowBox[{"countmn", "[", 
                 RowBox[{"[", "temp", "]"}], "]"}]}], "]"}], "]"}], "=", 
             "temp"}], ";", 
            RowBox[{
             RowBox[{"RmnList", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"startmn", "[", 
                 RowBox[{"[", "temp", "]"}], "]"}], "+", 
                RowBox[{"countmn", "[", 
                 RowBox[{"[", "temp", "]"}], "]"}]}], "]"}], "]"}], "=", 
             RowBox[{"Rmn", "[", 
              RowBox[{"[", 
               RowBox[{"m", ",", "n"}], "]"}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"hmnList", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"startmn", "[", 
                 RowBox[{"[", "temp", "]"}], "]"}], "+", 
                RowBox[{"countmn", "[", 
                 RowBox[{"[", "temp", "]"}], "]"}]}], "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{
               FractionBox["1", "4"], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"b", "+", 
                  FractionBox["1", "b"]}], ")"}], "2"]}], "-", 
              SuperscriptBox[
               RowBox[{"\[Lambda]pq", "[", 
                RowBox[{"m", ",", "n"}], "]"}], "2"]}]}]}], ")"}], ",", "0"}],
          "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "NN"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"NN", "/", "m"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         StyleBox[
          RowBox[{"countmn", "[", 
           RowBox[{"[", "temp", "]"}], "]"}],
          FontWeight->"Bold",
          FontSlant->"Italic"], " ", "records", " ", "the", " ", "number", 
         " ", "of", " ", "divisors", " ", "of", " ", "2", "temp", " ", "that",
          " ", "we", " ", "encounters", " ", "so", " ", "far"}], ",", " ", 
        RowBox[{
         RowBox[{"so", " ", 
          StyleBox[
           RowBox[{"startmn", "[", 
            RowBox[{"[", "temp", "]"}], "]"}],
           FontWeight->"Bold",
           FontSlant->"Italic"]}], 
         StyleBox["+",
          FontWeight->"Bold",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox[
           RowBox[{"countmn", "[", 
            RowBox[{"[", "temp", "]"}], "]"}],
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "is", " ", "the", " ", "position", " ", 
          "where", " ", "the", " ", "current", " ", "element", " ", "should", 
          " ", "be", " ", "in", " ", "these", " ", "one"}], "-", 
         RowBox[{"dimensional", " ", "tables"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"HH", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"startmn", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NNhalf"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         StyleBox[
          RowBox[{"HH", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}],
          FontWeight->"Bold",
          FontSlant->"Italic"], " ", "stores", " ", 
         StyleBox[
          SuperscriptBox[
           SubscriptBox["H", 
            RowBox[{"m", ",", "n"}]], "k"],
          FontWeight->"Bold",
          FontSlant->"Italic"], " ", "in", " ", "the", " ", "diagonal", " ", 
         "way"}], ",", " ", 
        RowBox[{"as", " ", "explained", " ", "in", " ", "the", " ", "paper"}],
         ",", " ", 
        RowBox[{
        "where", " ", "the", " ", "fist", " ", "index", " ", "corresponds", 
         " ", "to", " ", "the", " ", "total", " ", "power", " ", "of", " ", 
         StyleBox[
          SuperscriptBox[
           SubscriptBox["H", 
            RowBox[{"m", ",", "n"}]], "k"],
          FontWeight->"Bold",
          FontSlant->"Italic"]}], 
        StyleBox[",",
         FontWeight->"Bold",
         FontSlant->"Italic"], 
        StyleBox[" ",
         FontWeight->"Bold",
         FontSlant->"Italic"], 
        RowBox[{
         RowBox[{
          StyleBox["which",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["is",
           FontWeight->"Plain"], " ", 
          StyleBox["i",
           FontWeight->"Bold",
           FontSlant->"Italic"]}], 
         StyleBox["==",
          FontWeight->"Bold",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox[
           FractionBox[
            RowBox[{"k", "+", "mn"}], "2"],
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "and", " ", "the", " ", "second", " ", 
          "index", " ", "corresponds", " ", "to", " ", 
          RowBox[{
           StyleBox[
            RowBox[{"(", 
             RowBox[{"m", ",", "n"}], ")"}],
            FontWeight->"Bold",
            FontSlant->"Italic"], ".", " ", "The"}], " ", "length", " ", "of",
           " ", 
          StyleBox[
           RowBox[{"HH", "[", 
            RowBox[{"[", "i", "]"}], "]"}],
           FontWeight->"Bold"], " ", "is", " ", 
          StyleBox[
           RowBox[{"startmn", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}],
           FontWeight->"Bold",
           FontSlant->"Italic"]}]}], ",", " ", 
        RowBox[{
         RowBox[{
         "which", " ", "is", " ", "the", " ", "number", " ", "of", " ", 
          "ways", " ", "to", " ", "write", " ", 
          StyleBox["2",
           FontWeight->"Bold",
           FontSlant->"Italic"], 
          StyleBox["i",
           FontWeight->"Bold",
           FontSlant->"Italic"], 
          StyleBox[" ",
           FontWeight->"Bold"], "as", " ", 
          StyleBox["2",
           FontWeight->"Bold",
           FontSlant->"Italic"], 
          StyleBox["i",
           FontWeight->"Bold",
           FontSlant->"Italic"]}], 
         StyleBox["\[Equal]",
          FontWeight->"Bold",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["k",
           FontWeight->"Bold",
           FontSlant->"Italic"], 
          StyleBox["+",
           FontWeight->"Bold",
           FontSlant->"Italic"], 
          RowBox[{
           StyleBox["mn",
            FontWeight->"Bold",
            FontSlant->"Italic"], "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"HH", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "1"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NNhalf"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{
           RowBox[{"startmn", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ",", 
          RowBox[{"startmn", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["H", 
          RowBox[{"m", ",", "n"}]], "0"], "=", "1"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Cij", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"RmnList", "[", 
           RowBox[{"[", "j", "]"}], "]"}], 
          RowBox[{
           RowBox[{"hmnList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", 
           RowBox[{"2", 
            RowBox[{"mnhalfList", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "-", 
           RowBox[{"hmnList", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "lengthmn"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"startmn", "[", 
            RowBox[{"[", 
             RowBox[{"NNhalf", "-", 
              RowBox[{"mnhalfList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], "]"}], "]"}]}], 
          "}"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"Store", " ", "the", " ", "prefactors", " ", 
          StyleBox[
           SubscriptBox["C", "ij"],
           FontWeight->"Bold",
           FontSlant->"Italic"]}], 
         StyleBox["=",
          FontWeight->"Bold",
          FontSlant->"Italic"], 
         RowBox[{
          RowBox[{
           StyleBox[
            FractionBox[
             SubscriptBox["R", 
              RowBox[{"p", ",", "q"}]], 
             RowBox[{
              SubscriptBox["h", 
               RowBox[{"m", ",", "n"}]], "+", "mn", "-", 
              SubscriptBox["h", 
               RowBox[{"p", ",", "q"}]]}]],
            FontWeight->"Bold",
            FontSlant->"Italic"], " ", "into", " ", "a", " ", "two"}], "-", 
          RowBox[{"dimensional", " ", "table"}]}]}], ",", " ", 
        RowBox[{
        "where", " ", "the", " ", "first", " ", "index", " ", "corresponds", 
         " ", "to", " ", 
         StyleBox[
          RowBox[{"(", 
           RowBox[{"m", ",", "n"}], ")"}],
          FontWeight->"Bold",
          FontSlant->"Italic"], " ", "and", " ", "the", " ", "second", " ", 
         "index", " ", "corresponds", " ", "to", " ", 
         StyleBox[
          RowBox[{"(", 
           RowBox[{"p", ",", "q"}], ")"}],
          FontWeight->"Bold",
          FontSlant->"Italic"]}]}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"CHij", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"RmnList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], 
          RowBox[{"h", "-", 
           RowBox[{"hmnList", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "lengthmn"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          StyleBox["CHij",
           FontWeight->"Bold",
           FontSlant->"Italic"], " ", "is", " ", "the", " ", "list", " ", 
          "of", " ", "prefactor", " ", "to", " ", "get", " ", "the", " ", 
          "q"}], "-", 
         RowBox[{"expansion", " ", "coefficients", " ", "in", " ", 
          StyleBox["qCoefList",
           FontWeight->"Bold",
           FontSlant->"Italic"]}]}], 
        StyleBox[",",
         FontWeight->"Bold",
         FontSlant->"Italic"], 
        StyleBox[" ",
         FontWeight->"Plain"], 
        RowBox[{
         StyleBox["which",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["are",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["denoted",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["as",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         SuperscriptBox[
          StyleBox["H",
           FontWeight->"Bold"], "k"], " ", "in", " ", "the", " ", "paper"}]}],
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"HH", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"khalf", "+", 
               RowBox[{"mnhalfList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", "i"}], "]"}], "]"}], 
           "=", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{
              RowBox[{"Cij", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"startmn", "[", 
               RowBox[{"[", 
                RowBox[{"khalf", "+", "1"}], "]"}], "]"}]}], "]"}], ".", 
            RowBox[{"HH", "[", 
             RowBox[{"[", "khalf", "]"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"startmn", "[", 
             RowBox[{"[", 
              RowBox[{"NNhalf", "-", "khalf", "+", "1"}], "]"}], "]"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"khalf", ",", "1", ",", "NNhalf"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Calculate", " ", "the", " ", 
         StyleBox[
          SuperscriptBox[
           SubscriptBox["H", 
            RowBox[{"m", ",", "n"}]], "k"],
          FontWeight->"Bold",
          FontSlant->"Italic"], " ", "elements"}], ",", " ", 
        RowBox[{
        "this", " ", "is", " ", "the", " ", "slow", " ", "part", " ", "of", 
         " ", "the", " ", 
         RowBox[{"code", ".", " ", "The"}], " ", "order", " ", "that", " ", 
         "we", " ", "conduct", " ", "this", " ", "calculation", " ", "is", 
         " ", "that", " ", "we", " ", "calculate", " ", "all", " ", "the", "  ", 
         StyleBox[
          SuperscriptBox[
           SubscriptBox["H", 
            RowBox[{"m", ",", "n"}]], "k"],
          FontWeight->"Bold",
          FontSlant->"Italic"], "s", " ", "with", " ", "the", " ", "same", 
         " ", "k"}], ",", " ", 
        RowBox[{
        "which", " ", "can", " ", "be", " ", "obtained", " ", "from", " ", 
         StyleBox[
          RowBox[{"HH", "[", 
           RowBox[{"[", 
            FractionBox["k", "2"], "]"}], "]"}],
          FontWeight->"Bold",
          FontSlant->"Italic"]}], ",", " ", 
        RowBox[{
        "and", " ", "then", " ", "put", " ", "them", " ", "in", " ", "the", 
         " ", "right", " ", "places", " ", "in", " ", 
         RowBox[{
          StyleBox[
           RowBox[{"HH", "[", 
            RowBox[{"[", "]"}], "]"}],
           FontWeight->"Bold",
           FontSlant->"Italic"], ".", " ", "This"}], " ", "process", " ", 
         "is", " ", "explained", " ", "in", " ", "the", " ", "Figure", " ", 
         "19", " ", "of", " ", "the", " ", 
         RowBox[{"paper", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"qCoefList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"qCoefList", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"CHij", ",", 
            RowBox[{"startmn", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"HH", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NNhalf"}], "}"}]}], "]"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Construct", " ", "the", " ", "q"}], "-", 
        RowBox[{"expansion", " ", "coefficient", " ", 
         RowBox[{
          SuperscriptBox["H", "k"], "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      "qCoefList"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VBlock", "[", 
    RowBox[{"c_", ",", "hout_", ",", "hint_", ",", " ", "z_", ",", "N_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"16", " ", "q"}], ")"}], 
      RowBox[{"hint", "-", 
       FractionBox[
        RowBox[{"c", "-", "1"}], "24"]}]], 
     SuperscriptBox["z", 
      RowBox[{
       FractionBox[
        RowBox[{"c", "-", "1"}], "24"], "-", 
       RowBox[{"2", "hout"}]}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "z"}], ")"}], 
      RowBox[{
       FractionBox[
        RowBox[{"c", "-", "1"}], "24"], "-", "hout", "-", "hout"}]], 
     SuperscriptBox[
      RowBox[{"EllipticTheta", "[", 
       RowBox[{"3", ",", "0", ",", "q"}], "]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"c", "-", "1"}], "2"], "-", 
       RowBox[{"8", 
        RowBox[{"(", 
         RowBox[{"hout", "+", "hout"}], ")"}]}]}]], 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox["q", "i"], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "N", ",", "2"}], "}"}]}], "]"}], ".", 
      RowBox[{"qCoeffient", "[", 
       RowBox[{"c", ",", "hout", ",", "hout", ",", "hint", ",", "N"}], 
       "]"}]}]}], "/.", 
    RowBox[{"q", "\[Rule]", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], " ", 
       FractionBox[
        RowBox[{"EllipticK", "[", 
         RowBox[{"1", "-", "z"}], "]"}], 
        RowBox[{"EllipticK", "[", "z", "]"}]]}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.949046643439502*^9, 3.949046658347034*^9}, {
   3.949051329149886*^9, 3.9490514190067863`*^9}, {3.9490514832836432`*^9, 
   3.949051537734374*^9}, {3.9490515685364065`*^9, 3.9490516008207655`*^9}, {
   3.9490516508375607`*^9, 3.949051776936925*^9}, {3.949051845207985*^9, 
   3.949051864968643*^9}, {3.9490535184124947`*^9, 3.949053592463991*^9}, {
   3.9490536260156126`*^9, 3.9490536736568637`*^9}, {3.9490537119221277`*^9, 
   3.949053775636834*^9}, {3.949053812618541*^9, 3.949053846236351*^9}, {
   3.9490538775636663`*^9, 3.949054013230935*^9}, {3.9490540445828953`*^9, 
   3.9490540508097663`*^9}, {3.949054110992895*^9, 3.9490541385754614`*^9}, {
   3.9490541864061017`*^9, 3.949054200408904*^9}, {3.9490542621341457`*^9, 
   3.949054317562628*^9}, 3.9490546128817263`*^9, 3.949054656965188*^9, {
   3.9490546975542793`*^9, 3.9490547308209248`*^9}, 3.9490548244660573`*^9, {
   3.949055013551738*^9, 3.949055035106743*^9}, {3.9490551161908736`*^9, 
   3.9490552856087303`*^9}, {3.9490554277825017`*^9, 3.949055439320097*^9}, {
   3.949055541050452*^9, 3.9490555760824347`*^9}, {3.9490556230999575`*^9, 
   3.949055689647951*^9}, {3.9490557702967033`*^9, 3.9490557718005886`*^9}, {
   3.949060582388571*^9, 3.9490605878951783`*^9}, 3.9490609306758995`*^9, {
   3.949061041034333*^9, 3.9490610410885954`*^9}, 3.949061810787182*^9, 
   3.9490620403817573`*^9, {3.9490621053466825`*^9, 3.9490621091352844`*^9}, {
   3.949129769485172*^9, 3.949129776941831*^9}, {3.9491298399898095`*^9, 
   3.9491298483326073`*^9}, {3.949129957171918*^9, 3.949129987277795*^9}, {
   3.949130077334992*^9, 3.94913007760433*^9}, {3.9491302324523506`*^9, 
   3.9491302500777745`*^9}, {3.9491303227374744`*^9, 3.949130322822723*^9}, {
   3.949131541242345*^9, 3.9491317002317486`*^9}, {3.9491317550129013`*^9, 
   3.949131757019565*^9}, {3.9491321596742325`*^9, 3.9491322063544474`*^9}, {
   3.9491322399098525`*^9, 3.9491322673671236`*^9}, {3.9491323791196513`*^9, 
   3.9491323825705495`*^9}, {3.949132492979499*^9, 3.9491324958294306`*^9}, {
   3.953986686467328*^9, 3.953986787253194*^9}, {3.9539884690063586`*^9, 
   3.953988469496805*^9}, {3.9540358040998554`*^9, 3.954035804172499*^9}, {
   3.954037244467719*^9, 3.954037270999818*^9}, {3.954037868765473*^9, 
   3.954037868916907*^9}, {3.954039649152633*^9, 3.9540396494273157`*^9}, {
   3.954119937539807*^9, 3.9541199517505016`*^9}},
 CellLabel->
  "In[676]:=",ExpressionUUID->"9a7915a4-0f71-4382-bf30-58a3bf0e7806"]
}, Closed]],

Cell[CellGroupData[{

Cell["Get OPE coefficients of Virasoro blocks", "Subsubsection",
 CellChangeTimes->{{3.9539873442637506`*^9, 
  3.9539873955618105`*^9}},ExpressionUUID->"58153d29-b387-4163-af7b-\
b6098bee43b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "primaryinfo", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"primaryinfo", "[", 
    RowBox[{"c_", ",", " ", "hout_", ",", " ", "hint_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "states", ",", "Numstates", ",", "zs", ",", "c2", ",", "eqs", ",", 
       "bmat", ",", "sol", ",", "c2sol", ",", "cp"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"hint", "===", 
         RowBox[{"{", "0", "}"}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", 
           RowBox[{"{", "1", "}"}]}], "}"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"states", "=", "hint"}], 
      RowBox[{"(*", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", "hint", "]"}], ",", "0"}], "]"}], 
       "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Numstates", "=", 
       RowBox[{"Length", "[", "states", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"zs", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Numstates", ">", "2"}], ",", 
         RowBox[{"Subdivide", "[", 
          RowBox[{"0.1", ",", "0.4", ",", 
           RowBox[{"Numstates", "-", "2"}]}], "]"}], ",", 
         RowBox[{"{", "0.4", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vars", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"c2", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "Numstates"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normEq", "=", 
       RowBox[{
        RowBox[{"vars", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "==", "1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"linEqs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"vars", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"VBlock", "[", 
                 RowBox[{"c", ",", "hout", ",", 
                  RowBox[{"states", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", "zv", ",", " ", 
                  "Nprecision"}], "]"}], 
                RowBox[{"VBlock", "[", 
                 RowBox[{"c", ",", "hout", ",", 
                  RowBox[{"states", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", "zv", ",", " ", 
                  "Nprecision"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"VBlock", "[", 
                 RowBox[{"c", ",", "hout", ",", 
                  RowBox[{"states", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", 
                  RowBox[{"1", "-", "zv"}], ",", " ", "Nprecision"}], "]"}], 
                RowBox[{"VBlock", "[", 
                 RowBox[{"c", ",", "hout", ",", 
                  RowBox[{"states", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", 
                  RowBox[{"1", "-", "zv"}], ",", " ", "Nprecision"}], 
                 "]"}]}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "Numstates"}], "}"}]}], "]"}], "==", 
          "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"zv", ",", "zs"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqs2", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{"linEqs", ",", 
         RowBox[{
          RowBox[{"vars", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "==", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"Solve", "[", 
        RowBox[{"eqs2", ",", "vars"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c2vals", "=", 
       RowBox[{"vars", "/.", " ", 
        RowBox[{"First", "@", "sol"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"states", ",", "c2vals"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.953987406835889*^9, 3.9539874599606223`*^9}, 
   3.9539877301175776`*^9, {3.953988106399666*^9, 3.9539881387379875`*^9}, {
   3.9539882359871545`*^9, 3.953988260582368*^9}, {3.953988388059092*^9, 
   3.9539883909877744`*^9}, {3.9539884771847105`*^9, 
   3.9539885127976227`*^9}, {3.9539886738150153`*^9, 
   3.9539886743307476`*^9}, {3.953988717715766*^9, 3.953988754307336*^9}, {
   3.9539888183575077`*^9, 3.95398882294335*^9}, 3.9539891189897366`*^9, {
   3.9539891504770193`*^9, 3.9539891524180517`*^9}, {3.9539891844448233`*^9, 
   3.9539892143537025`*^9}, {3.953989253071457*^9, 3.953989379060133*^9}, 
   3.9539894149672513`*^9, {3.9539894952095265`*^9, 3.953989569682922*^9}, {
   3.9540292063339896`*^9, 3.954029209882806*^9}, {3.954029244631873*^9, 
   3.9540292744269958`*^9}, {3.9540293190183325`*^9, 
   3.9540293226072383`*^9}, {3.954029362695161*^9, 3.9540293629688463`*^9}, {
   3.954029408084117*^9, 3.954029431110977*^9}, {3.9540294659613485`*^9, 
   3.9540295002569923`*^9}, {3.9540296252761636`*^9, 3.954029652336484*^9}, {
   3.9540296882126637`*^9, 3.954029700596221*^9}, {3.9540297540930023`*^9, 
   3.9540298281784773`*^9}, 3.9540299495598183`*^9, {3.9540300009019003`*^9, 
   3.954030007841691*^9}, 3.9540341527862816`*^9, {3.954034202453537*^9, 
   3.9540342948721523`*^9}, {3.9540343283530397`*^9, 
   3.9540343782160854`*^9}, {3.954034602975689*^9, 3.954034610252595*^9}, {
   3.9540347342195506`*^9, 3.9540347344187346`*^9}, {3.9540347880952497`*^9, 
   3.954034797586718*^9}, 3.9540348340740085`*^9, {3.954035004789035*^9, 
   3.9540350434672117`*^9}, {3.954035292444415*^9, 3.954035292523057*^9}, {
   3.954035360551341*^9, 3.9540353798372564`*^9}, {3.9540355098728256`*^9, 
   3.95403552860126*^9}, {3.9540358373360553`*^9, 3.9540359009134264`*^9}, 
   3.954036116230395*^9, {3.9540361973229785`*^9, 3.954036230361491*^9}, {
   3.9540362710856667`*^9, 3.954036280764627*^9}, {3.9540363808965645`*^9, 
   3.9540363810596175`*^9}, {3.9540364193164034`*^9, 3.954036427306012*^9}, {
   3.9540365086040707`*^9, 3.954036514698324*^9}, {3.9540372533218756`*^9, 
   3.9540372772403736`*^9}, {3.954038921732963*^9, 3.954038927087236*^9}, {
   3.954039300010076*^9, 3.95403930193658*^9}, {3.954039374006688*^9, 
   3.9540393983523335`*^9}, {3.954039800045764*^9, 3.954039854852544*^9}, 
   3.9540399051720467`*^9, {3.954040235426267*^9, 3.9540402355869274`*^9}, {
   3.9540404671175904`*^9, 3.9540404891391582`*^9}, {3.954115020946906*^9, 
   3.954115028233864*^9}, {3.954115118946803*^9, 3.9541151659840775`*^9}, 
   3.9541152008564253`*^9, {3.954115303372579*^9, 3.954115306450425*^9}, {
   3.9541154681318083`*^9, 3.9541154682572727`*^9}},
 CellLabel->
  "In[681]:=",ExpressionUUID->"37d4b4bd-de76-4a82-ab38-459141ec371d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Get global conformal spectrum by recursion relation", "Subsubsection",
 CellChangeTimes->{{3.9490558685408573`*^9, 
  3.94905589713093*^9}},ExpressionUUID->"63cec818-33fa-4881-85e6-\
867f3fc0dc3b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"orderedIntegerPartitions", ",", " ", "getSpec"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"orderedIntegerPartitions", "[", 
    RowBox[{"q_", ",", "L_"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"Permutations", ",", 
       RowBox[{"IntegerPartitions", "[", 
        RowBox[{"q", ",", 
         RowBox[{"{", "L", "}"}]}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getSpec", "[", 
   RowBox[{"hps_", ",", "maxDelta_", ",", "opeP_", ",", "hi_", ",", "C_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "solutions", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"T", "[", 
       RowBox[{"m_", ",", " ", "n_", ",", " ", "hp_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "hp"}], " ", "+", " ", 
         RowBox[{"m", "*", "n"}], " ", "-", "1", " ", "+", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"4", " ", "hp", 
            RowBox[{"(", 
             RowBox[{"hp", "+", 
              RowBox[{"m", "*", "n"}], "-", "1"}], ")"}]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"m", "-", "n"}], ")"}], "2"]}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["n", "2"], "-", "1"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Centralchargefunc", "[", 
       RowBox[{"m_", ",", " ", "n_", ",", " ", "hp_"}], "]"}], ":=", 
      RowBox[{"13", "-", 
       RowBox[{"6", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"T", "[", 
           RowBox[{"m", ",", " ", "n", ",", " ", "hp"}], "]"}], "+", 
          RowBox[{"1", "/", 
           RowBox[{"T", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", "hp"}], "]"}]}]}], 
         ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ljk", "[", 
       RowBox[{
       "j_", ",", " ", "k_", ",", " ", "m_", ",", " ", "n_", ",", " ", 
        "hp_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"j", "-", 
         RowBox[{"k", "*", 
          RowBox[{"T", "[", 
           RowBox[{"m", ",", " ", "n", ",", " ", "hp"}], "]"}]}]}], ")"}], 
       "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"T", "[", 
         RowBox[{"m", ",", " ", "n", ",", " ", "hp"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"li", "[", 
       RowBox[{"m_", ",", " ", "n_", ",", " ", "hext_", ",", " ", "hp_"}], 
       "]"}], ":=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"hext", "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"ljk", "[", 
           RowBox[{
           "1", ",", " ", "1", ",", " ", "m", ",", " ", "n", ",", " ", "hp"}],
            "]"}], "2"], "/", "4"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Pmn", "[", 
       RowBox[{"m_", ",", " ", "n_", ",", " ", "hext_", ",", " ", "hp_"}], 
       "]"}], ":=", 
      RowBox[{"Product", "[", "\[IndentingNewLine]", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"li", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", 
             RowBox[{"hext", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", " ", "hp"}], "]"}], "+", 
           RowBox[{"li", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", 
             RowBox[{"hext", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", "hp"}], "]"}], "-", 
           RowBox[{
            RowBox[{"ljk", "[", 
             RowBox[{
             "j", ",", " ", "k", ",", " ", "m", ",", " ", "n", ",", " ", 
              "hp"}], "]"}], "/", "2"}]}], ")"}], "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"li", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", 
             RowBox[{"hext", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", " ", "hp"}], "]"}], "-", 
           RowBox[{"li", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", 
             RowBox[{"hext", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", "hp"}], "]"}], "-", 
           RowBox[{
            RowBox[{"ljk", "[", 
             RowBox[{
             "j", ",", " ", "k", ",", " ", "m", ",", " ", "n", ",", " ", 
              "hp"}], "]"}], "/", "2"}]}], ")"}], "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"li", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", 
             RowBox[{"hext", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", " ", "hp"}], "]"}], "+", 
           RowBox[{"li", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", 
             RowBox[{"hext", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ",", " ", "hp"}], "]"}], "-", 
           RowBox[{
            RowBox[{"ljk", "[", 
             RowBox[{
             "j", ",", " ", "k", ",", " ", "m", ",", " ", "n", ",", " ", 
              "hp"}], "]"}], "/", "2"}]}], ")"}], "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"li", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", 
             RowBox[{"hext", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", " ", "hp"}], "]"}], "-", 
           RowBox[{"li", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", 
             RowBox[{"hext", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ",", " ", "hp"}], "]"}], "-", 
           RowBox[{
            RowBox[{"ljk", "[", 
             RowBox[{
             "j", ",", " ", "k", ",", " ", "m", ",", " ", "n", ",", " ", 
              "hp"}], "]"}], "/", "2"}]}], ")"}]}], "\[IndentingNewLine]", 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{
           RowBox[{"-", "m"}], "+", "1"}], ",", 
          RowBox[{"m", "-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{
           RowBox[{"-", "n"}], "+", "1"}], ",", 
          RowBox[{"n", "-", "1"}], ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Amn", "[", 
       RowBox[{"m_", ",", "n_", ",", "hp_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"Limit", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"24", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"T", "[", 
                  RowBox[{"m", ",", " ", "n", ",", " ", "hp1"}], "]"}]}], "-", 
                RowBox[{"T", "[", 
                 RowBox[{"m", ",", " ", "n", ",", " ", "hp1"}], "]"}]}], 
               ")"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["m", "2"], "-", "1"}], ")"}], "/", 
               RowBox[{"T", "[", 
                RowBox[{"m", ",", " ", "n", ",", " ", "hp1"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["n", "2"], "-", "1"}], ")"}], 
               RowBox[{"T", "[", 
                RowBox[{"m", ",", " ", "n", ",", " ", "hp1"}], "]"}]}]}], 
             ")"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"hp1", "->", "hp"}], "}"}]}], "]"}], 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"ljk", "[", 
              RowBox[{"a", ",", "b", ",", "m", ",", "n", ",", "hp"}], "]"}], "==",
              "0"}], "||", 
            RowBox[{
             RowBox[{"a", "==", "m"}], "&&", 
             RowBox[{"b", "==", "n"}]}]}], ",", "1", ",", 
           RowBox[{"1", "/", 
            RowBox[{"ljk", "[", 
             RowBox[{"a", ",", "b", ",", "m", ",", "n", ",", "hp"}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", 
           RowBox[{
            RowBox[{"-", "m"}], "+", "1"}], ",", "m", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{"-", "n"}], "+", "1"}], ",", "n", ",", "1"}], "}"}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"solutions", "[", "q_Integer", "]"}], ":=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "parts", "}"}], ",", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"parts", "=", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"orderedIntegerPartitions", "[", 
                 RowBox[{"q", ",", "L"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "]"}]}], ";", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"m", "[", "i", "]"}], "*", 
                    RowBox[{"n", "[", "i", "]"}]}], "==", 
                    RowBox[{"parts", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "i"}], "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"m", "[", "i", "]"}], ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"n", "[", "i", "]"}], ">", "1"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"parts", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                 ",", "Integers"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", 
                 RowBox[{"Length", "[", "parts", "]"}]}], "}"}]}], "]"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"L", ",", "1", ",", 
              RowBox[{"Floor", "[", 
               RowBox[{"q", "/", "2"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ",",
         "2"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", " ", 
       RowBox[{"m_", ",", " ", "n_", ",", "c_", ",", "hext_", ",", "hp_"}], 
       "]"}], ":=", 
      RowBox[{"Limit", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Pmn", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", "hext", ",", " ", "hp"}], 
            "]"}], 
           RowBox[{"Amn", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", "hp"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"x", " ", "-", " ", 
           RowBox[{"Centralchargefunc", "[", 
            RowBox[{"m", ",", " ", "n", ",", " ", "hp"}], "]"}]}], ")"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"x", "->", "c"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Chi]", "[", 
       RowBox[{"q_", ",", "c_", ",", "hp_"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "hEff", "}"}], ",", 
        RowBox[{"ParallelSum", "[", 
         RowBox[{
          RowBox[{"Product", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"hEff", "[", "l_", "]"}], ":=", 
              RowBox[{
               RowBox[{"hp", "+", 
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"m", "[", "i", "]"}], 
                   RowBox[{"n", "[", "i", "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"l", "-", "1"}]}], "}"}]}], "]"}]}], "/.", 
               "soln"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"\[Gamma]", "[", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"m", "[", "l", "]"}], "/.", "soln"}], ",", " ", 
               RowBox[{
                RowBox[{"n", "[", "l", "]"}], "/.", "soln"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"l", "-", "1"}], ">", "0"}], ",", 
                 RowBox[{"Centralchargefunc", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"l", "-", "1"}], "]"}], "/.", "soln"}], ",", " ", 
                   RowBox[{
                    RowBox[{"n", "[", 
                    RowBox[{"l", "-", "1"}], "]"}], "/.", "soln"}], ",", " ", 
                   RowBox[{"hEff", "[", 
                    RowBox[{"l", "-", "1"}], "]"}]}], "]"}], ",", "c"}], 
                "]"}], ",", "hi", ",", 
               RowBox[{"hEff", "[", "l", "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"l", ",", 
              RowBox[{
               RowBox[{"Length", "[", "soln", "]"}], "/", "2"}]}], "}"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"soln", ",", 
            RowBox[{"solutions", "[", "q", "]"}]}], "}"}]}], "]"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"opes", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Chi]", "[", 
               RowBox[{"q", ",", "C", ",", "hp"}], "]"}], "//", "N"}], "//", 
             "Chop"}], ",", 
            RowBox[{"{", 
             RowBox[{"q", ",", "2", ",", 
              RowBox[{"maxDelta", "-", "hp"}], ",", "2"}], "}"}]}], "]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"hp", ",", "hps"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "opes", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"hvals", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"h", ",", 
          RowBox[{"{", 
           RowBox[{"h", ",", "hp", ",", "maxDelta", ",", "2"}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"hp", ",", "hps"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "hvals", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"spec", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"opeP", "[", 
                    RowBox[{"[", "p", "]"}], "]"}], 
                   RowBox[{"opes", "[", 
                    RowBox[{"[", 
                    RowBox[{"p", ",", "i"}], "]"}], "]"}], 
                   RowBox[{"opes", "[", 
                    RowBox[{"[", 
                    RowBox[{"p", ",", "j"}], "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"hvals", "[", 
                    RowBox[{"[", 
                    RowBox[{"p", ",", "i"}], "]"}], "]"}], "+", 
                   RowBox[{"hvals", "[", 
                    RowBox[{"[", 
                    RowBox[{"p", ",", "j"}], "]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"hvals", "[", 
                    RowBox[{"[", 
                    RowBox[{"p", ",", "i"}], "]"}], "]"}], "-", 
                   RowBox[{"hvals", "[", 
                    RowBox[{"[", 
                    RowBox[{"p", ",", "j"}], "]"}], "]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"opes", "[", 
                    RowBox[{"[", "p", "]"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"opes", "[", 
                    RowBox[{"[", "p", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
              ",", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ">=", "0"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "!=", "0"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "<=", "maxDelta"}]}], "&"}]}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"Length", "[", "hps", "]"}]}], "}"}]}], "]"}], ",", "1"}],
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"specSort", "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{"spec", ",", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "specSort"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.953787173473775*^9, 3.953787184891941*^9}, {
   3.953787755769621*^9, 3.953787786245904*^9}, {3.9537878215772467`*^9, 
   3.953787830893469*^9}, {3.953787881743484*^9, 3.953787957668455*^9}, 
   3.953788084087801*^9, {3.953788251824382*^9, 3.95378826671286*^9}, {
   3.953788927020154*^9, 3.9537889295665197`*^9}, {3.95378899332442*^9, 
   3.9537890260425253`*^9}, {3.953789293634079*^9, 3.95378929479982*^9}, {
   3.95378948692047*^9, 3.95378949052734*^9}, 3.953801905094329*^9, {
   3.9540424228363276`*^9, 3.9540424498253007`*^9}, {3.954120099707021*^9, 
   3.9541201109249334`*^9}, 3.95637523328959*^9},
 CellLabel->
  "In[683]:=",ExpressionUUID->"112d5e48-5929-485c-83fa-962f2ff7d88e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Whole process", "Subsubsection",
 CellChangeTimes->{{3.949058888779634*^9, 
  3.9490588916614666`*^9}},ExpressionUUID->"ca236c00-af56-457c-afa1-\
c7301b0ce705"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"unitary", " ", "minimal", " ", 
     RowBox[{"model", ":", " ", 
      RowBox[{"p", "-", "q"}]}]}], "=", "1"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Unitary", ":", " ", 
      RowBox[{"trivial", " ", "CFT"}]}], "=", 
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "2"}], "}"}]}], ",", " ", 
    RowBox[{"Ising", "=", 
     RowBox[{"{", 
      RowBox[{"4", ",", " ", "3"}], "}"}]}], ",", " ", 
    RowBox[{
     RowBox[{"Tri", "-", 
      RowBox[{"critical", " ", "Ising"}]}], "=", 
     RowBox[{"{", 
      RowBox[{"5", ",", " ", "4"}], "}"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Tetra", "-", 
       RowBox[{"critical", " ", "Ising"}]}], "=", 
      RowBox[{"{", 
       RowBox[{"6", ",", " ", "5"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Non", "-", 
       RowBox[{"Unitary", ":", " ", 
        RowBox[{"Yang", " ", "Lee"}]}]}], "=", 
      RowBox[{"{", 
       RowBox[{"5", ",", " ", "2"}], "}"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"no", "-", "named1"}], "=", 
     RowBox[{"{", 
      RowBox[{"5", ",", " ", "3"}], "}"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"n0", "-", "named2"}], "=", 
      RowBox[{"{", 
       RowBox[{"7", ",", " ", "4"}], "}"}]}], ";"}]}], "\[IndentingNewLine]", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"modelparam", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", " ", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fusiondata", "=", 
     RowBox[{"fusionDataList", "[", "modelparam", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"fusionDataGrid", "[", "fusiondata", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9466057836245804`*^9, 3.9466057853082933`*^9}, {
   3.946605944459199*^9, 3.946605957562585*^9}, {3.9466060509916315`*^9, 
   3.946606059766614*^9}, {3.948159093621558*^9, 3.9481591878856707`*^9}, {
   3.948159266304073*^9, 3.9481593588900137`*^9}, {3.948163053095086*^9, 
   3.9481630547032027`*^9}, {3.948166437794304*^9, 3.948166437853932*^9}, {
   3.948166469825359*^9, 3.948166469931716*^9}, {3.948510551098151*^9, 
   3.9485105524712267`*^9}, {3.948510927174925*^9, 3.9485109285118127`*^9}, {
   3.9486613461395283`*^9, 3.948661372933941*^9}, {3.9486824305809865`*^9, 
   3.9486824314073772`*^9}, {3.9490543751780095`*^9, 
   3.9490544503011312`*^9}, {3.9490563283784723`*^9, 3.949056367541871*^9}, {
   3.949058767270829*^9, 3.949058767613635*^9}, {3.94905913950382*^9, 
   3.9490591400916557`*^9}, {3.9490606497789097`*^9, 3.949060650157776*^9}, {
   3.9490610657712374`*^9, 3.9490610660950375`*^9}, {3.9490611874112844`*^9, 
   3.9490611878162136`*^9}, {3.949061352503522*^9, 3.9490613528074102`*^9}, {
   3.9490620644211826`*^9, 3.9490620648194914`*^9}, {3.949130083700271*^9, 
   3.9491300850560856`*^9}, {3.949132509849437*^9, 3.949132511659667*^9}, {
   3.9491325483401747`*^9, 3.949132550149338*^9}, {3.949132589198801*^9, 
   3.9491325923137865`*^9}, {3.949134690202738*^9, 3.949134690281687*^9}, {
   3.949137741788889*^9, 3.9491377418303056`*^9}, {3.9491385706592445`*^9, 
   3.9491385725952024`*^9}, {3.953004106507663*^9, 3.953004108213222*^9}, {
   3.953177604018984*^9, 3.95317760717703*^9}, {3.9537015433633947`*^9, 
   3.953701544427978*^9}, {3.953701842370164*^9, 3.95370184485126*^9}, {
   3.953702149524925*^9, 3.953702150773452*^9}, {3.95370236535295*^9, 
   3.953702368420492*^9}, {3.953702584983733*^9, 3.953702587306734*^9}, {
   3.953703275767127*^9, 3.9537032770778112`*^9}, {3.953703853747533*^9, 
   3.953703865736744*^9}, 3.9537818364702682`*^9, {3.953781900613883*^9, 
   3.953781915405142*^9}, 3.953787973309806*^9, {3.9539760706058455`*^9, 
   3.953976072677368*^9}, {3.9540399555989714`*^9, 3.9540399907075205`*^9}, {
   3.954041074996036*^9, 3.9540410780947876`*^9}, {3.954042773477229*^9, 
   3.9540427805817432`*^9}, {3.954043128749511*^9, 3.9540431721677227`*^9}, 
   3.9540434865391684`*^9, 3.954043592625965*^9, {3.9540440347163877`*^9, 
   3.9540440396900616`*^9}, {3.9541148353050237`*^9, 3.954114837967103*^9}, {
   3.9541157509705734`*^9, 3.9541157558637815`*^9}, {3.9541171742509365`*^9, 
   3.9541171743044424`*^9}, {3.9541172558454523`*^9, 
   3.9541172675796337`*^9}, {3.954117329472988*^9, 3.9541173536982384`*^9}, {
   3.954117430204459*^9, 3.9541174316928344`*^9}, {3.9541175154038553`*^9, 
   3.954117515477764*^9}, {3.9541175870228777`*^9, 3.954117587228758*^9}, {
   3.9541184523148937`*^9, 3.954118452422802*^9}, {3.954118493294444*^9, 
   3.9541184933690505`*^9}, {3.9541185331774645`*^9, 3.954118533331455*^9}, {
   3.9541186498564715`*^9, 3.954118650008819*^9}, {3.9541190803206177`*^9, 
   3.954119080474722*^9}, {3.954119164352128*^9, 3.9541191718058825`*^9}, {
   3.954119284522814*^9, 3.9541192847171383`*^9}, {3.954119368862632*^9, 
   3.954119368898443*^9}, {3.9541196696882286`*^9, 3.9541196698364725`*^9}, {
   3.9541197096631784`*^9, 3.9541197265710077`*^9}, {3.9541202153174615`*^9, 
   3.954120215651066*^9}, {3.9541469550031853`*^9, 3.9541469554824133`*^9}, {
   3.954227731016938*^9, 3.954227736989321*^9}, {3.954228225746507*^9, 
   3.954228229280274*^9}, {3.954228403322193*^9, 3.9542284036371098`*^9}, {
   3.954228696529196*^9, 3.954228699325961*^9}, {3.9542287581598363`*^9, 
   3.9542287582900753`*^9}, {3.9542288497262526`*^9, 
   3.9542288507986917`*^9}, {3.95422942997946*^9, 3.9542294300538235`*^9}, {
   3.954233290712535*^9, 3.9542332913545523`*^9}, {3.9542356949541335`*^9, 
   3.9542356953463078`*^9}, {3.954235807241703*^9, 3.9542358073941264`*^9}, {
   3.954280689957222*^9, 3.954280692451733*^9}, {3.954281036741555*^9, 
   3.9542810368846064`*^9}, {3.9543876794281125`*^9, 
   3.9543876824457836`*^9}, {3.954400047617606*^9, 3.954400049860591*^9}, {
   3.9544056760675726`*^9, 3.9544056764141045`*^9}, {3.954407703088746*^9, 
   3.9544077034999247`*^9}, {3.954418471161107*^9, 3.954418471443042*^9}, {
   3.9584746854605083`*^9, 3.9584746906378064`*^9}, {3.9584782539148455`*^9, 
   3.9584782589480276`*^9}, {3.958478530570976*^9, 3.9584785309241*^9}, {
   3.9591993997725463`*^9, 3.959199427981531*^9}, {3.959199789964698*^9, 
   3.959199792541931*^9}, {3.9591998852339497`*^9, 3.959199885562417*^9}, {
   3.959203215981311*^9, 3.9592032163195653`*^9}, {3.9592033150951977`*^9, 
   3.959203315574909*^9}, {3.959250160562665*^9, 3.9592501713703175`*^9}, {
   3.959250255800708*^9, 3.9592502558693867`*^9}, {3.959325102553991*^9, 
   3.959325104317315*^9}, {3.9593256374136496`*^9, 3.959325644045253*^9}, {
   3.9593260563010397`*^9, 3.9593260589572783`*^9}, {3.959326184695484*^9, 
   3.95932618665546*^9}, {3.959372469648033*^9, 3.9593724729515615`*^9}, {
   3.95941680477453*^9, 3.9594168052907004`*^9}, {3.9594960967901535`*^9, 
   3.95949609720588*^9}, {3.9594965161349277`*^9, 3.959496516470846*^9}, {
   3.959561428441385*^9, 3.9595614342446427`*^9}, {3.9595615282377963`*^9, 
   3.959561531123165*^9}, {3.9595615703143225`*^9, 3.959561575804053*^9}, {
   3.9595617376146555`*^9, 3.9595617394187737`*^9}, {3.9595620094157987`*^9, 
   3.9595620095042515`*^9}, {3.959562096262702*^9, 3.9595620963282785`*^9}, {
   3.9595635275696*^9, 3.959563530288028*^9}, {3.959670313605609*^9, 
   3.9596703146378098`*^9}, {3.9597347148342233`*^9, 3.959734716727923*^9}, {
   3.9597353207827873`*^9, 3.9597353211422157`*^9}, {3.959757862646017*^9, 
   3.9597578988256836`*^9}, {3.9597579664790964`*^9, 3.959757966528386*^9}, {
   3.9597698601856017`*^9, 3.959769860301833*^9}, {3.9598118775242825`*^9, 
   3.959811879375353*^9}, {3.959904676578793*^9, 3.959904677148816*^9}},
 CellLabel->
  "In[686]:=",ExpressionUUID->"b2894711-526d-4eae-b4e1-47b797ee2bf1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{"\"Central charge = \"", 
        FractionBox["1", "2"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->14,
      FontWeight->Bold]},
    {
     TagBox[GridBox[{
        {"\<\"Weight\"\>", "\<\"Levels\"\>", "\<\"fusion Channels\"\>", \
"\<\"Conformal Weights\"\>"},
        {"0", 
         TemplateBox[{
           RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], "\"; \"", 
           RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}]},
          "RowDefault"], 
         TemplateBox[{
           RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]},
          "RowDefault"], 
         TemplateBox[{"0"},
          "RowDefault"]},
        {
         FractionBox["1", "16"], 
         TemplateBox[{
           RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "\"; \"", 
           RowBox[{"{", 
             RowBox[{"2", ",", "2"}], "}"}]},
          "RowDefault"], 
         TemplateBox[{
           RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], "\"; \"", 
           RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}]},
          "RowDefault"], 
         TemplateBox[{"0", "\", \"", 
           FractionBox["1", "2"]},
          "RowDefault"]},
        {
         FractionBox["1", "2"], 
         TemplateBox[{
           RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], "\"; \"", 
           RowBox[{"{", 
             RowBox[{"2", ",", "1"}], "}"}]},
          "RowDefault"], 
         TemplateBox[{
           RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]},
          "RowDefault"], 
         TemplateBox[{"0"},
          "RowDefault"]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {
            GrayLevel[0.85], 
            GrayLevel[1]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.9541188192725105`*^9, 3.954118853598956*^9, 3.9541190352268867`*^9, {
   3.954119078738863*^9, 3.9541190806714673`*^9}, 3.9541191647640066`*^9, {
   3.9541192606939373`*^9, 3.9541192849438753`*^9}, 3.954119369641992*^9, {
   3.954119664339754*^9, 3.954119670078848*^9}, {3.9541197100919504`*^9, 
   3.9541197270755806`*^9}, 3.9541198081787977`*^9, {3.954119881072633*^9, 
   3.954119908523305*^9}, 3.9541199691543465`*^9, 3.9541202162328568`*^9, 
   3.9541469564060473`*^9, 3.954150094045973*^9, 3.9542277386680965`*^9, 
   3.954228230038247*^9, 3.954228405661234*^9, 3.954228699887808*^9, 
   3.9542287585860167`*^9, 3.9542288514275665`*^9, 3.954229430683625*^9, 
   3.9542332919873323`*^9, 3.9542356964142823`*^9, 3.9542358075673323`*^9, 
   3.954280692947744*^9, 3.954281037164033*^9, {3.9542857698157063`*^9, 
   3.954285793561265*^9}, 3.954387683012686*^9, 3.954400050368628*^9, 
   3.9544056769988365`*^9, 3.954407704062385*^9, 3.954418472184656*^9, 
   3.956373317447315*^9, 3.956378069781803*^9, 3.956391765693881*^9, 
   3.9584746952393866`*^9, 3.95847825967441*^9, 3.9584785312582693`*^9, {
   3.959199357937503*^9, 3.9591993662498264`*^9}, {3.9591994024357376`*^9, 
   3.959199428817007*^9}, 3.9591997929584208`*^9, 3.959199885987735*^9, 
   3.959203216792326*^9, 3.959203316047205*^9, {3.9592501633919115`*^9, 
   3.9592501718231983`*^9}, 3.9592502564272146`*^9, 3.9593251049552774`*^9, 
   3.9593256448558846`*^9, 3.9593260596368313`*^9, 3.959326187066719*^9, 
   3.9593724733125544`*^9, 3.9594168058108172`*^9, 3.9594960977547474`*^9, 
   3.959496516952735*^9, {3.9595614298636923`*^9, 3.9595614349364023`*^9}, 
   3.9595615315641785`*^9, 3.959561576164007*^9, 3.95956173988623*^9, 
   3.959562010069084*^9, 3.9595620967629633`*^9, 3.959563530722287*^9, 
   3.9597347171236515`*^9, 3.9597353215075226`*^9, {3.959757864986391*^9, 
   3.9597578990868597`*^9}, 3.959757966769633*^9, 3.9597698605476*^9, 
   3.9598118797322965`*^9, 3.959904678013025*^9},
 CellLabel->
  "Out[688]=",ExpressionUUID->"691d1d81-4564-49df-9e5a-c1bba8faff0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hext", "=", 
   RowBox[{"1", "/", "16"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"centralchargeval", ",", " ", "hext", ",", " ", "hint"}], "}"}], 
   " ", "=", " ", 
   RowBox[{"getFusionInfo", "[", 
    RowBox[{"hext", ",", " ", "fusiondata"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"cwprimaries", ",", " ", "cwopes"}], "}"}], " ", "=", " ", 
   RowBox[{"primaryinfo", "[", 
    RowBox[{
     RowBox[{"centralchargeval", "+", 
      SuperscriptBox["10", 
       RowBox[{"-", "10"}]]}], ",", " ", "hext", ",", " ", "hint"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"displayFusionResult", "[", 
  RowBox[{
  "centralchargeval", ",", " ", "hext", ",", " ", "cwprimaries", ",", " ", 
   "cwopes"}], "]"}]}], "Input",
 CellChangeTimes->{{3.954044048196208*^9, 3.9540441111733932`*^9}, {
   3.954044589001823*^9, 3.954044625633725*^9}, 3.9541148520329256`*^9, {
   3.954114885986697*^9, 3.954114896264805*^9}, {3.9541149560649424`*^9, 
   3.9541149562566967`*^9}, {3.954115173325738*^9, 3.9541151885556355`*^9}, {
   3.95411531620582*^9, 3.9541153164969316`*^9}, {3.9541157659065824`*^9, 
   3.9541157660669584`*^9}, {3.9541159667019186`*^9, 3.954116104907116*^9}, {
   3.9541162335437965`*^9, 3.9541162588169985`*^9}, {3.95411630701088*^9, 
   3.9541163072049875`*^9}, {3.9541171818453226`*^9, 
   3.9541171849205494`*^9}, {3.95411759972607*^9, 3.954117620626687*^9}, 
   3.9541197612323446`*^9, {3.954120015149783*^9, 3.95412001520142*^9}, {
   3.9541202190524936`*^9, 3.954120219475773*^9}, {3.9541469674775105`*^9, 
   3.9541469681932554`*^9}, {3.9542277446010246`*^9, 
   3.9542277725748863`*^9}, {3.9542281975654306`*^9, 3.954228197948306*^9}, {
   3.954228253421041*^9, 3.954228253620475*^9}, {3.9542282912194004`*^9, 
   3.9542282927345634`*^9}, {3.9542283651731844`*^9, 3.954228365832239*^9}, {
   3.9542284327386637`*^9, 3.954228481330104*^9}, {3.9542286176704206`*^9, 
   3.9542286182880673`*^9}, 3.954228671633521*^9, {3.954228704031792*^9, 
   3.954228704811092*^9}, {3.9542287810885344`*^9, 3.9542288313475184`*^9}, {
   3.9542292590031204`*^9, 3.954229259085253*^9}, {3.9542292928988533`*^9, 
   3.9542293154250755`*^9}, {3.9542357154743586`*^9, 3.954235771788657*^9}, {
   3.9542358516100054`*^9, 3.9542358517746944`*^9}, {3.954235882568104*^9, 
   3.9542358829556723`*^9}, 3.9542360519821167`*^9, {3.9542361981216183`*^9, 
   3.9542361986015315`*^9}, 3.9542363389806056`*^9, {3.9542807280105524`*^9, 
   3.95428072874043*^9}, {3.954282467533643*^9, 3.954282467695368*^9}, {
   3.9543876871716876`*^9, 3.9543876932783537`*^9}, {3.9543899158143263`*^9, 
   3.954389916095973*^9}, {3.9544000526574397`*^9, 3.9544000540161304`*^9}, {
   3.954405681453429*^9, 3.9544056817044134`*^9}, {3.9544077078141994`*^9, 
   3.9544077085761127`*^9}, {3.9544184768171196`*^9, 3.954418499456908*^9}, {
   3.959250264366993*^9, 3.9592502670290685`*^9}, {3.9593251096283503`*^9, 
   3.9593251114831505`*^9}, {3.9593257155314784`*^9, 
   3.9593257168177943`*^9}, {3.9593260667669044`*^9, 3.959326067202373*^9}, {
   3.959326207011861*^9, 3.9593262088085017`*^9}, {3.959372530113751*^9, 
   3.959372531269908*^9}, {3.959416816800165*^9, 3.959416820409974*^9}, {
   3.9594961020506105`*^9, 3.959496103038923*^9}, {3.959496319533033*^9, 
   3.959496320728614*^9}, {3.9594965202313643`*^9, 3.9594965202774177`*^9}, {
   3.9597347252740297`*^9, 3.9597347308300686`*^9}, {3.959735327035773*^9, 
   3.9597353274083433`*^9}, {3.9597698704533463`*^9, 3.959769870616989*^9}, {
   3.959811882043302*^9, 3.9598118837568245`*^9}, {3.959904682108531*^9, 
   3.9599046843479643`*^9}},
 CellLabel->
  "In[689]:=",ExpressionUUID->"63564b08-30ed-4e6f-b8a4-03f522258386"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Parameter\"\>", "\<\"Value\"\>"},
    {"\<\"Central charge\"\>", 
     FractionBox["1", "2"]},
    {"\<\"Chosen external weight (h_ext)\"\>", 
     FractionBox["1", "16"]},
    {"\<\"Primary weights\"\>", 
     TemplateBox[{", ", "\", \"", "0", 
       FractionBox["1", "2"]},
      "RowWithSeparators"]},
    {"\<\"OPE coefficients\"\>", 
     TemplateBox[{", ", "\", \"", "1.`", "0.25000000000979344`"},
      "RowWithSeparators"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {
        GrayLevel[0.85], 
        GrayLevel[1]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9597347322980165`*^9, 3.9597353278200684`*^9, 
  3.959769871524481*^9, 3.959811884665312*^9, 3.959904685524398*^9},
 CellLabel->
  "Out[692]=",ExpressionUUID->"881358d6-3a34-499f-9f4c-006a114b26af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxDelta", "=", 
   RowBox[{"80", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", " ", "=", " ", 
   RowBox[{"getSpec", "[", 
    RowBox[{"cwprimaries", ",", "maxDelta", ",", "cwopes", ",", 
     RowBox[{"{", 
      RowBox[{"hext", ",", " ", "hext", ",", " ", "hext", ",", " ", "hext"}], 
      "}"}], ",", "centralchargeval"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"spec", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<central charge check: \>\"", ",", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "*", "hext"}], ")"}], "2"], "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", "centralchargeval"}], ")"}]}], "//", "N"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9490563754474115`*^9, 3.9490564245897026`*^9}, {
   3.9490564567415743`*^9, 3.9490564906140804`*^9}, {3.9490566570324364`*^9, 
   3.9490566677726083`*^9}, {3.949056719627141*^9, 3.9490567296593695`*^9}, {
   3.9490569030039043`*^9, 3.949056903930591*^9}, {3.9490587363937063`*^9, 
   3.949058783145045*^9}, {3.9490606085585003`*^9, 3.949060622243588*^9}, {
   3.949061204008532*^9, 3.9490612044466105`*^9}, {3.949131168371808*^9, 
   3.949131181135968*^9}, {3.949132672733765*^9, 3.94913267383279*^9}, {
   3.953084754760572*^9, 3.9530847548426733`*^9}, 3.953632219365056*^9, {
   3.953694814648876*^9, 3.9536948148872967`*^9}, 3.953701562097993*^9, {
   3.9537891113729277`*^9, 3.953789123359559*^9}, {3.953789513576346*^9, 
   3.953789517329173*^9}, {3.953801920183545*^9, 3.9538019210084867`*^9}, {
   3.954040305775401*^9, 3.9540403225412626`*^9}, {3.9540405195187187`*^9, 
   3.9540405515438533`*^9}, 3.95404061668234*^9, 3.9540408521056623`*^9, {
   3.954042615921384*^9, 3.9540426170151196`*^9}, {3.954114921308953*^9, 
   3.954114921620863*^9}, {3.954115802106392*^9, 3.9541158031347156`*^9}, {
   3.95414697628648*^9, 3.954146976369196*^9}, {3.9541471688697276`*^9, 
   3.9541471695600243`*^9}, {3.954147878418623*^9, 3.9541478891209188`*^9}, {
   3.9541917634562597`*^9, 3.9541917642636685`*^9}, {3.9541918627063437`*^9, 
   3.954191865442237*^9}, {3.954235951873464*^9, 3.9542359520476947`*^9}, {
   3.954236208250089*^9, 3.9542362083736515`*^9}, {3.9542838435152855`*^9, 
   3.9542838472341213`*^9}, {3.9594202990895643`*^9, 3.959420303817814*^9}},
 CellLabel->
  "In[693]:=",ExpressionUUID->"e00f8de4-49fc-4e99-ab30-f92671e39e26"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0", "0"},
     {"0.25000000000979344`", "1", "0"},
     {"0.01562499999999999`", "2", "2"},
     {"0.00021972656249999968`", "4", "4"},
     {"0.00024414062499999967`", "4", "0"},
     {"0.00001525878906309772`", "5", "4"},
     {"3.433227539062493`*^-6", "6", "2"},
     {"6.811959402901782`*^-6", "6", "6"},
     {"7.629394531548868`*^-7", "7", "6"},
     {"4.8279762268066264`*^-8", "8", "0"},
     {"1.0643686567034028`*^-7", "8", "4"},
     {"2.6966238911057335`*^-7", "8", "8"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.954228713029275*^9, {3.9542287862971926`*^9, 3.954228835580742*^9}, 
   3.954229264823354*^9, {3.9542292988816495`*^9, 3.954229318851485*^9}, {
   3.954235721011859*^9, 3.954235775726869*^9}, 3.954235855685107*^9, 
   3.9542358879133043`*^9, 3.9542359552524796`*^9, 3.954236056527195*^9, {
   3.9542362031971655`*^9, 3.954236210035103*^9}, 3.9542363420262423`*^9, 
   3.954280747431093*^9, 3.954282473256994*^9, 3.9542910690132103`*^9, 
   3.954387700736483*^9, 3.954389919460994*^9, 3.954400063352356*^9, 
   3.954405687121241*^9, 3.954407717104971*^9, 3.954418481219618*^9, 
   3.954418536718108*^9, 3.956373488459358*^9, 3.9593251952208157`*^9, 
   3.9593257298872967`*^9, 3.95932622048355*^9, 3.9593725481221724`*^9, 
   3.959420188252158*^9, 3.95942030557205*^9, 3.959496113272604*^9, 
   3.9594963270077696`*^9, 3.959496525992153*^9, 3.9597347458217683`*^9, 
   3.959735333864521*^9, 3.959769879953662*^9, 3.9598118969104156`*^9, 
   3.9599046914142866`*^9},
 CellLabel->
  "Out[695]//MatrixForm=",ExpressionUUID->"cc4ddd30-8525-4806-8f1d-\
2ec49ab85944"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"central charge check: \"\>", "\[InvisibleSpace]", "0.015625`"}],
  SequenceForm["central charge check: ", 0.015625],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9542359552614775`*^9, 3.9542360565361977`*^9, {3.9542362032051725`*^9, 
   3.9542362100431747`*^9}, 3.9542363420381403`*^9, 3.954280747442086*^9, 
   3.9542824732779913`*^9, 3.954291069021215*^9, 3.9543877007464843`*^9, 
   3.9543899194679995`*^9, 3.9544000633632946`*^9, 3.954405687131281*^9, 
   3.954407717113965*^9, 3.9544184812288866`*^9, 3.954418536725112*^9, 
   3.9563734884609327`*^9, 3.959325195232782*^9, 3.9593257298972993`*^9, 
   3.959326220527113*^9, 3.959372548137272*^9, 3.9594201882602654`*^9, 
   3.9594203055791016`*^9, 3.959496113280611*^9, 3.959496327017328*^9, 
   3.959496525999195*^9, 3.9597347458491297`*^9, 3.959735333878683*^9, 
   3.9597698799617047`*^9, 3.959811896918398*^9, 3.95990469142029*^9},
 CellLabel->
  "\:8a08\:7b97\:4e2d\:ff1aIn[693]:=",ExpressionUUID->"f7022d3f-537a-47e0-\
ab0d-6e2c1268be3e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Crossing equation for each blocks", "Subsubsection",
 CellChangeTimes->{{3.9566617159354897`*^9, 
  3.956661738454852*^9}},ExpressionUUID->"12e0aabb-9e9b-4908-997c-\
9c6365da0cf7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "Gpart", ",", " ", "Gglobal", ",", " ", "globalcrossingeq", ",", " ", 
    "Vcrossingeq", ",", " ", "hybridcrossingeq", ",", " ", "z", ",", " ", 
    "zb"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gpart", "[", 
   RowBox[{"x_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", 
    FractionBox["b", "2"]], 
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{
     RowBox[{"b", "/", "2"}], ",", 
     RowBox[{"b", "/", "2"}], ",", "b", ",", "x"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gglobal", "[", 
    RowBox[{"z_", ",", "zb_", ",", "\[CapitalDelta]_", ",", "l_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"l", ",", "0"}], "]"}]}], ")"}]], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Gpart", "[", 
        RowBox[{"z", ",", 
         RowBox[{"\[CapitalDelta]", "+", "l"}]}], "]"}], 
       RowBox[{"Gpart", "[", 
        RowBox[{"zb", ",", 
         RowBox[{"\[CapitalDelta]", "-", "l"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Gpart", "[", 
        RowBox[{"zb", ",", 
         RowBox[{"\[CapitalDelta]", "+", "l"}]}], "]"}], 
       RowBox[{"Gpart", "[", 
        RowBox[{"z", ",", 
         RowBox[{"\[CapitalDelta]", "-", "l"}]}], "]"}]}]}], ")"}]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Crossing", "  ", "equation"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"globalcrossingeq", "[", 
    RowBox[{"hexp_", ",", " ", "spectrum_", ",", " ", "z_", ",", " ", "zb_"}],
     "]"}], " ", ":=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"spectrum", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "n"}], "]"}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "z"}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "-", "zb"}], ")"}]}], ")"}], 
          RowBox[{"2", " ", "hexp"}]], 
         RowBox[{"Gglobal", "[", 
          RowBox[{"z", ",", " ", "zb", ",", 
           RowBox[{"spectrum", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", " ", "n"}], "]"}], "]"}], ",", " ", 
           RowBox[{"spectrum", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", " ", "n"}], "]"}], "]"}]}], " ", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"z", " ", "zb"}], ")"}], 
          RowBox[{"2", " ", "hexp"}]], 
         RowBox[{"Gglobal", "[", 
          RowBox[{
           RowBox[{"1", "-", "z"}], ",", " ", 
           RowBox[{"1", "-", "zb"}], ",", 
           RowBox[{"spectrum", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", " ", "n"}], "]"}], "]"}], ",", " ", 
           RowBox[{"spectrum", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", " ", "n"}], "]"}], "]"}]}], " ", "]"}]}]}], 
       ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"spectrum", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vcrossingeq", "[", 
    RowBox[{
    "hexp_", ",", " ", "central_", ",", " ", "spectrum_", ",", " ", "z_", ",",
      " ", "zb_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"spectrum", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "n"}], "]"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"VBlock", "[", 
          RowBox[{
           RowBox[{"central", "+", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]]}], ",", "hexp", ",", 
           RowBox[{"spectrum", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", " ", "n"}], "]"}], "]"}], ",", " ", "z", ",", 
           "10"}], "]"}], 
         RowBox[{"VBlock", "[", 
          RowBox[{
           RowBox[{"central", "+", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]]}], ",", "hexp", ",", 
           RowBox[{"spectrum", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", " ", "n"}], "]"}], "]"}], ",", " ", "zb", ",", 
           "10"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"VBlock", "[", 
          RowBox[{
           RowBox[{"central", "+", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]]}], ",", "hexp", ",", 
           RowBox[{"spectrum", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", " ", "n"}], "]"}], "]"}], ",", " ", 
           RowBox[{"1", "-", "z"}], ",", "10"}], "]"}], 
         RowBox[{"VBlock", "[", 
          RowBox[{
           RowBox[{"central", "+", 
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]]}], ",", "hexp", ",", 
           RowBox[{"spectrum", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", " ", "n"}], "]"}], "]"}], ",", " ", 
           RowBox[{"1", "-", "zb"}], ",", "10"}], "]"}]}]}], ")"}]}], 
     "\[IndentingNewLine]", ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"spectrum", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9441266848283215`*^9, 3.9441267223970766`*^9}, {
   3.9452513640524683`*^9, 3.945251395882287*^9}, {3.9452514262560472`*^9, 
   3.9452514272329407`*^9}, 3.946894313130519*^9, 3.9481627099451056`*^9, {
   3.9481628322639227`*^9, 3.9481628368421607`*^9}, 3.9481664139878807`*^9, {
   3.9491365621402044`*^9, 3.9491365715864415`*^9}, {3.949136752834091*^9, 
   3.949136772547372*^9}, {3.949137381542279*^9, 3.9491373818210216`*^9}, {
   3.9491374780507417`*^9, 3.9491374949789553`*^9}, 3.9541522304041243`*^9, {
   3.9563974538110647`*^9, 3.9563974873953357`*^9}, {3.9563976160446744`*^9, 
   3.956397647149248*^9}, {3.956398225750727*^9, 3.9563982293770833`*^9}, {
   3.9563984116392016`*^9, 3.956398422622116*^9}, {3.9564058202720804`*^9, 
   3.9564058309840927`*^9}, 3.956543193637101*^9, {3.9565513846635027`*^9, 
   3.956551462163314*^9}, {3.9565517042710423`*^9, 3.9565517437518826`*^9}, 
   3.9565519362407866`*^9, 3.9566361705455627`*^9, {3.956636252137724*^9, 
   3.95663633681325*^9}, {3.9566364161506605`*^9, 3.956636424165967*^9}, {
   3.956636490180975*^9, 3.9566365037048883`*^9}, {3.956636707456053*^9, 
   3.9566367495302534`*^9}, {3.9566372983019*^9, 3.9566372999395056`*^9}, {
   3.956637700003272*^9, 3.9566377173628864`*^9}, {3.9566510273388243`*^9, 
   3.956651045801507*^9}, {3.9566510980350113`*^9, 3.9566511042551365`*^9}, {
   3.9566592016909313`*^9, 3.956659211860216*^9}, {3.956659410867116*^9, 
   3.9566594123236513`*^9}, 3.9566608015703697`*^9, 3.9566608854763203`*^9, {
   3.9566609616477003`*^9, 3.9566609717448654`*^9}, {3.9566610131526423`*^9, 
   3.9566610612325134`*^9}, {3.9566617594404755`*^9, 3.956661781592621*^9}, {
   3.95666184128928*^9, 3.9566618427971125`*^9}, {3.9566619090438337`*^9, 
   3.956661909407563*^9}, 3.9599046025769706`*^9},
 CellLabel->
  "In[697]:=",ExpressionUUID->"944bc207-5976-4fa5-ac7a-22c0cff23255"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Vcrossingeq", "[", 
    RowBox[{"hext", ",", " ", "centralchargeval", ",", " ", 
     RowBox[{"{", 
      RowBox[{"cwopes", ",", " ", "cwprimaries"}], "}"}], ",", " ", 
     RowBox[{"x", "+", 
      RowBox[{"I", "*", "y"}]}], ",", " ", 
     RowBox[{"x", "-", 
      RowBox[{"I", "*", "y"}]}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"3", "/", "10"}], ",", 
     RowBox[{"5", "/", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"3", "/", "10"}], ",", 
     RowBox[{"5", "/", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9567179200752354`*^9, 3.9567179745119357`*^9}},
 CellLabel->
  "In[702]:=",ExpressionUUID->"4625b1d2-5b48-492f-9b4b-74baf475af6b"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxdnHd8lNXyh0NR8CpNQfgJiAhS1QBR6ZLcK0iVSO8glw6hBwgENhBSSCGd
EJIQEOklSIlw5dC7kSKdiPQuUpVQ9/fO7jvzncV/9uPj8ey8z7559+ycmVO5
/6gOAwt6eXnVes3Lq5D1+uT1qH/7+Bxrxq8W8upXPtncLv+fi34Vj3vw7dMS
zbk6zx3+RU548NO3483h5hvf73vfk4/eO9vs6DHSBOSd9OB1DkSb9aOq9wre
c8qDrz0eaRbPvPA0Kvu0B+92L8ykptE/Zzz4gnKhZtaaDg2WhZ714OXah5gp
u948lROQ5/m+70wxAad3B+7p+rsH358ZaPremVr6uN85Dx5ffbT5tmD99Zdq
/+HBhwQPNP8pe+/b+2XOe44P7mwafbz8ntPpwXdfe7ajCf87e6Xx9z5OEc+a
nw5OEs+adzuZIJ41L9ooXjxr3q9VrHjW/IJ3lHjWvOWHEeJZ8wWVZopnzevU
ni6eNfeNCRbPHnz7BPGsecm3xohnDz+rB4lnzW/EdhHP4CH+L6aeF8/sz+XT
Z4541rzcyGTxrPmkDYniWfPcggni2WP+zbPFs+b9gqPFs+bxzSPFs+YXPgoT
zx7zF50hnjVfkD9VPGu+9tJE8ax5nSvwrPmNg4PFs+abTnUVz4qH3C+0bwt7
Zk+uv3fvVPGs+f5uKeJZ8yFRSeLZg++DZ82LlogXz5qXWxsjnjXv13uWeNZ8
07vh4lnzBnnwrHm39g7xrPmFp5PEs0ecP40Vz5rHXx8inj3mOdxNPCve6+ci
OeKZfbjmeX+ueNZ8++dzxLPmDToli2fNPw5JFM+ad1oPzx7vezlWPGvuOyhK
PGt+pHCEePYYnxEqnjWf2TpEPHu879Mg8az5phHjxLPmXg+HimfN/fd2F8+K
P71S4Lh45ut2zVMoTTxrvv/1VPGseY0yKeJZ84xPk8Sz5v7fJohnzTflzxbP
mpccEC2ePeI5A8+ar+0+UzxrXu4aPGs+9/Fk8ax50TrjxbPmLe8ME88e15XX
QzwrPrPa/UXyfObrc81zGp41982FZ82T98Gz5puOwrPmW67Bs+YlC8WLZ80j
28eIZ4/xKyLFs+alS4aJZ80/mDRdPGt+4coU8az5+Avw7OFh/3Dx7ME39BTP
ivveuJQlnvk6XH7mzxPPmk+aPlc8a15j7BzxrLl/QLJ41vzC2ETxrHnLafCs
+RHvWPHsMc+QWeJZ8+c58Kx5hddniGfNG/wcLJ41XxUaKJ41r7NshHjW/PSO
XuLZw8O0CvLc4HiJ3+iYLp41H/9xmnjWvNxbqeJZ803P4Fnztx7Cs+b7H8Kz
5v5OeNb8g0pR4lnzCt+Ei2fNL0TCs+Z1IqeKZ817fThBPHvEGRggnjU/Pai3
eFY858nrG8Qzx+X6XngBz5rX2Q3Pmi/LhGfNNwSniGfN2w5LEs+af9w3QTxr
7rt1tnjWfPQBePaY/xw8a37vGTxrnt92mnjWvGUOPGvuVW+keNZ8Up0+4lnx
ebWfbJPnBr+/63NJyhDPmsd3nCeePbi1PmHPmj9/BM+aHzkJz5p/tROeNa8x
NE48a76pT7R41vzP/hHiWfPSw0LFs+YfFHSIZ4/xPhPFs+YhF+HZw9vP8Kz4
muzX18n9zO/j+vsqlymeNX/+KzxrviABnjWv0X+OeNZ8RINk8az5V+8limfN
rxSOF8+aH7kNz5qvOg3PmocchWfNh2TAs+bdVsCz5qOTR4lnDw8z+opnxbt9
+l68eOb5aHy/OHjWfNKX6eJZ801P4FnzRzvhWfOqCfCs+Q8j4Fnz3W3hWfPc
YTHi2WP815HiWfPtH88Uz5qPLx8injW/8e4k8ax5g7dHi2fNtxTsJ54VX+X9
cKU8N/j/cz1vH8Gz5jFZ8Kz5kC5p4lnzVWVTxbPmky7As+ZeG+FZ85Yx8Kx5
Rh48az5gOTx7jJ8Mz5q/1RueNW8QAs+aF20Pz5rnd4FnxVufe448Ev931zxt
54tnzfc/gGfNByyGZ82D+8Oz5n9WSxHPmns9hGfNP9sLz5ov8IsVz5pP8pol
njW/sheeNa+RAs+ad8uDZ81LJ8Kz5jFJ8Kz4N389391kbMK1hEbLjjXjV9fn
aP2+YP+aF12SbLYubLswP+q8Bx9duYXMr3iTpiV/2ML/zv8fja/wT4bMr3m5
yvNlfs0fDfQX7unH3/D8Oj8Z2TZJxnvkRYc0l/F6Hv/3MyV+vG9I6dgCZ7Z8
0bbBrZyAY8341TU+P8k8v/a0ZfCe8x7cd+Xnhv+d/zvx41mZMl7ztkG+4kHP
M6Rfsoz3yPf2xfw6/gsbET/mD/k7avopid8jv70+Scar963yrxnn5HtEx1m0
0XyJR79vnUxf0+7J8GLWFXrkLfPWJZmFt9udzs1FXt1p/ZPgnyCcxxN/3CzR
/H3Oe1FaGvLqLy1+/c844Xr84uPxptWRUiMHDUK+/YXFD38dK5zHE//pj9km
c+fDBj4+yMM/t7hjdZRwHk/8cKUYc3/DiULWykbGP7N4WvlI4TyeeNCIWab5
0p8O5eZ6ju+XEiacxz+1+IMd4SbtlTw/8axyoeZO9JQBgwYhz//E4i2Xhch4
PU9WpZkyXvYxLG5mTTd+03p7+/hgX+C+xe8GBgvn8daH6dz3cqpJGU1TYjzx
Q8snCufxdy2+7c9J5mb/yntyc7G/8JfFV14aK5zH37F49WvjTNPOheLT0rDv
cNbi7/mOEM7jT1m83ZEAk/D11R6DBmE/gvj53P7Cefxxi9c5/l9zteG+j3x8
8Pey3uJjDnYQzuPX3e3s23hTR7lvdR74iPV84/uTOd1v5z9MkvtQcceIxQly
vzGn+zbPO17uK+Z0Xx2cESv3D3O6T1auiZL7hDl9vmkXI+Rzl/0oiuejMPnc
medbfNKIGfL5MqfP6/I0h3yOzOnzullrsnxezP+0+KjL4+VzYX7C4h1ajRL/
zH+zeNVjA8Qz82xn2WZ1/+gknnUeODMpRTwzJ8/OF/CsecToRPHMnDzXvw3P
zMnnb8dni2fNh+ZFi2fm5DnqUaR4lv09em68Gy6emZPnpf8OFc/MH1t89vgQ
8cyc7v+YHlPEM3Py/PB0oHhmfoueP71Hi2fmR+h99w0Uz8xXnj/bNDmns3jm
dQ15OzN2jnjWPC03WTwzt3w61noniWfFndvSEsSzHr/tX/HimTn5bFw4Vjxr
XurpLPEs+6V0vYUjxDNz8vztGzPFM3Py/OD96eKZOfkMHh8snpmTz0XrJ4hn
5jctPqPAGPHM/JDF38geJJ6ZL2uW1eT1+C7imdeJ5PObFqniWfO4hBTxzJy8
lbwKz4o7/7a+B9kzc+v7yzF+ITwzJ5+x78wWz7LPbPG9D6LEM3Pyue8MPDMn
n+sOwDPzf+jPcSc8MyfP/hFTxTNz132bNFE8M79hxT9jBTwzz7XG940dLJ6Z
/3B3YOM5jq7imdfd5HN7sbniWfOtLeeIZ+bk+VZssnhW3Nnwd3hmTp571k0Q
z8zJc1C5OPEs+/YWP302WjwzJ88lVkSKZ+aWZ0fH0DDxzJw8V+gzQzzLfrXF
q8yaJp6Z0327vP8k8cz8ujX/cb+x4pn5L/QcaztEPDNf6PBuNKlpN/HMv2PI
Z6U98Kz5s7/hmTn5/MA7RTxrXnZ0knhmTuuxaj/Bs+bZhePFs9RBWPx+Tox4
Zk6ezw+ZJZ6Zk+cGn4SLZ+bkueMDeGZO921qkEM8M79B64dKQeKZ+TXyfBSe
mR+wxvd5d6h4Zj4/63mDzJrdxTP/LqT1Q/8xaeJZceenyanimblrXbEDnjX/
7jE8M6f7uYNPonhW3LltAjxLXYnFW4XGimfm5LlSpSjxzJw8N9kPz8zJ86eT
Q8Uz878tfumTEPHMnDw3PwHPzK/R92nPceKZ+X5a7+2BZ+YZ2b/Wz/wfPPPv
bPLZ88154lnzVtXnimfm9Nwo0WqOeFbc6RiXLJ6Zk89KS+BZ8xrn4Zk5+Vzc
bLZ4Zk7P4VEH4Jm55dNxpEeEeGZOPls8gmfmj6zxEXPgmbn1fHBmTZ8snplf
tXjbPHhmvpf8Dx8mnpmneS/6YujQHuKZ8xbkc246PGt+eCU8MyfPSbvhWXHn
1avwzJzu5/IlksSz4s5TXyaIZ+bk+cx1eGZOnn/qEy2emZPngZfgmTl5bjVk
pnhmTp7H5MMzc7pv096bIp6ZX7HGf9Z6vHhmvscaP89ruHiW/b1RUz+/cwWe
OQ9Et2G3suniWXFnzgdp4pk5+XzkkyqeNW/VLkU8MyefFQLgWfPbyfDMnDwX
DY8Tz8zJ8+Hb8MycPJfsGSmemZPn1sfgmTl5Ht1+unhmTp77LoJn5pZnZ5sc
eGa+i9bPWfDMPDm712cjEnuKZ86rkc/kSHjW/HoUPDOn+3lqKjwr7nxzBTwz
J5/jdsEzc/qduPIKPCve7PQb8eKZOXn+ZViMeGZOz+GqufDMnDyH+ISJZ+bk
+d5CeGZOz4fr1YLFM/PLFv+oTKB4Zr7T4gUrjBDPzBPb+/l0L9xLPHOeku5n
71vwrLhz7Q14Zk6e692FZ8WdpZ7DM3PyXKtksnhmTp6P1koUz4pvm9QSnpmT
5/Q8eGZOnld4zxLPzC2fznbh8Kx55RvwzJw8V8+EZ+bkeU8APDMnz61i4Jl5
fN/a9d5OhWfO15HP5U0zxLPmWxrME8/MyWdi47niWfP1X80Rz8zp+TyuIzxL
PtIanzsYnhV3REyHZ+bkOcsvVjwzJ88ZkfDMnHy2PAHPzB9a8x+qPkM8MyfP
xwpOFc/ML1nj/9gGz8y3W+O9vALEJ79SHuNeAvKc2SeTG2695M6vjvVCPrPU
BjMweI87/7kxGHnLcXYe2pXnLIL85ImRJbbmR7n5j97R4rO+nael+7nMkEjx
mVbzu3cD/d3cNydMfD5TeU6dV2xvx0/5kHNDkCf80Y6fng8/xyMf+I4dv+XT
2b0v8n6BdvyUV7zdCfm9U3b8f1h89boR4rOhHf8Zi//rbn/x2az4R6uK33L7
fBiG/Bu/Eo+/Bp+FDkwoHJ3tygM7PuiA/NvAJVl1WiUed3l7OCdOfO4L3d+r
SKCbOzKQ16353f3IPV3d+eE2G5G/jf7yvY2hjdx54P9dQp72jsr36ryrnx0/
8bVtkH9bZMdP92eJksi/vWbH/4DWvd8Hic/BdvyUd63fAfm3A3b8efQcazxS
fNa246e86LAXyH/G2PGvd5Ztlm6Q56xb5Y/WFY+782+1xiP/luRVZGJejpt3
2oX8G7/SfdvuA+Tfuv7c7XDXYDe/GYn82+a505+V6XvC5dP7H+Q5y09YUf24
n5tnPUKec2rHYx0Tq7rzohucyHOeV3lRnef0seOn3+MxVZF/S7Hjp98v/zRD
/u2xHT/dn0XOIs/Z3Y6f8qJ5bZF/+9mOn+7PUhuQ56xox0955poPkOecZse/
5vzZpmPOIc9ZpUHqzdpb3XWY/3RC/i2szPYytxa48289U5B/u/7ght+yUBd3
FLwCz/xK43s3Rf5t5epG86q2Oun+3dEyTjwXi/7v3ku1T7p8LqwYI55HDYl5
sKC4m7d7G/m3oyovqvOcH9nxk+fZt+E5wo6fPK/9C55v2vHTfdvjKfKcbez4
Kc/8iw/yb6vt+CmP9CgOec4SdvyUTw68hjznaDv+lc2ymgzYhDxnmXb+kY2W
ueswd9RE/m1iraAN+VHu/Fu73si/nSny/YWcABd35GQg/9b46sG3Av3d480N
eOZXem7kfIn8mzOrwsD7ZU65fGb/B3nO76Y2T8jOP+l+DpRG/m2Xyn/qPGdZ
O37y+U428m9Bdvy0rl6YhPxbnh0/3bcL30b+rakdP+WZ25RB/i2L97Vo/VwH
+bcCC9zxUz55+VHkOfvb8S+7O7DxF7HIcxbp/0b1VonuOsxyD+F5aLN6HYsE
uvNv/coiL/RLhZ6OPV3dvEAb5N8+eRq6MrSRm6+MQv4t7tSqU34V3Xm5x8fg
mV/J8/BvkOfsmPjSe+ulUy7Ph99C/m2jyovqPOcbdvyWZ0froci/DbfjJ8+h
dZAX+tWOn+7bzPLIv3nb8dN9+9qf8Jxgx095pPhj8PzQjp/yyVOXIc/ZyY7/
B4d3oyUqz/lkws49XYPd9ZYdViH/1rPT7ftl+p5xeVu9H55N3dLvH/dzcUfN
u/BcqUTT1olV3fm3Nh8iLzT9z4ET/Iu4uCO+L/Jvlw/M/r74rdMun9H+yHPy
K/lc9wCel6q8qM5zPrPjJ899yiAv1NuOnzyn7YfnbXb8dN++VwL5t8p2/JT/
bL4Bec5QO/6b1vxHhyP/dtWO/1f6HhyJPGcLO/6FWc8bbFJ5ztt2vJbmkC09
kH9rN/SH+Kqt3Pm3UUORf8tu8euWS7XdvHIk8m+lqv5zY0Fxd/7tk7XwPK5A
pTJ977v9f3EZnk/88bW1fHDzrPeRF6q/ZXRAXs4Zl8/NvyLPya+u/T6V5+TX
fNoX+BGe29vx0/p5UCfkhX6046f7dt0TeH7Hjp/u2wMjkX8LtOOnvFy/fHg+
ZcdP+eSXtZB/a2DHPz/71/pNayH/dm7BZ4UC/d11mNX/gedmdrzks0cB5IUW
9gzveb+MizuC3kZeqFDD7IjsfLfnAj7ICw189/T6gDw3T+2J/Nu+h14Xam91
5zkzZ8NzzaM137q14KzLc9Jc5DmjVf5T5znP2/GT5/DmyAvxK3mefASeF9nx
U37ju+HIC71mx0+eG1dC/m2wHT/l7c9MQ/7tgB0/5ZMH/AHPtez4070XffFi
Ezwf3nhnYWgju740Evm3uknvHvKr6M6/PY6A5yQ7XvLcJBme/243pNrWS+48
547l8Ny1dkKH4D1u3vIXeN5c9H/TGi1z5znDHsFz+WuXVuRH5bk8f9MB+bep
3Kfo9MxzHrXjJ89bDsOzjx0//e672AJ5IX4lXuUwPD+246f9kde2w3N3O37K
F332HJ5/tuPfZ/GnwchzVrDjTxs19fMnw5B/23FwiW9iVVe9ZchPryNfUWXZ
4RH+Rdz5t/IFka8IC8ufW/yW2/+hoshXXLfjdf2Ofhf5ila+re9HZbvzouXr
IC+0suK4iq0S3XnO2x2QFyr2LL1VkcDfXT6Dn8DzKJX/1HnOXXb8lLcPaIW8
0Ed2/OTz7EZ4jrDjp9+DS2sgX8Gv9Hxo3AX5tzZ2/LQ/smM48m+r7fgpnzzu
/5B/K27Hn5rd67OpKs+5/nzf8wuKu+sw9wTBcxkT+Wbf+27P+0fC88R5P9av
eNydFx0/Gp7PTDz737wcd55zcRA8N7bjJe4VA8+Z9T7e0jXYnee8vASenSU6
3yjT95zre+1GCvKc36n8p85zbrTjJ8/Nt8BzWTt+8vy/sshXBNnxW54dmxzw
nGfHT3n7pWfgmV8pj9HmKDxn2fHvtnjBtfDsVdIdf3J7P5/fE5DnXPyo3LTs
fFc+0xF+Dp6L/Oa3IiDPneccfgSeh2YPO1l7qzvPOToXnn+JSSp4a4E7z7nx
KDx/MmzLp8tCXXlOx5w/4DnOjpc8xzyC5/tVi0dUbeXOc14tibxQRzt/SJ51
nnOpHT89h+MrIy/0hh0/eb4aAM/D7fjJ892D8PyrHT95juuJ/Ju3HT/lkx/W
Rl6IX8lzqbrIvz2w40/sW7ve8kLIv6W/8VuFrZfcebYMH+TfXtj1dMTvVEH+
rc/uKoGNlrnznI8qIv+23a5LdK3rKiH/VtkR+GtOgDvPOaw68m8zes1/Mt7f
zds2RP7tih0vratPfwPPze38IXnWec5MO366n3+fAs9OO356PoRug+d+dvyU
T/Z5E/m3nXb89Bz+6SA8V7Hjp/2RW+HwPNOOn/KcI9NHYJ/azneRt97HEsX/
PJvn0DrzIuq+Wtv/3xq6rjXIh1yy/zvN4/13uoyXPIrF76X3Ej7X9jCLnuf/
gHOeMIrmL9gb63lVb1lvXaLULev8YZneqLPV/Is30UesedHN6IvX/NNK6IvX
vMf/oS9e88mF0Rev+b+eh0s9s+bbX+L8Ac1Xl0BfvObv90ZfvOb309EXr3nI
XZw/oPm2CPTFa26GdxGf/PdUwOL76yaLT83ffwCfOq94Lxj975qnH4FPPc//
eqP/XXPfmuh/13zrc5wzoLn/FZwzoN935FH41OMjM9H/rnnpeeh/1/PUWIP+
dz1+RSj63zX/Kgz97zJPIa/gwc0it7Bnfj7R+L1eKeJZ87JH0Zet+aeN0P+u
eMjqqeh/1+OnzI0Tz5qvb4L+d83HPsI5A5oP3oJzBjTvFIP+d82PHZomnjU/
lID+d80fD0b/u+ZHg9H/7sHHov+d+Z9OR8ODRbaJZ37euz6XffCsuddS9Atr
7n8XnjU/WAX975p/+h363zU/3gr975ofuYhzBjTfHYtzBjTf0hj975rXeYBz
BjTfNBn975pfKIX+d81bBqD/XfNybdD/zvwDS/+x0APimb8/aXyVmXPEs+aN
xqNfWPPEDJwzoPmcHfCseEjiX/CsxzvaoP9d85F7cM6A5qs7of9d89aX4Vm/
b95M9L/r8eO6o/9d8382wrPmef7of9e8zqfof2e+01kpY2eVfeKZ1yM0vlqD
VPGseYcG6GPVfJcf+t81/29X9L9rvnIC+t+Z0xlAbzeJE8+a/zUf5wzoec4W
Q/+75q0icM6A5vP+hf53Pf+teuh/1+Or9EL/u+avV0X/u+YxpdD/Ln0JTuet
hve/b8KeeX1H469fgmfN370Pz4qHXPsdnvX42lfhWY/3zYdnPX7i2+jLZk4e
EobjnAE9/tYOeNb8flX0v+v3PT8LnvX8K53wrOfJewTPevyXV+BZ84cn4Jn5
Lqcz4NmldPHM62Wan84TkD4He71ckBqHyqaJfx5P89O5BMzVeK9/N0X/mp6f
ziVgzuNd92c+zivQ4+m8Aqk7V+Nv30R/vR5P5xgwV+NDXr+Mvns9ns43YK7n
L3cVn7u+Xjr3gLm+3n5X0aevx9N5CMz1+G5F0Veu46FzEpjreBo0Rr+5Hk/n
JzDX1xsxCX3oOh46V4G5jidhJM4B0PPTeQvMdTzhxdG3ruencxiY6/nL9MK5
AXp+Op+BuR7foAPOE+DxzjXucxuY8/i6XtvHvAz/UZ7P/HuO5vGbj/tW82rH
cH9q/lUQzhlgTnEG9kL/u+bBbdH/rnnHr9D/ruefORvnDGj++3zcD5qHbMbn
ruf/+Dw+Xz1+b3mcM6B5uwR8Xpo/KIj+d81LvoR/5vFeXi0+fLJOnhv8+5jG
51bEc0DzqT0zxLPmDf+CZ+Z0XRf3wbPiIe+vgWc9vnwmPOv5S9XEOQOam2ro
f9f8SB30v+v33euL/nc9vu5WeNbjvy6M/nc9fm0WPGueHIFzBpj73nFmfVtj
sHjmfIPr842HZ817nYRn5q7nWDf0v2ueWBv975rPL4K+bM2/+gue9ftO2gzP
mn+1GJ41z82EZz3/wUx49pinPc4Z0DxnJDxrnt8I5wwwp7MSm1TCOQPMf3A6
/9O42BJ5bnD+hr7vauXDs+Je/s0zxTNzin/5JnhWPGR8ODzr8T92h2fNazRE
X7bmpyuhL1vHObI8+t91nJ0Lov9dz7PpITzr8d1OwrPmxY/Bs+ajD8Kz5j+u
h2fhBb2Si+WGyf0s+/b099glXTwzp3nWLYNnPf5KSfS/a/7haXjW/MkP8Kz5
z9PgWfPFveBZx+MVAc96/Mf94Fnz+r7of9f8bG30v+v5m9RF/7seP6Iy+t81
/6Us+t+Zd/IKCVsQtF48cz6P7sOHy/F9p/nX/eBTca/XK+M8AT2+xU341OO3
b4FPPT4sCT4173UDPj3m3wCfev6PZsKnHl9iAHzq8RnR8KnHD+0Kn5pH9YFP
5gt2OZfeSXc04Xo+na8beDvBcP2Z5v/2jzdcL6V5waBYw/U9HvnJ/0YZrkfR
PKVbhOH6Cc1/6j7T8D40c8r3Ti0+1fC+qeaZrSca3ufTvMX8MYb3pZhTHr7M
pcGG91GY077nV+W7G877M891VigZPOAjw/V2nGej+dfUTzBcH6b5wBpxhuuZ
NM+6G224/kbzKtsjDdeLaP7khzDD+8Gy/2Dxd4oFGd6/1Nyn/DjD+23M6bo+
7zPM8P4Qc6pv3NGgt+H9DOZ7nc1uBaz9wnB9m6ondIwZFm+4Hou5q890XKzh
+iHNnTWiDNe7aN7yRrjhfVbmtK8xaOl4w/uCzGmf6NyzEYb3sZjTPtFbq/sZ
3ndhfmRbzLBVN/wM14dxHone97BXnOF6JubkrXZ0tOH6Gz2+bN1Iw/uRzMlb
xNpRhvfPmFOdbc+r/Q3v9zDf6nxy5eLllobrpTjf4urnehhjuL6HOXlIHDPL
8D4cc6ofe+k70PC+kdQdH667rmB5f8P1QLr+Km5jlAm192OYH3T2Gf+8SifD
9cT8+4L2+6iuhutimdM8uxqlGq7j1DysVorhukPFHZ0+TDJcJ6fHr6iSYLiu
S85LsPjjPrMN1yGpOhnn59OjDNdz6PqZRX/NMFx/wJzqGNd2m2Z4v1xxx8S/
Jxje35U6Efr7qj7K8H4k8z+s8YXH9jO8f8Z809SXn1258rHh+mD+vUDXRfUw
XM+qecyFFMP1l5ovOZRkuF5Q8yq7EwzXt+l6laTIOMP1WJpfnxNtuN6COdW/
1XzpMFwfoPmOYZMM72czpzquLnmjDe+/Mj9t8fnZ/Q3vFzJfO61tpXPfNDVc
p8vr+Wd2XQrXlWr+WmCy4TpIxZ0tvks0XLeneUyneMN1ZrpuJOr7GMP1DXK+
hTX/gd+DDO/HM6e6nd9qjTW8f8z8GPU73BlgeL9Tfo/0vfbu8+UtDNe/8vqZ
np9U78H1mswpzln5iYbrC/X4pMvxhuvhmNNzY8qKWMP1AboeY/G0cYb3s5lT
/eHgbwcb3n9lXsNx9fszW74xXCfK68+ndl0E1zVq7hOQYLgOjzn1WdRcM9vw
fjnz/RbPNUMN7+8yD7+7K63T2o6G6yPlnA+7HoDr+ZhT/fZbK+JMmP38YT55
W5cBZwt0M1znx+uQp/a+Nu8T8/cvrXMKnkyWdQvzd7xC3n7+4mQT3j+Wc0Ss
eQpvzDS8f8y8KOVt/sY6XK+jdjszDe8TMz9WoNSG/NZ1DNcd6nUF9V9w34je
vzuUmWy4HlF/j8+aPcNw/Rxz+n6h/gLuM9F1+3dWpBjul2BO8x88n2S4rlF/
n37xU6jhOjzFHRViQgzXjenvWaqr5z4WXa+eum6O4X4MzR2Wf+4f0LzVa0mG
6yn19+aUMzMN1//p79lzidMN16sxp8/94Q/BhuurNKf6c+6r4e87et8fNqYa
7g/R9d7hB1IM9zMo7qh4Lclw/b2ax5FWPNFw3af+/l1UONxwnaLm91JnGK6r
Y07fUy+CphmuA9M849BEw3VLirvqurkviL+XKf72G+ca7m/R/GnOHMP9GJq3
2Z1suH9A80W/Jxqud9d824t4w/WszOk51qN6hOH6S83bLAw1XC+o+Sc1QwzX
tzGn5/OhMUGG67E0L5Y51nD9kJzD5HTXV3MfFOft6T4JWJ1muJ9H8+cLUg33
nyjuaJORYrhfQo//fXGS4fp+PX715gTD9ei6XrrzyjjDdb3M6ftrdZtIw3Wo
evzxNTMN100q7jhcerrhOj/mVFezudwUw3Vpmt8oPt5wHRVzqsfrXH6Y4bof
5tvsuuhnr+xTuM7Lmj/P3Hllv4P4xOlzzflX9imIVx87xxx9ZT+CePuAZLPr
lX0H4ufHJpqNr+wvEP96WrxZ+so+gut8GO9YE/1K/p/4s5wwM/WVPD/x8q/P
MKNeyedTv1X9n4PNd6/k7en7ZWVooOn4Sn7+osW9l40wzV/Jw++w+KkdvQz3
y+l1V8Ua8wzXYev11fbVEYb76PT6pP3DeYb7wTRfuWWu4bpttW5x9F4eabjO
mDnVX7XcONNwP55eP9xcm264r0zz1LFphvug9Dqkp2+q4bpwvd74MX2W4Tpm
zT+fF2ak7lbxKhnTDfcB6vVD/qAMw/1sijv6vz/PcP+V5pWupBruF9J87/oU
w3Xqeh3SZnaU4bpqzX0mhRuuA9a8ccAMw3Wruq6y68Fgw/2KvN6g5/CwdzIN
993pdcu43fMM94lp/pn198J9TZp3aj3HcB+O5u+9l2y4zp453bdjJkcbrgvX
PKhThOE6Zs1/axBquO6WOfURN241zXCdKPNLFr9bdYLhvkG9/mnRL91wn5vi
jltl0wz3Zel1V9KZOYb7iPQ8+79PNtz3ouepNjHRcP8Ac/pc6veLMVzvrrjz
nU8iDddn6/F3XoQaridmTnWGzbY6DNe/Sn0frdtnTDRcr8l8H51nlTHScF2g
1PE53XWD0iei8kuff4C+VL2u6/wT+nyZ0/Ot0HL0+TKn58aBu+jzZU5/j+/4
oS9V55c2pKMvVfNtL9Gvx5yebzv2oZ+XOeUBMg36eZnT77jTO9DPy5x+x32S
inP5mFNfpHM1+k+ZZ9vepL8D61jHlQD07eq8U+dn6NvVfFU19JMyJ2/RPdFP
ypy87ZuLflKdv2p/BfXtzMnD0cPow2VOHo7NQx8u85MW//c59OEyt34POq9F
oz+U+Vpn2WYmuhP6LFQebOpC9M/qdXXT9ji/TvPCQ3B+HXO63oxonF/HnK53
0JYwuS7UmzmdF0eh75U5/c7dWhz9mMyPWvxGL/RjMl91/mzTsO6d0b+g1uf1
xqAvlTnF6RiGvlTNFwaiL1Wv23fFhkuczCnOFUsQp5wLaPFva6KfkfnyZllN
DpXugjp/tQ7vNAj9m8zpfat2Qv+mnBtK96H1vOX3ZU6/rx/cw/syX3J3YOMJ
v3VBfbta935ZC/10zOl9zxSLlHmYL3J4N9o9ryvqtNW68eaOSKk31vUnuq+N
OW2PH56GvjbFveavQV8bc/qzTr6KvjbmtP5vWwV9QJqXGII+IOkLtHj3oei3
Yk7xdy0aJc8r5rReaj0YfVXMaf0TVRH9PszpfljyM/rXmFM9/6av0e/D/CD9
XliJvirm1L/2YnF38cZxkZ+eqk9N8ZCVVdE/JXXx1j++HdE/xdz1uywS3jz4
bnhj7vp8S6CvR85ztXje/Cjxw5z87AqCH+bUDxXgj34o5uTn2xz4YU7na4U0
QT8Uc+o7K1C/h3jg9ycPuo+MOXk4uAkeNB96DR6Yk4c1/4d+EObkYedSeJBz
ai2+pVq0XK/0o9Pz4SSulzmtBwaXR78Mc+r/OrgV18uc+r+Wr+0h18XvQ/Hr
vi3Nv2mCPhfmdF23h+C69Dp80+foJ5LzdC3+n8XREj9zin/5ZMTPnPqqvFug
30fOscvu9VlR754SJ89Hceq+J+YUp/ePiFOvt09vRpxyjq/FaT+d42Hu6j/a
iXiYU/9R4rqe8r78/9H76j4g5tb3yLYT5dCfotfJzvAYmZ95Ut/a9TaV6yXz
8H9/tc+FOeVPaF/1zit5OZqf8nL87zov98vgZBkv51tb459549wP5rTuorwc
z6PrwKc1xPkbOi83Z1mSzC/nYVvzPLqL+ZlT/NG1cA4Dc1rPUF6O31fXRf9f
QZxHwZze90Z/nEeh83I3cxMlHjlv2+K1F2GdyZx+Hz3dg3iY037BgLM4F4I5
rUMoL8dx8n1K8TTdgTg1f1Qa5zno/Nt7Y3Ceg+Yvjyegj0l9j/f0x3kLOp/W
ujvOW5DvPWt832M4V1bOC6d11HOca8H8lp2Xk/W3fb9T/Ksn4vwEzWtvxXXJ
ORPWPKeKoa9fcaf/QJyfoPJyjsq74uV6mdPn0uYxrpc5fc86ruN65fvc4t/v
xPkSOs92axvOPZDnnDXNxT0494A59eNTXo498N8lXe+QqjjfQPGQUn1wvoH0
X1LeYyE8aL71DjwwJw87fdF3r/JvzhmfxYkf5vS515mLcyGYu/rdRuG8AuZ0
3/61COdCMKd1SMmJOK+AOZ1/e6w9+uiZ51o8oTfOK5DfMa+cV8DPLfL2gTqX
VfPn6lxW5nSf6HNZNdfnsjKn57A+l1VzfS4rc/JJ57KyT+bkU5+/ypzuN33+
KnPyqc9fle9Dp+f5q8xd59yq81eZ07pOn7/K/NXzV1VdaIj35TSc42Rzin+B
T4SM1/WT+QPQX6/WP155E+fKPMxpnk5r0M+u83gVG86U+XVd3+HTmJ85zd/t
KtafiofUfDZH3lf64KnvuCL6jplT/tyZjt+/8rvQGl+oEr7vdP1bhB/6gplT
PNu/Rl+w4iF+3dAXrNcbs0emSJzMyc/mmYiTOcU542/EKb9TrfFDRqBvlzmt
Y8vkTpH4+b6gOM8uQPyal/4e8TOn58nKVYhfcecFg/WeXrdEncD3NXO6z2Ou
4LqY03U9boE+Wfmdbb1vl3W4LuZ0XY390CfLnPqRu1cNlOuSPm/Lf/wDXBdz
uq6YfFyX5hcKo4+YOV3XrbLoI2ZO+x0l6mE9wJzut9hG6AuWPIE1z8k4XK/i
jo/u4np1vi56Ga6XOfUFV5+AvmDmO+n5nIS+YOXBtT/7/2msTF8=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
r3TjqsT9BOmo1Ynrbuml9YnrZenJDYlrc2nRTdr/OdaQhxL3A1+HtyfuGUqX
bkxcj0s3bkvc35N2/Slxf+81+Ge4FfwGvD9x73Gp4lx03X4E3pexHsiTsR6Q
rlK/STFKOkl5XNpAOkl64ovEfUVp3X1pXlDO+j5xn3OJ4kHiHuli+Bu4bo7r
7q8T9xVVt+5K3HtUTfpV4t6j6tbPE/c5pZM/S3OiNEZuaU34Xemp4D5hPZ6j
B7wYbgB3C+4r1oVvCX5HteA74ZfgOvDr0X0i6duewb3HhvC70X0i6dtmwX3j
6nrXwT3G+nBz+DH4smgtrH33JvfWO7ivpf6W9IZ0qjSHdLTu7SWuuS24R6de
3ZHEuUz59Gji3u8y/l4mWBuvwBcM1s/KFyWC9fNy5bHg/mpt7uFY4j7wm4z9
ozUNv601nlibSaedSNwTfovxjxP391Q7JMF9vHfwmTQ3KbeWzFpvKZ6UC97j
7+HbBfcJd+FrBMeT1fjqwftllWJSdJ/xe/im4H7jN/jx0T0ZPddz0Xtvk3Jj
cI9xd7CGk/6V9n4runf5HeOjo3vWuv9V0dpUWvT24P7hXvwlwXv8Y/zI6J67
5qRTcP/za8Xh6N6RaiJp6UXae1lre9UWyltd0veodzQmuhev+RwSXNv+qLgS
Xfce0ntI48tmxbDoXuRPmpvonr7m9sXoePqFclF0X3U/PDc6Ln+mNRXdu9fa
bpOuE8XvldG9zoOMNQnuhW7FXx/c+92J/yS6XyyN3Ta4r/ul1k5wX/QHfKPg
WlL3OS66Z6W11F73x/hX+LrBcXs9/s3ovvA+eHO0jpSWGx59ZqDY8nD0WYjW
ba3g3LEW/1CwDleMnRedVz5nbGJ0X0v16UPRZwyKS0OizzYUKxoE5yzlh9rB
OehT/KfRNaFqpXrBOWsDvn5wLtuo+wnuIWj+6wTno3X4SdG9nQ/hEdHnHIql
E6J7g1rbd2DLcvy8NbFH4TX4C4LzlPSP9I10juqyasH54hP87Og8p3voHNxn
3oN/I7pHr/W5LLrn/q32XHCvW9wnOB8pbvTVu4QPBPdDtBe0J2ZF5049b5Xg
/KtnaRic67WPLgrOZR/hX4nO6zsUS6LPgRSTh0afAyn+r47ut6oGnBmdy/Xe
X4vu3ev+l0b37rU382V9hqH4eVbWZzmKP4WzPlORXsqb9VmO4m3I+hxFcbJo
1mcw0kUx63MXxdUiWZ/TSMudnfXZieL2OVmfhSgmr4nuGalO/CK6t6W6aVt0
H0p1U/6sz2CUCwpkfZajWD04uDelvVMo67MW5YjF0WckiglPR/ctFcdyZX12
pVx/RtZnVNJ7C1Jdpb22PPrcQnuqatb1ofRb+axrSOnPclnXitIt52ddZ0qr
vBytjbbrPWZdQ0oTVs661pUmrJR1DSwduDC6B6S9nDvrsy5pzlJZ18DSQoui
z0sUk4tlfbYkTXhm1mdp0ooVs66xpSGLZ31mI238THSfVuv88+h+nOrKp6J7
3YrnW6J7Rqoxt0b3klRXtgw+61FMWxfdQ1Tt1j34bEXx7ZrgMyA977XB5zJa
k1Oj++raO3Oi9ZZiWovgcyvFiiXR50nKHWuje4jqG7QKPkvaphgT3ctTPdtU
7zLHsbRx8PnRFsW/aH0jnfMY9lWO4/am6B6o6vHp0T0pxZnJ0f1/7aOXonWt
vmtadA9L8e3V6HMpxcwp0ecIyjv3Bp9JKWc9Ed1XV59/Y3RfVfW7ziOlUZV7
1jOuRo96R+9Fn1cpv9wXfG6lHDojWn8rjq2IPidTfNgQ3dtVf+CFaP2q5/0/
WWLcOg==
            "]], Polygon3DBox[CompressedData["
1:eJxFmQPUJsfaRbu6Op5oYt1k4olt2zZvfOMb58a2nYltTGzbtm2b/945vda/
Vjpdu+ud70VXPc85pwdtvP0q27VN02zK/zrOe9WmeZLzyfAEwzTN3vBT8Cnw
hPA+8NPwqfBE8EHwS/BZ8CTwrvDD8DHwOPCB8IvwmfDE8MHwy/DZ8CB4d/g2
+Hj4Dj7A+Fy7sTTNnVzbk7kdOK5nfCTztzO/CnwSvA18JbwyfCK8NXwFvBJ8
ArwVfDm8KnwyvC18Ffwf+FZ4P3g03mubmvc6GB4dPoTXrM37b8S1wtxSHEcw
3oj5C5nbDr4bPhQeg9evBQ+Bd4CvZv45jtn59wtw7QuuLcb8IYw3YHwBc/+D
b4dPgO+E/wtfBx8B3wZfxvk9+DOOaxnfyjEu43f5m/cxvy+vfwY+jev/4v0P
hR+Dz4PvYX5D+Fp4d3gA89vD98CHwWPC68NXw7vCI8IbwNfAu8EjwVvAt8D7
wqPC28J3wYfAA+HN4ZvhfeBR4E3hm+C94ZHhqzl/An/KcQ3jXZh/iPHRjMdm
fnI+4zauN77Pj4x3Y/4R+Fi/J/NLwKfBG8IVnofXnAufXvJ95oRPd73AI8AL
+Jv5/Uvu53zwJfA5JZ9vXvhi11vJ55sfvhQ+t+T7zdHl/Y6Dhx8m99u//2/3
A7wCfA68BTwMvHSX9XJTyf5YuMvvd2n5//Xg5/lvm883O/On+v2YHw5es+b9
t2/zfhMxvym8PvNfMV6x5vv+h/lhmZ+7y/ufVnJ/vN+v+vmZnww+HH4dvgCe
HP4Rnhgeh9c/xL/dh2Nhxktx7RNesxs8Czw3/Cr8P3g2eF74dXh3eFZ4Hvg1
eCd4WnhW+Hn4h5r1OIBrDzJ3sHuS8dpc+5X5feFF4KVdA/AyXdbPzSX1Y2d4
Osazce0F5n/h703FeBKuPcrcT/Ak8Ljww/AeHHMzXtg9wOv3hOeBF4Hfg/eC
54UXhd/3N+WYC14Ifofxr/y9qRkP4tpjvPZ3eEZ4KvgJ+Dd4BnhK+HF4J/hB
+Cj+7Vh83mW77PdbSurd6jXry6Lp/ZyN+ePgw0vu15zMHw6vxHyBJ2R+E3g9
5r9kvBTXt2S8Fcdv8KQcWzG/Mfw948k4toY3gX9gPAXHtvBm8E/euy5/f/+S
9blgzfuvxd9t4ZmZP8z6VrJ/9mP+PngI83d3qbePut7h8YZJjX0CPqlN7d0D
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
Jr2TnshsRs8ztP89/bx6psv6fmg9tj5f3vdj66EZx6V9fzMLM9O7syTjMetT
sz1XoiHVcnrI+0s0nd7y6hq9oae3H15To0f09Pa/D3i/2eEBnPf2XtfoETMF
+9+18GJNPL/9c2iNPjLjsF9fDy8LL1rSP/Vwt/b13H5kf7qtX5/WLz39LX3/
Mds0Qzqv1xvWWjOic3s9aTZmfx/S6w9rtxmTWZOZjtmYGehdJRmo2agZ590l
GZfZpxmUWZQZgtmZmdbpvT5RL5jxnNbrJ7M5M6Tje/2mnjUDHL6kxlnrzKDM
osxYzG7NWMxazCzMbvXEemMzKrM899yIJRmOe/GKGn1hJqSeMZM6rteXZlVm
HGZXZmRmH5fX1CLXoGvRPT1xyZ52r19Zo1/MkNRLa3bRAmqCwfyt1brkyw/B
U8JrdMmTH4GnNl/pkjc/7N/0t6jxN6P19XrlLnvLPWb+tWqX/OJBeArXbs36
MWPS/5xe45cG9vXxVmtcScaxtb23Rs9NWuKvLq6plYP7endJjT6bptdXF9To
wclK/NZ1HBcxvsqaz9xxNfVbj2P9vbBGb05e4tcugqe33/X62czknr5emKWc
UuOFBvT96/gaf/hXk3p9U41/VYOoRW5WUzTJ4NTrN8KrwsuU6Pu252m4N4d2
qUEzlNRka9NVzM/XJANUD98Cb9wkA9cP3VDjj5Yu8Qfft9l/E3A+EL6M4xTm
zuba8tZvrg9vL+DahsydbE2yX/T99aQaf9v1/e7EGn/c9v3nhBp/3PT959Qa
/ztK379f5O9PCf8J7wJfWqOnzSj1t+fV9G57uP7T77xOyXfytzDDuIK/8UGT
bOOfjKzEv5k9m6np5/R7+iv9jXmHPd/eb8an39E/6m/MfMx+1CiT1WREZkVq
3Glr/JB+Uz+p/zADMm/YAZ6qJtMz21PjDqrRPEuWaBy10LhtaqU189teky1W
0qN+7zXTEiUa6K9egy5folnVpvYP7533UK+rBlsKXrnvJ2qwxUt6qNrMzMrs
Ss04RU0GZRalR5i+JvMy+9JDzFijCecv6XFqRZ8pnFqSWfuswcz8sBJ/aJZu
RmketH8Tv2hm/UDJHjbLfrXkGYgaZmivIZcr0aBqSzNTs1M1++CaZzYXl2SA
Pssxb/I1zplPmamZ/5gR6M8VO2ZvepLZazI0szQ9zaw1GZtZm55pZn+/mvtk
bmt+pQdaoSRj0xvpGdYt0bx6CV9j1rVfk397tmsQPhZeoCaTW7Ck5//Ue4oF
Snq+XsMaZi2zRh7B66/j2vtNngl9XrOnRijZU+4117Br+UOOLxh/yfER4485
vmZ8rNeaPJP5pibzNPv0NV/V1GBrsTX3yJoabC22Zh9dU4Otxdboo+Ct7akl
e/ChNntw+pKa+2JfE5YtqTnf9z18vpKaYW+3Zlu71Xv6IT2J+majJl7lqjb+
4rn+89oz7B36jWPUI13yc/fP6DX53dr9/pb1CGuW6CW9g57T/G7LJl5Uz2ft
tIbqBfWwZs96Qr2tnnelEn+nF9bTLlSi2fS6eky1hppD/6fHXLHEA+s99dhm
23povbce2+xbT6r3NuM369eTjlfjYVcv8UB6Wz2xzwo2beKV9ayrlngyvaye
eLUSD6VX1rP77EiPrpfXI69R4qH0zj5D8FmCnnqimmduPnvTQ08Mn1mj783o
9Bv+/j7De6f/vc+qyRfGL8knvebcpW3uzV81vcTMQb3qmnkbvqTNWrqjJr81
4zXrdX+b543Wr+fR+34zd5t7e2dNdmuGbJbsmnsLvrjNWry15l56T81mh+uy
d9xT7q27arJZM2Cz4NrFr8xZ4g/bLn5sjhK/UKxfTZ7ZqvftUfYqe5TecPgu
e9U14Fp4nPMXTfaP+2iELmvDNeHaeK5Gq6nZzOpG6lKrrbHW2vdrvI0eRi/z
QY0W0fPofTRfanv1lf7g4ZpeZE8ya7y9Jv80IzcrV7OoXex5ZsX2SHulGkLv
+3eNP9Ez6i/MY/Vr+he91W01tdEaaVY+oEsvsKfYW9QgahH1onpzYJfa55p3
7dtj7bV6Kr1V18UP+wxOfz5sl95gjbPWrdRFC6t51D4rdtHKamS18jM1WaaZ
o37rWTVRk4zTrHOFLl5Dja3Wfqwm/zBjNWtdvsuzJz2J3uSRmrzMDNcs974a
P+8zC59dPFiT9fvMw2cfD8GHNnkG4LOAB2r8n89IfFbyaE2Wa6ZstnxvjTZQ
I/hs5P4a/+8zFp+1WMPfgC/sa/tYXP+8Sc2+vI3GUeuo8fTed9fk8z5j8FnD
6F16uT3H3jNyl16vRlArqDHVmubj9ktr+JuML2pT2++p6UU+o/BZxVM1WbMZ
t3mGmkvtpeYyC3iipleZYZtlP12T/ZpRm2c8WaNl1DTmH2pStama12xhSE0+
PGZJvvF4TRZu5m32vUD/edZs0xvV2Gpt8wOzBjWh2lBNaDbyfE2eZYZt3qmG
V8vrCcw+3qnJjs2MzZ/eq/GyelrzsVdq8ikzY7Pjl2u8mx7ObFhPobdQY5oN
vVGTv5k5m5/5HfwuegizG5/ZTFBSE32WM06XWmwNt5Z/xL+/v0kGYhbyYY3X
1HOaLb5e4y31mD6r8BnPRCXPbHz24zOiCUue2fjs6K0ab2Fmbv73Qk1+aMZv
1v8afFGTzNvs+8WavNBnCOaBr9bkfWbkZuUv1Wh1n2H4LOPNmrzSjN480ucz
Pu+ZpEk2qF722Z/3dK0uGt/1sXkb7b9e//d2aeOF7BH2CnuKz7a+q6n11nzz
xXG79Dp7lL1q7C69zZ5mb7MH2YsGNcnCrNHWamv4V70eVr+qj80C9WB6MT2c
z8K27n+vg9p4vVG6vNZ/o/Ydo0uvtsfb69/l9Tc0eQZhHnp2zW/vPfZe66H0
Uupnn53o2fRuejqfhegJ9YZ6RrP4c2rupffQe/l2TXZihmK+q2ZSu31VoqXO
rdFSrgHXwphdtIcaRa0yfhcto0ZSK+kh9ZJ6UJ8FWmOttQv3v4ceTb2vvtcv
jAWv20RDqCVG66Kl9Qh6hfG6aAU1k9ppRI7lmngMvYYZilmKGYzPJv6o6R32
ELM/e6q91ZpvFvt/38C3zg==
            "]], Polygon3DBox[CompressedData["
1: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
TraWFY7/d4ydWXd2Xv4H8ETl6w==
            "]]},
          Annotation[#, "Charting`Private`Tag$109149#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkrh3EcwPHHfV9JKSJ/ABsZGGVgkgxsZGCgZGA0iM3GX8BKYlds7vu+
kuRKuc94fcvw/r0+9fvW8/n2PCWt3Q1dMVEUDepVYX7UhaZjoyibcyzmKst4
wmres57fbGFaXBR1soCF6jdXcpi1HGMTJ9jOWfZygQ+84rs29aw7LVpoi0vc
5jJ3uMLdsBP3uMZ9rvOAG9zUoXmLR9zmMXd4wl2eco9nnHSPa37oXC/hjhqx
2wYHOM8ezrCN42zkKGs4xAqWq8+czw6msJmfnlHHW1bxiKXhXiwKd3bukm/K
0lM4qzw7ZjKXGcxhejjDNGYwNbwDpjCZSUo2J4SZcUwM75gJ/FW8fsJ/+pI1
oik/N//fwx/K50r0
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{690, 1003, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
        914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 917, 696, 1119, 1009, 
        1218, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
        701, 1124, 922, 702, 1112, 1125, 923, 1004}], 
       Line3DBox[{704, 1010, 1219, 703, 488, 705, 1126, 924, 706, 1127, 925, 
        707, 1128, 926, 708, 1129, 927, 709, 1130, 928, 710, 1131, 1011, 1220,
         711, 1012, 1221, 712, 1132, 929, 713, 1133, 930, 714, 1134, 931, 715,
         1135, 932, 716, 1136, 933, 717}], 
       Line3DBox[{719, 1013, 1222, 718, 1014, 1223, 720, 504, 721, 1137, 934, 
        722, 1138, 935, 723, 1139, 936, 724, 1140, 937, 725, 1141, 1015, 1224,
         726, 1016, 1225, 727, 1017, 1226, 728, 1142, 938, 729, 1143, 939, 
        730, 1144, 940, 731, 1145, 941, 732}], 
       Line3DBox[{734, 1018, 1227, 733, 1019, 1228, 735, 1020, 1229, 736, 520,
         737, 1146, 942, 738, 1147, 943, 739, 1148, 944, 740, 1149, 1021, 
        1230, 741, 1022, 1231, 742, 1023, 1232, 743, 1024, 1233, 744, 1150, 
        945, 745, 1151, 946, 746, 1152, 947, 747}], 
       Line3DBox[{749, 1025, 1234, 748, 1026, 1235, 750, 1027, 1236, 751, 
        1028, 1237, 752, 536, 753, 1153, 948, 754, 1154, 949, 755, 1155, 1029,
         1238, 756, 1030, 1239, 757, 1031, 1240, 758, 1032, 1241, 759, 1033, 
        1242, 760, 1156, 950, 761, 1157, 951, 762}], 
       Line3DBox[{764, 1034, 1243, 763, 1035, 1244, 765, 1036, 1245, 766, 
        1037, 1246, 767, 1038, 1247, 768, 552, 769, 1158, 952, 770, 1159, 
        1039, 1248, 771, 1040, 1249, 772, 1041, 1250, 773, 1042, 1251, 774, 
        1043, 1252, 775, 1044, 1253, 776, 1160, 953, 777}], 
       Line3DBox[{779, 1045, 1254, 778, 1046, 1255, 780, 1047, 1256, 781, 
        1048, 1257, 782, 1049, 1258, 783, 1050, 1259, 784, 568, 785, 1161, 
        1051, 1260, 786, 1052, 1261, 787, 1053, 1262, 788, 1054, 1263, 789, 
        1055, 1264, 790, 1056, 1265, 791, 1057, 1266, 792}], 
       Line3DBox[{796, 1162, 954, 794, 1163, 955, 798, 1164, 956, 800, 1165, 
        957, 802, 1166, 958, 804, 1167, 959, 806, 1168, 960, 808, 1169, 585, 
        810, 1170, 961, 812, 1171, 962, 814, 1172, 963, 816, 1173, 964, 818, 
        1174, 965, 820, 1175, 966, 822}], 
       Line3DBox[{821, 1280, 1070, 819, 1279, 1069, 817, 1278, 1068, 815, 
        1277, 1067, 813, 1276, 1066, 811, 1275, 1065, 809, 1274, 584, 807, 
        1273, 1064, 805, 1272, 1063, 803, 1271, 1062, 801, 1270, 1061, 799, 
        1269, 1060, 797, 1268, 1059, 793, 1267, 1058, 795}], 
       Line3DBox[{824, 1071, 1281, 823, 1176, 967, 825, 1177, 968, 826, 1178, 
        969, 827, 1179, 970, 828, 1180, 971, 829, 1181, 972, 830, 1182, 1072, 
        1282, 831, 601, 832, 1183, 973, 833, 1184, 974, 834, 1185, 975, 835, 
        1186, 976, 836, 1187, 977, 837}], 
       Line3DBox[{839, 1073, 1283, 838, 1074, 1284, 840, 1188, 978, 841, 1189,
         979, 842, 1190, 980, 843, 1191, 981, 844, 1192, 982, 845, 1193, 1075,
         1285, 846, 1076, 1286, 847, 617, 848, 1194, 983, 849, 1195, 984, 850,
         1196, 985, 851, 1197, 986, 852}], 
       Line3DBox[{854, 1077, 1287, 853, 1078, 1288, 855, 1079, 1289, 856, 
        1198, 987, 857, 1199, 988, 858, 1200, 989, 859, 1201, 990, 860, 1202, 
        1080, 1290, 861, 1081, 1291, 862, 1082, 1292, 863, 633, 864, 1203, 
        991, 865, 1204, 992, 866, 1205, 993, 867}], 
       Line3DBox[{869, 1083, 1293, 868, 1084, 1294, 870, 1085, 1295, 871, 
        1086, 1296, 872, 1206, 994, 873, 1207, 995, 874, 1208, 996, 875, 1209,
         1087, 1297, 876, 1088, 1298, 877, 1089, 1299, 878, 1090, 1300, 879, 
        649, 880, 1210, 997, 881, 1211, 998, 882}], 
       Line3DBox[{884, 1091, 1301, 883, 1092, 1302, 885, 1093, 1303, 886, 
        1094, 1304, 887, 1095, 1305, 888, 1212, 999, 889, 1213, 1000, 890, 
        1214, 1096, 1306, 891, 1097, 1307, 892, 1098, 1308, 893, 1099, 1309, 
        894, 1100, 1310, 895, 665, 896, 1215, 1001, 897}], 
       Line3DBox[{911, 1008, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319,
         1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 1217, 904, 
        1002, 1216, 903, 1315, 1105, 902, 1314, 1104, 901, 1313, 1103, 900, 
        1312, 1102, 899, 1311, 1101, 898, 1322, 1006, 1005, 1007}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{251, 474, 1113, 252, 488, 280, 1223, 503, 295, 1228, 518, 
        310, 1235, 533, 325, 1244, 548, 340, 1255, 563, 355, 1268, 578, 1163, 
        370, 593, 1176, 385, 1284, 608, 400, 1288, 623, 415, 1294, 638, 430, 
        1302, 653, 445, 1311, 668, 460}], 
       Line3DBox[{253, 475, 1114, 254, 489, 1126, 281, 504, 296, 1229, 519, 
        311, 1236, 534, 326, 1245, 549, 341, 1256, 564, 356, 1269, 579, 1164, 
        371, 594, 1177, 386, 609, 1188, 401, 1289, 624, 416, 1295, 639, 431, 
        1303, 654, 446, 1312, 669, 461}], 
       Line3DBox[{255, 476, 1115, 256, 490, 1127, 282, 505, 1137, 297, 520, 
        312, 1237, 535, 327, 1246, 550, 342, 1257, 565, 357, 1270, 580, 1165, 
        372, 595, 1178, 387, 610, 1189, 402, 625, 1198, 417, 1296, 640, 432, 
        1304, 655, 447, 1313, 670, 462}], 
       Line3DBox[{257, 477, 1116, 258, 491, 1128, 283, 506, 1138, 298, 521, 
        1146, 313, 536, 328, 1247, 551, 343, 1258, 566, 358, 1271, 581, 1166, 
        373, 596, 1179, 388, 611, 1190, 403, 626, 1199, 418, 641, 1206, 433, 
        1305, 656, 448, 1314, 671, 463}], 
       Line3DBox[{259, 478, 1117, 260, 492, 1129, 284, 507, 1139, 299, 522, 
        1147, 314, 537, 1153, 329, 552, 344, 1259, 567, 359, 1272, 582, 1167, 
        374, 597, 1180, 389, 612, 1191, 404, 627, 1200, 419, 642, 1207, 434, 
        657, 1212, 449, 1315, 672, 464}], 
       Line3DBox[{261, 479, 1118, 262, 493, 1130, 285, 508, 1140, 300, 523, 
        1148, 315, 538, 1154, 330, 553, 1158, 345, 568, 360, 1273, 583, 1168, 
        375, 598, 1181, 390, 613, 1192, 405, 628, 1201, 420, 643, 1208, 435, 
        658, 1213, 450, 673, 1216, 465}], 
       Line3DBox[{263, 480, 1119, 265, 494, 1131, 286, 509, 1141, 301, 524, 
        1149, 316, 539, 1155, 331, 554, 1159, 346, 569, 1161, 361, 584, 1169, 
        376, 599, 1182, 391, 614, 1193, 406, 629, 1202, 421, 644, 1209, 436, 
        659, 1214, 451, 674, 1217, 466}], 
       Line3DBox[{267, 482, 1120, 268, 1221, 496, 288, 1225, 511, 303, 1231, 
        526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 363, 1275, 586, 
        1170, 378, 601, 393, 1286, 616, 408, 1291, 631, 423, 1298, 646, 438, 
        1307, 661, 453, 1317, 676, 468}], 
       Line3DBox[{269, 483, 1121, 270, 497, 1132, 289, 1226, 512, 304, 1232, 
        527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 364, 1276, 587, 
        1171, 379, 602, 1183, 394, 617, 409, 1292, 632, 424, 1299, 647, 439, 
        1308, 662, 454, 1318, 677, 469}], 
       Line3DBox[{271, 484, 1122, 272, 498, 1133, 290, 513, 1142, 305, 1233, 
        528, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 365, 1277, 588, 
        1172, 380, 603, 1184, 395, 618, 1194, 410, 633, 425, 1300, 648, 440, 
        1309, 663, 455, 1319, 678, 470}], 
       Line3DBox[{273, 485, 1123, 274, 499, 1134, 291, 514, 1143, 306, 529, 
        1150, 321, 1242, 544, 336, 1252, 559, 351, 1264, 574, 366, 1278, 589, 
        1173, 381, 604, 1185, 396, 619, 1195, 411, 634, 1203, 426, 649, 441, 
        1310, 664, 456, 1320, 679, 471}], 
       Line3DBox[{275, 486, 1124, 276, 500, 1135, 292, 515, 1144, 307, 530, 
        1151, 322, 545, 1156, 337, 1253, 560, 352, 1265, 575, 367, 1279, 590, 
        1174, 382, 605, 1186, 397, 620, 1196, 412, 635, 1204, 427, 650, 1210, 
        442, 665, 457, 1321, 680, 472}], 
       Line3DBox[{277, 682, 683, 1125, 278, 501, 1136, 293, 516, 1145, 308, 
        531, 1152, 323, 546, 1157, 338, 561, 1160, 353, 1266, 576, 368, 1280, 
        591, 1175, 383, 606, 1187, 398, 621, 1197, 413, 636, 1205, 428, 651, 
        1211, 443, 666, 1215, 458, 685, 686, 687}], 
       Line3DBox[{459, 667, 1322, 684, 444, 652, 1301, 429, 637, 1293, 414, 
        622, 1287, 399, 607, 1283, 384, 592, 1281, 369, 1162, 577, 1267, 354, 
        562, 1254, 339, 547, 1243, 324, 532, 1234, 309, 517, 1227, 294, 502, 
        1222, 279, 487, 1219, 250, 473, 681, 688}], 
       Line3DBox[{467, 675, 1316, 452, 660, 1306, 437, 645, 1297, 422, 630, 
        1290, 407, 615, 1285, 392, 600, 1282, 377, 585, 1274, 362, 570, 1260, 
        347, 555, 1248, 332, 540, 1238, 317, 525, 1230, 302, 510, 1224, 287, 
        495, 1220, 266, 481, 1218, 264}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJx1XXl8XFW9H1qkiDxbRYUn4JRFiywGrVCgcG5KWwotJWmTNG2TdLLvyWQy
2ZPmTpIubBJcENyYqrg/CCqLCpyJIoI+tTzlCQK+YdM+FN6wCjxL5935fn/n
d9P6efxzuKd3zj3nd37L97eck5Pq4xub5kUikdPfEYnMj7j/LjXyPyk2L3m/
zxf+GzRPoE3an6PNeTcXGr/ffKXQZnaabunfx/fMY2jj0ua8F9HW2efR9tv/
kv5X0Hbbv6NdZl6R/v1oy8z/oo1Jm/NeQpswL6BtNs9J/7NoB+xf0Dbqd/l+
3LL1pM1512L+CXMp5n+NPVP6c2hbLcfvtH+V/n9Hm7L3ybq/LP0/RbvF/if6
J+wPpP/lfNH1P/5Hg3kVzz3mv6X/LZk320pZd87je2vM3+X9/5H+vWir7K8x
/nb7kPTfxPUYzmeHvemg9Vba10gnnf/baGvtfvl3R8+X0dZY0r3TOPpwHh2G
40RlvJx3F9pJ8w18d9DskP6nSU+hw5DOk+usN2+ibTJunB/jvXH7ONoee5f0
XwMyXGm/hOdG23zQOC1W6GYc3b6UX/iZV8enzLfxnDJbpf+PIE/KzuK53dwx
d71+r3lZ5vWXuevK7DA/kHleJ/375D2sL5CDP0j/DWi32K/hd7vsmPT/DuOn
LPml135T+p/ks+G/DxknR3/jfCz/PS5tzvsz6WIeFzr/WvqdfDq5cfLyMNqY
Bd/7I/Zh6X9OvvsM2qT2U64b7BOkk/mR9Fs8O34qUb56PZ9++4TDu4QPPN1H
7vOo+ZnMZ1b6D6CttWxXCt85fus11ANV1tF/n/ye/Nqu+7IR9J2yi/DZa+xf
DrD/e/j3KfNFtINmSN4nXzcLv0WldfokZikHyw6ZT50VvtD5UA/UG7R+0jo9
Q/qmrOU8Vd6/RTrYW9CO2S9K/xtoa4Rvm1TeX5D54DnY5xek/6f50dMOnzdi
f8F16fivye9fFvo4/QC6BfzxN6Gz06uU46TQsUTp+YSs51A+fE7GeVLm+7j0
Qx4DPqlDe7VdJf1sB8yRhca7zvyv7MuBQhvooyXo/7Ttln7K36S5Wb6bknEO
3u+4zpP0rjL8937zlPSLnjdsm1XPky6V5nWMn7COntjn6CbRdzHVe/vze0f2
LagWfqhUfiD/+oZyskb5md9PCn37rJNH7JM/aqFvAr1y70Hr6pd92qDz53xb
qAfyI+ZXB613C+2EP2AOtY8Hy33Ooz3pEjnqUL59AHSfMuSfetI7tJv2ULv5
E67LgJ8zk+Z66Xf84fjF8ckxeO9K69rfHpg7n4ShHPdapyfvzz9YuWjcN6BP
wJ8/O2g+FWLve62zj9Szy4TOwzrO00IfznvQOP6U/ZZxKlSO/iHfE31g3zyo
v8KwbdD+F4WelLN65Z88xzFsy0SfOf25TvT5mPID9ECgTz+F5x2mVPo536h9
Vujq5k/6t9n/QP+E/a708/tJ4f8m5R/qoz7zotDJ7XvAv4+1vVn5T3iJ862i
ugrw1YG54wR670X5zjPSDxwS8DG/6yl+IPuVCh8uNg4fviDv8/cdyrd3cz2U
c3/cjEj/n0gf+xs8V6q8UH92m9/K726R/ulCk9lpE+gftc6+38NxLenXbZ39
4j7Ehd9Cu/lLfo9yGuA4hzeAG/xhyksmZT4j/dRvceIPL9R7wUtrnnx3sdBz
g/LD1fj9laYVz0XS5rwHMX7Kcn3D1o3/iNCL8xniuoN+/vtKCzztX20d/zwj
41LP9+t++aSL+SrmucO0Sz/tTY3otVrlc/JFg8hFndojscuCJ2pVDz+K8Yfs
r4QeTl/9husi/gzm4/SM6A17qN54XOhMOW40Doc4fMzv1itOfjP/6K3V+x1e
jCn+xLz8QcFJJcbhJcpL1EIfqH8g+jAzab9DeluH2/8s66R+GVH6/1GeaV/K
aCdDXGQy0u9wEX8/IPNJit12OLmf689M2M9J/36ZN9satTvcnwpLvNCq+Ip6
aotlW6X2i3alR/RkXO0+7Uuzod8wahwOv7PQLGwXPTVhnXz9JR97cnp+g/x+
yDwi/XtlXZTTQevkdD7anfbzsPPT9nrR/8S/Pt8L+MLhYfEj/gk3Qn4DvQb6
BPbK7YvzB5x/4OSU+srhmRrFY/+fXJBeZ5DOmQbVh7SXA+rnOr1KvumU+RUp
v1G+S/5J3p0/9bb0u/Hht2R2iV/UYXql/xf57J1j87sD+fGDz46pHRQ+tuTH
QeXnJ2Sd9KuGrMM5kLPMhPks2im1L+SHPks6lSl9bsd7O80X8LzOXi39xHPj
5kaMv8NUSz/pEaX+9wesow/lIsF5+2PmJ9JP/vWELrXG8TPptUboVnkw3fyt
8lym/E+90Wt+yHnZ26VfcIU9FFdk0Q7Jc0z9stfzMw/8/ohqJ0e6j1dyXfY2
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
6JsF1VI32Ki49Nn8ltz+VMxuxnQ7ND4PvRjoKzzP9Oj+LsQ8u7gev13jGDlZ
D/jd26D27i7QYT35NTOs8ot1RROmGPJyheJ/8Fum2SIv6+3QOrcmtP0GdcE3
XmWM9H9L4pz7D4lz/rUw7PVj5hwEeI5R+/Ic9EUp8xl+l8Z1sY7pBP3Y+HbV
hzXU1+YYCPRSpc9vsB+lFgZ5tlnpuQ4bLOcUsgnFG+98ObvH7juTdQlejdqj
3ZjHauLIwL93ODlKR/K+j+P7oV/2WSjcU1kfkmlUPgED+A0GdiRyufr1oHu0
wSTx3XbFq5DT4jozgedOjXPezn21n8C+nKr2lH5HlzmNelrjnKiXz0g+a2ZE
7TLtVYr+Zy5leqT/g5hHtX0/9EdS/f1mMNQ6c+JLpHNe+qG39kp9eLRW9dXz
LACyp+D7k9bVST5QiL/5ggO9uOJJNJlqCzhS3K3xCsY5O6TOIKZxntVw+F+6
D25eOoxfERckDMiTalA/GnhgcYthfG6D4rGfUs9YnjOoPBiHRLvNzYUOv0S/
C5yUX2l+jt+FcU7sY3bSwr8P5HpC+hmfHbAZrK9X5R3x6KIBAzuQGTcuPz6J
99faeyEHYR3yvyJAvox+fbpe9dhpaJvMfxXeT5Upn38z/9R1Pw/89M9jPKNx
AOx7Zjvx5/SA5qfwWqqW+50ZVDzP+rAK5sVyKc03ARcGejOK34VxA/wuwKWQ
k9yg1B/lvA5s35AZxvh9xsX9kOee2W6hP/xStS/vQdvNfPmcOOc3oce7eE4h
3aLxN+TBve3Miwd68U7pryowQm29uRn6IKb7/k7Qd4NNg5ArlJ8fkjgn4jEl
YV4+jfkPGpxT8Uc1nvPDA6va+4rbGM8f3C31ZYFeQruJeY3ZuMov1lc0Kfik
R84/id2PNpHuXlinirxmqlXizGE9IeIDe+KMI2daVM+/Ar+uS+Iew1on8xG8
X2+h/2ZbFF+xPqOB9Qxz4pzvl3gs9H5mm9pH0DfAW/8ChgnjhKB/oJdQz5lp
1DjbERComBkHndeof/EmGLvJroMCu0DxIfzEe+KmFHjvExpXuSifPPy6wP6h
vuCpZvXjzi80d++wzyOvco19XOwL8HV0iLjc267yBTwd4MlT8Vxis9LP+ucG
g+dYSu0L4qIBDga9F3epHGUKzcyE1AFu0joB+i1JC7/X71I/gnWi/bSXc+Kc
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
IdhtXrflvQcVahfcvUCQ9znnef8P/uJMlA==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->NCache[{{
      Rational[3, 10], 
      Rational[1, 2]}, {
      Rational[3, 10], 
      Rational[1, 2]}, {-6.888739578769787*^-12, 
     1.7481653081689428`*^-15}}, {{0.3, 0.5}, {0.3, 
    0.5}, {-6.888739578769787*^-12, 1.7481653081689428`*^-15}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.956751678624483*^9, 3.959904723765724*^9},
 CellLabel->"Out[702]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy8vWd0XEeWJviU3sAkABIkRVKCSEq0oANBGAJEwntPWDoABOi9kaMkylPe
Ut5QUqlU8qZUqlKppGL5ru6e6u7p7pk+M7O92vmx58zsn53d3jO75+zZc/d+
NyLei5dIsNRucM5LZL58GS9exL3ftXGje/LswZljk2cP7ZssaT09efLgoX1n
SlpOnOZTwWsc55r/hY8dJU6I35PjzHr5z47zR99XyNtwCb9c0Oe+1e+dgHwX
x3dX+ChRP3OyXhv02rlifZfG2Wdm3S9yQX9v2jPXqlumLli3Q3OXrUszP5Pp
gj7/bfY7kumN/pvQl4flU/CK/bXqRYj0HSb0XdUzBr/Vp+TvKetOW9X3plNW
U8EJ+1zMf53cNnDZu8EV64my3SCd5Qa+cyF5jU843ig6+kZm0C87vokLup//
mfe87HgzYr//R93TmrJs/ZcpkwELXHA74v59p5HUd/BNpb72iuMSxYT+aD1g
dMJ+aMcjQenD07NvMeF41G2/17cwP1cMJ68xu0eG2tP6Gvw8X67FL+Puu4jX
nPt3zOpNpXoG84BXdG+iclbYKXbB+mmJ4w3GZf05T74Jm4cwhzy4oojwZcca
MPephObiNiWYWxh+JfM7u8u75G2kxL6P/k/uLXPTjjeF6YxLS/Sl5nu3e5qA
bShxjsy6ddCMgGP9xkcymszS9qPJdUKE6uuMMQpOOBYBzbqpTb0+/hDQCEhv
XKIpsZo152Y1OygXpRctWhTN0qzXW0VBsRL9fIbY0o43jiWzb1eSebs+/X1u
bu6FsrKyb8fGxpwA7d+/n4eTP5v7Knaa82lVZ6IXHP8EXu3BZ/WkW7WBnkzc
dNNNl9PpNPqBHuG99Eb3DKPj9kz3xyCYN0wZeKKGM+K7/+yBSjse6Pq616l/
bg2U6R66q2UQvjanr3R1dSnYuDoKKaRKpK92jeNhQMB7XpfY7Y62ydu4GUf0
wvQIHTfjiu8NDphe43v8x+80bCsKntCjIgMcyfjCoIJuLWIe5ILjJ8ujVidb
/KOJm+JAZ3HzoLoFfzJUY42roQJ5AvOXQQXolxHcvnNqsEMljifz8N4GskZ5
G51rAOW2al5DIEQzcDhUz0KGKAwVPGS1Xu89eSaJ4yciIpyE/ZUhN8OP5qb4
f9Fqeft36HeON+Fm5Nym9VD7CORBq/0abyrMNSwsMCFBeW/+Uuo681SORxpB
MyDy6QGr7Sr12Nm4yzy2IQG0WaCaQ1OZt7BHx3eLrf7hyRx8uT7kteGinzxO
AJeEvLu6D3y/dYct3tRmg4hrvfF1x0A3aWhfPt2nmvw/9XA7lqab755a7X8a
e7Ldp1ky9w19o6Rv+H/Ia9iw7BXH1nd1U84sDStscMn8lch336rbWOed5fqB
LJ43rCyAY/6WqutccSR3UefwGO65e9Xl/01eEyVOdr2jxOpW2m0pktlro1tk
e9Ab5HVORDVjKWN8vdd5l0aMsWUxjiFk/0N8Vw0mZLpnDqWzhYysu6CfV4Oi
PQzOder57Vmw8ceoSPxM7kCrn8gk+Z9JuD8gnBJ0qQl/d896qkzR7FMf1E2j
Zg4mHE/3doE7QwFP45Mi8Ksj3k1zdV6NgWP9Geq6x+q9p/LIu5D+peMnLr9s
FnM5bTVsWGqxd99s8KN42uVN6Z5WAm3w843unCqZ5s6041GUS/O6m5cdz/K/
ov/j+4VeNzGMmcO6Lks3Y/5RFkK4YHXzO+hnWqSac/4hDdnCGs+0QE7H5kJz
M5Wl/uGTfsX1zW0sucvuazTtXEUVkxlRDCfGlfmbMCO9wD98mbIsQ6ORGV03
dzdt3cx0UyO1mTNDXjK8eibMI0gPNQCR40cNGXolra8uSAzv2fyiu+yqi/jT
XTa4Ir+9U10u0kzb//aouZTjWBgVcAc3zz+WBjqNSK3I0omEtIDn0LeWmZw/
92MaDNdKSNA07rXmEbvMwh1Wu0Veuzacmval3W1eu65WEfPadfWJbNbNbda9
1FQlrwp3joIxlzGrvXu7mpK6d8i0YZ5Vxuy8dT9r8LPBlfG62LJbD6FPMcvJ
MoS3W7dJ+uc487GapG9oTfXHT172+MT8c5xVw1OGh18nynOf3m7NuGhsy1go
rX2uJrxnlDG51WpMcWDialxmGB3ftXlP6kJUvndbd3ZvsW5xjX8YM1klQ/GT
WWjNchtLe3ef7mZ1m//PP75ZeSjqb1J62eIRiiuCU/7uyG/1bf7f2Q9iayhJ
b14c89ec5Q5qvMKZMCy/O6d+9v94TZkHMkzodh5/O/zNy3nNHOYBTA/NuOk7
/HevE5nk6IiTR5GUCws7/MMid1IPErH5zB62s+rUP/hHLXNyslk2O7zHd2+m
8Mxv45xRd/hv3vSjmazstdvfpJybp875bJzTqslP9PA4c4YosjrwShzLSRPw
2rhitZHG2ZX+QckUxZNez9zRLfLPgDyBr7eui7jE8SIcFxyfY6bE3+FkiTNb
obCVn7Rj6ZOWneRSZTCLaMjWez3WPt3mlK/3Vxy/bjqhb60JpMTxHDdaXoeN
M6fEsYISlst+wn4sbShlgyCfobRv7t77VCNf76OuFmbd0R04DbJmMM1jXLY+
m8e7Yi4X/VkZOFcHNsswchloSp3zCXalaPg14ZP2M/jNsUCWc1pdswnEPGdW
7591ztWwLVMjUy9B147M3XP8BOeFfrTsxu3TpulYlnPhLOd67KeO+p7QyZg5
rfsbvjXfZXuwbAOgDJar24HKw+fXTBSvR2wlzEAErlG6nxtBMegy4XUjbr4z
f5nXXvGuFaPxiuM3t9CPbnucZgU+zVgodSSUdjzwsYZowsmkByFsZYpkuOyy
ePePZxkcxYwRF9rxdBZRKyrIK3EsyLb6lbY+p7N8p1EbfTZT677PFnnp8g2S
D3UcD5WM9uF4M5A1+mnZn6ZzmhjicwlQnHdhVTG0XwVcqNu0oTfq3dsvryxn
ggu5Vs9cmnMcD7eySsRO37iYh5xwPFLE/5j3vP4x0G78tONZkTZXZJPxRgZr
mBDmOjH3ePjs14z5sZ7Yz+SW594dt/DcT/+pvApv2LatsaDtu2kHmukB7ojv
lTo6p6Jwq+6PrSgv8s65QB+5+vO551QIRUlXV1lxvEiezQLu95oF/lZer26w
356lv+J+Fisn4jX+x3vpzYKNZZcdL6JssAzXaSz7a/XLbFFFlz7wd173xNbb
r/V+69KNFeDP5GEf3SiOEnXL/rNpxjw1rknjRK86/5fymtVCMzqAPdV3ZOn5
Yt0jmyK0u9mWfiW6B7i7+jqeKRxtYCoxD92vPv9BtThX6EyDCkjBtV8yhlnO
684aNpZpUb1xIwBmaIUFFTH4fE7ud3P4l2RaNEX8mbxeXUSrWIrf+LmKaM+k
jhLdrQl8imU5J0Mj0Ko79XtvKLPF4i5m6Y+SqHEzlLZOhS98c39Q3eW33kgb
wWL0eZ/v5KJ3ndvEAq8L7jCpUDya0Tf4terTnEaZ47m2nUdUgz61e6n/OeX8
AdX0L7wRyoaLRoJp2SiP9nCWO+gIgs93oQOG3/gnOOsDWE5w1zn3UJbbXK/O
+XwXM+o2P5v7QeZyKlz0WnOVpev9QyW903f4Ul5DmZSaLUL6XJaWS9Q5n/Nu
Wl3+Y3lNzMXx8ms9NBiy572WXGWuxN9vGR3d+hn96M4fUfFDWc6t9U9eVq5W
5Iq32Tqmw1Em3mTzNs4pK1Eb4L7QpCsWtSZua5Loo31thtYuEECOXxt3Vqme
zAUGSjMVWFWNZLKXzLDu7yn9VI6nrDuOp5Ip1UvOBu3ztqVgFGXz/oLjU1td
kbfcm4K51FbnTfU7n3qmvQyunY2/Sbv3Wc0un6DSmuCEY1GEDtdcdvz2tnWp
K8BVWDWWDbYMXKH3b3mdd3UZ3XkfG/o7b3RAu/M+1dFgimN5YrQgSdu9zIiX
XiWa4/Kj7rFP+1qhu2VbBxOzeuz2LpDlnDaSzZAa6WtpZGl9ZYn1dUaMNCu+
ZovvaJrxKTgrvOtcuvnnPYThTBXxUcpEiWP9ZcQiM3H7wyy9vNF/Tp5wr9VL
O2RqK9+aJCSf051+xwtBl+hrF3mjkOk1tjHB+ShL33Q02kcGe+wRFO+iq4E7
Xrp1+OpfZ9OG1djNcscZOvXFqD5Wv/fpOmq6w5noLtOuOy3ArI1IW2201UWD
Be53Gfb9lYw23L+rhCZdaDOhb5MhaA18lmeJ2ORvP7/yWytZmC1LOYNsjUop
si00Mfv6q4TO8ChKovtVvRXeT2w3ryEV3cMXvsOYfJml9VX+czJWKm1WayOz
+mr+f61+6VO0dGs+bXenak3l8l81k8tMDO72syytSx6EKLi6zSf9D/3HUrdc
HPtKnfPpWRlJFnJ+XN3mcW8gsmHNb7K0tibLQCiu1pr21e3033lNukJ4jTdT
riKrm1Q6byybf92MCZr9E9WCT89Sjx22n8t9/FHV+gPfgbRM9o51N/UQohmp
rkfwy2w284i6z33+Yc7kjUiWW/zWO+cqMKUuleh27/4O/dcuIZ/d9Zu5Gs8w
iYbV5Xd583NVn+q/9UjDhfr1/meTLg2py5WN7vJNZu/xpQ1Yf+217gqXDR41
uQ+iYnwmLl/iKNwSmlDxjxLzLuPbbB79jKTDq/GhS3jWUPgk4Qb/CMtvdWfV
4gfXB2o0Gcv/NCuh2r5WJ+fEzP1LrDYuO55mrShgTs3uP2Xp9EZ1zmekGdPR
HqhUlnOb1b8K7ytXMcqmnyrzIGQewHQ6i9/cPHum01D+lsnr1VHo79XvfPJS
Ueos2S909cfjIv4+6KQ5oweYvxL9OajUvrT1laYOM1hpuzXPf66dZz6dwfEi
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
r2VmiucYCORm5/CO1uaYc82ScHbGzRP9CfPCYNK8OZync5JkX38uscnv7y4y
H++3YnpiN1oF/ofTRZrd/P54ofnLIwUS2+QrWy+ZDWCDr7YlJPaJk/sqGuah
7pLA4aFqw1kFK06djPgOWPu9AWlxKnH1JM4QPRLLKM2J82B4tBG5iq+vy1Zd
rjTPd0fI87m4r2Ou48laMFFjXNqvGxfGzdCiuNZSD9UURXVQuNCcaRuv9VDA
JzDnM78I0XvHipmBw9tSP10bRGvrZpsBuEca5+jUSduqBZbBLsfUL5+vY5qQ
7jcudeVMKhsLbzM182+LUt2IUtyIWPIEfBql2b4lZWb98nKzc1WxOVBfYo43
l5gHuwvMY2sKzfX1ReYjiay/lu3oV7Ll/E62n7+TXJMa/Cf77Os8uH6a4tqp
yf+t3PdXkoNK3hlJaF8yZuaPxn3pAIt1ZTlpsVckBZryXcaKsDtSPHvYFUyN
hEARhc4teBt3tzsofH0kHQrPU73HcqV1DR7DHsg/RwteIT7R8ISt7fpl/5DX
cU8tGvGfrDRxi4Icn+mxbTOGZ+Fuop4DyHFHZaayy1M08cRx1Gw3ViYjyi1t
g45xqrTR7eIqjzclbmL8jrANrGmvI5bCDfnKip/TJmyj1++MJeY0N2kbkhM9
3WEJQcPNL3KQQzVB0CSfB9eTVHIHWpNgK1zzXeMyPJ4fg9GibUcxbcwMDDKq
dINxnULHdwDqZGwLmg6tU2sTrVBtqhtKdYkhJfjA1Drc4QOPdicZxjdrWTYr
cD3Q2VH5He16nh+0bL8fSBr0xZ4C84uDhapi/ZN91vVsFPv6b3flK8T6XxF7
O1ssi7vI/AEG4GOWR/BPD+ab7/blaQACWQIu6HEHROtbNUsrfuA6X1qbZ57u
SZqH2iRgbkroZNtBiTuZYYIXdOMyW1tcV1mWRjjdvmiiug8xXnhMLRul/XqO
JpawTEWn8l1M4iGoQKwsbZnNqCBjxoVsa5phdrbMUDa2+9bcZi6um2Z+tHWy
+dG2KebH26ea5+T/z2yebN6QzOyVLeXye3ygewcHxJfbk+b9oYR5db0FWj/Z
a4mpdExc9tHD1RYhDLpn4E6iY1l2kUm6P7Y4wirake/KhkN0DciFuhncEQ+0
5ajI1/U1cfOqZPDvb0lKaJtnfiFhLqebtgDZ7KV1FsDy/s4Jcluh7f/JJYGe
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
Kq4BNvGv9xaYLyRmRBbB94c+P1Jh/vliqfm7+8StnB2nJF9QBv9K0qNf3FVs
vpHnfr4vRRn81kiBeXCtdYE94lq4is8N2Hnzp/rtCMfjvXHtmUI2cK2Thl22
bKHZup2GXQufgbgQujSQL2GqND9Hsd9163dXpoqtoFVoieik1icaa7B7Q57g
XYdrzmvtpssBYejINzr1Tmq913uyoxREo4RUkYlaLCHAAn7FDPHQ4ixVL2XD
YyEeb8g1e+qtVx2unw67nraar3Tnm6tyPNSdJ/lsnnmwI8+cbbWFajAPpxoL
zfnWIhU7O9qoilyWvA3AXUu5cnkdaKRxJUG7uDgW2Aht8Ybpyo+5s3mG2d0y
w6r7yEFdlqimKSW8Pl/LgpYU3LYEbI0uKyvru3RrTx+rKEp3J9+bEtlShzI9
BkUaF7k0Wm8RflleasZ/wVtYj7JiqvM76jEWTI6bUz0V5lJ/ubnYV66SX+d6
yszZ7jKJ4YvMxZ4ic767yOxttlZcJ9/4SPM4S57baMlzj9ahpZGtZIaIYrHt
61ywgzGAsH++1+5F4XyGtcWedmBZSiDAU7oSAZFzQML2qjh2OrzXuzIVqa/y
soOWesZ7C69RoQCWd5RVnodRzKB3zazVFgmccGxHau3WdchNEJKiZKmnyNU9
5+d788zvThYp5dXfnhPTPFEe9FnxELmhKIQaztf76RK2rlwQWWDe3jnB/NXJ
QjmKFMT2+1N2hOcP98hxutj8URITqGn+KK8NY/hfye1D7rU/OVxh/v58qfmj
MonLfRJ1/ObuEvOnx0ucQEGx+WJ/kfl4T6GKG7y3o1B5JfUUi2t4eYO4hvV5
OkqEbhmSJU+sjiuzOTpBuAZgGgjC0ZNQBco6m8jI2o9Ywb5xkk7iNrJ0qhxm
tANVcYnq4mbv8rhc2riEAnFlDoLXeW2lLVBSC2fKBIVdOESYB2mbV2b6l5RF
IQlA/PJOO1DnD/pr1fNvCwow/J/+8qr5dL6qtOm8iFYXOANSXuzPEh4twZQ9
5SKWV2INU7HJUKNnmRZx05sa7aSAnxaQ31F0uiLjzaHO283BTttd2NViNxpe
Hw2gg+IPTrePN3e3jjcnxV8cx480lZszLcXKtXB3o+UtgEUePciTtVZXCPB5
ZMxyiNq0FXzJ+b6cAQvlPjeWHfRubzL99F7qtHS7HxPoMTcViwQjlfm2OViz
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
2KmX2y2DCRDaXXJxdLloj8aWjQvV8ojlmpfO0m861iccK+MaXFxI/Jhl61eE
KhnBfZTdt68U7yNBpZgiOR4hq2f3cDFErsspyLKYH8HHD9TPtsZJ5jHDHO66
zextm2q2N001B1tvNUfaJ5oLvWXmgb4y5cqAFf3GUJE502fr/RTkaXIQpiuG
eihXKR4JGinnPr/OavMys/PoQAmSG348RDthQA7vVv6AFi3A88VbrcFFovrT
npSQtUV5QzJzZ3TIDGB0jB9uHWV0g1W28He0s8J8uMXSNUJeRu3lO4l/f7k/
33y7L9/8ZFueeXVjQqvDVzokEZQ4t7HSxhMgbJmMZ6VKRm8bZFnO1DxZI8CB
TfPlGsOXmKW9KvgCWLWOmZVqRMxxMb/ixi+JjHJCBud2T0fnuCD1uAUzg8Fb
z/XmZ8c3OTKIrV7DXcIhZheYuuGq+HacJ2WFtGN3pf06O5ZYo/MGNyzeAZWH
oYVWHJOPv73K1jcbF1QooL5PwfXO2GZ/r7EFV48rumpKzGuEjgXmmpgefIaN
bW16GBtK0hRFElQKaaNTwtm/PFPtLKZ5RrFWkoNqe32R4vUgeuiale4acPB8
Um9Q5HIgBFbPjgVGJy8XSunCZUMtwLe6+MQP++KRWufZKEmx7/Piukx2VYnz
PtteLssEnSQGsEdqJ5mh+hlmu2xfLdVBLc7PeC1R8infEJNcem3tLC177GiS
58ixo2WGOd49VZlxTq6eZo7LUe+qAPd2lEd1RiRGF0yZs/Yvy7AGl+HaXisW
BNZF20unI0ExUhpW85qfMi+GsDuW2A1md8MEQmQlL9YpPbH+n+5ImG/3MKOU
NG+ISV3vz1Xms1YXnu9fVaRDG5y6Z7uzbJU+wzGgenC97Az0jivR7mVM/566
bBViv7cpRwFx252q4lm4G6xN+SnJlE1NC4q/PioFcOEfR/1rtFq5tykqVNjV
kBuIw5wpw59cKRtZi02ryVCAiVPvv0tWlFKILHcUIstCFCJA02R3ixSpshte
AS62/7+x84yS8rzyfFGdc6IJommghQgiZ2iapjOdoMlZ0ASRRBAKSIAQCISi
hWRZliWPssNYsjTOtjzOHo89s+PZnbQz3tlJO7Ph7H7ZD3vOftgvz97fvc/z
hu4Sap1TgKqr3q563pvv//6vWvTlNTqYqT5sns2sBLWK/FhOtcpzy6dkc+V6
EXbjjrRT0/zP69T2tAomcr1GoklcopsxsVKrhftam9yBdVNtiMF3Zsjd+WjJ
HB4jicVhEo10AcsSWQf/FQKYFyXCuTEoQpfhwbUFBb6UuNaXj4kyrTw/VfUs
3ASMHBRe/bbrWyOcSL8S/LVHllnthBo9FWC6hy8PsamgxB1pt2bXlrV3Kk+L
8rW0Frvj6yrdlZ4KZe3KUl2Uz3NO3N/loQb3yOYZmdCxfmQTBbq7VFm3rJur
BcVdbXNZZ2ht63wPUvedLl9KH25ryrKeSzLnQ60NWlXSAxUL0eOzioB+2bJa
V5tkJWytMNWS7FMi2e8Nl7rvDJdpFkvWSa2aJRWw2xCbASmhcqttZdvqWxup
VMBOkRYDWaA9xNJuNuw81VuiLaH7/EJQsIjoaEJXyCvyilSvqiK9CrrV75mt
OudWaXoWpqiT5EW++ivHKBqWmaO3NOAdSdl5P4QTl9YlJoN9T1P1zI/xn/WM
HaTXUOs/Juk2W5M7PEHvzYFaBY6mFSv/0xRLPUBNybgwm5Jr96T3U6l6vNHs
e4qsVJLGW5N4C640ffp0rdIgIIU+GkN9Ql9mw/ImJQiVM36UTW/dte6eVTXK
Rxu+Q4+fgPUBu5x/nvp7P76INvnp8rghYumaPQf8CrzpE+0FnkmrTNtXDAS3
+9Zt/3yjg97uVYqmCX1mwDxZKuKZye6M3ItDqy02aF/SpJ9xH/FDgsrshBg7
eJjxztd7it2zG8vchT6rrvU3z1VqaLiaoW56c7uxfFGS/PhQqfuetsyAYNS6
n99X6baut8n0B3vvcBd6xruz7XXu3pZat2PlRCXG7xclYqkuinVI/Om5bttJ
2rEqIqfT+ramrZWmpx30vUR/M4VR0Zwj2LuuSScWDrc2aN8rz13tn5Sp16Lh
i/7R4QnhWIV8o6dcVxG9K5nm1/eX6VIpFsu8uYPNsiX61eG9Z8cuYdfgcq8u
c4AZi14Vql5VpvSKR2jZYV2TXCL4rKBfkngp/iljlP2gndjKEXYGPyeBNhGK
DuCv/+QB/MvrC1VtQCiRJYO56BX7ooy/31TGX4iUH24tHJNWoVE9plHJWfwU
iumOuA4yUp12pnOsUPMwL1UeQSxqRV/JDtBh0Dhh+A1Ka2SBKG5/a1Ox1Sbg
riyM1A05xyPh2c62S4z09EBthvWe5QqlwDwle4qeuMGc0gTX2WTFT8jZKV68
MmCwziSN1QGxamd8ZECEwBDyKT+KdaPDBpVBc4dNWMrPKLczYyxNmy2jhaBW
/rxT2aQJzqktnm3zbyGwby5yF9pMwVhSSsAFTcNH95S574sifX9Yx07dj4+V
u+1+9fwzQ+Pda/K6cKep67OlABokEgK+FlQaOAEKFFEjSwy8JCJyjCKKIKBK
MuPdqTVlOh2pBmzJFN3fs9sPNx5umej2t1iEe6Rtqjsud4TdOwfbrQq+vTXa
Cqzntonls20rF9R4Z8uuaNYItfkp6rWkrssND6Z8qQU4p8xsYKE6bxYeer/k
jdejGckq1z27hI/seuVBc3pjRAOcHyEGNXMTl9S1Ik0CDJk0ZhI8LjdPx3zX
G/QGAaD6C7/Z65uLNfn9zKbKqAWWpwpUqXtE0DHSrFwKNDA7nnzy8V0CmxQa
Vao7k2PdiUr5Xnd2f2LKNKktKE5JQcatarDWzIDnJOAT8Gn4VOSsx9fWRLHV
4Pwyt1EemxaU6dwF1BVhqWXH0iabpl21oNiSFLxbrDWhrE9bBW3iTmxdWKpJ
KEE5c5dfTjDGnW+rAVzSDVwNBkIsFlYKKACqA7KMfT6v+f4WKDiybl1YkJml
srvbb0nhAVOc5eAFymWv7xG9YaMFucTF9mJ3Q5wQGz1e3Vrq3hXdAUH9/cPl
7sf3lrlfnyqP9iS8vG28+2BPiVJSvr6l2L00YCToV+VzXlhXqE6R0BfdIYiK
Gut3V5UhbqItaz13OwOUCNu9YqyxEg+12GjBjS5bL/iSWJQvhBa4CM6bHkhO
Pg+Hw+8bEUdWoUkFMTRJHvB6PN9fLnL3fF+5RBgaiIoueN+VRxdLxPHpzZPd
I5I13t87zZ3oalR89J61U92GFU2uU25qWA/MYekGYfFG8tvzfQcqWf3VkCRj
VTneFtrNHYqkQAeKldGAKVEGmXfI36zsOtY+VafETsNmcK6nUS673e/MO7+B
/eJPDE7KA9kEt4YEdofW1LjBeSKD80oVWtIvKYg23X0AN39CevOoYpFUV3QM
xSdAez4xAaoiUtOuL3/fTkNIi9GIsFpZtEI+7vYFBZk6TZcpn+xfYqUVLCpZ
bMAsbhPfzPrnvYtLlfaP0KV34QRtreO21vmdzuhRsa8F0O8j3tjYHEh/V+rJ
QUEB/cSZ9onar7l/fbXSmTHcR/gM4pnfxcw7d4Yq4mG/k4dy0UG/AAxtPLkC
ByVhnXzm7YvLdB8B322n5KmnxcsQwzzeaeudWMb3mmjLOztLtTvGeNBfPlSl
66D5jtc3Tnbvi6a8K2EdNpF9MM96mn/wmQxoUoriM1AvDl3TbUuqNbbJ4gML
tSU+SVsJmhgtqo5GRlEzPiwXgsni8TbdJaUZJah9hm4/t8nUHfeFzny4y/RG
J2y3GpGNZK2WNeW5m3214eVW5bMcqsr98HCp7rF6R77MZwfFiHdYm49lNxxG
7xpjPsSMAAqC7ZcvSrkw1Cf4naxwMfSS9si7ZpX4NFF3C8+ioguMKs+dbKnR
VW3sd7Utr2LTmhsUeEEPZcuKKWE7LCq1wz+Ang2spncs/5LLbLJNpl5h5c9a
L03kIoWFSk02MtNRfzEp1pCoouDdy950JKc/NuXRzYWhCa1LgJmD60vgY4IC
UbAnigwJL66EvHPPYqtB0gRQ0NRKq6mQ9+1b5cerVs5Wl0CLL7l+DrlAkKjj
4NibvZ1dy7wI1fJi9T7r4SKW8JCUdcvKBrd5dZNyIcpRlfqErCVurdv67g3L
Z2Sa3MblBnZhhhnuBvqJx5qr3Ym11e7k6jJ3eEWZbqAgwMROHWD71ypDfOFj
2BJ1S7IB6szfOVqhPejfXarRRer8qst9k9w728zwh4UYj2gf2bhrDho8O6tb
CwqjRt61DbXqRvfYLFMRyiMBKhFk0Clml6gP0PMYDuqz1KNK/fzSNY8qZfTs
WT+GikdGXSjUSyIG9laL77paQ6QINGLQFy3jSapGCfAdcVlvbDbiZsYJv7a3
VPOit/dIWtk6V4M6Jh5uiQ1hxw62hVIZVXKKSK9uLNJygyENPNWih01Lepef
gP1t9VOcQP2+6SF/foGR0cB6zjj2qStYc9DD4jfaricdRukvDEMofmqsWq9F
JZO1VVDjf/tQmXt1e5XE6pXuSneFO99a7o6uKnO7llXr4pzNi41mg4z45S3i
Yq8PTpKLTa0tGslJkIInTUw/l9SzfXEKlCRqsYrCcs2MgqotnFKspZO+RfV6
TowN9SX9lshC20LLB0EaYyavS5jBbjp2dzHZeL7ZFpgSaYVDIxeGVwhcpJZh
1ti2GEqhyBElUko7XfPro5JoMnciSUIOCXNIgri/TM3c9FM2lLHpXX5xS0WW
zEkCPoCAFzdMJCNzwy2GJANRFnQSN0hwYXhG61vxMXFVLL0CAN4nbnbvukZ3
tHOa8sQ/vaPBfW5/o/vumSlRUxlEO5iDVwZtMGeEkokSWVqAJRmwdQr6vtC3
YvDrspJmijbqTsfMxEjfQAWQEJI5hWkTcouo5LXSkOWP+imk82E8TPSNZhqu
is2WvB+0o40ok0NoLKSvfWBDI2ye+yUj/fb+kswU7SEzE4zk0vf53oES930e
B0vcj4+Uuq/tMwXa03G3+9HxCm2Zs9KSLamYJ2o1ylxPwKKPfBAZ6rOo8QVk
rzkonZnpphFJPnx3NE3NingqFFhjROaAp5CFZwbVBpzBDAr8jkk0vY6pDFDF
Koz6iV/fLV56rx/Ikaj3rW3Fahwh9eLouD6egaSVsgqhFgkyO1NPrbIVcIxw
Iu7pVCqFipqQdmj6nNfB/ekyRHq6UT3mz/hwdXV1vprXHOBb6n5C9B9GPSB2
AI3PSD77IK+KRyBrB5n/uBgVZqCI8c6C8Oswe4zdjvTOU0+jd0wsc22AtonS
nwou5HrIGjEnMzAQJj875If9xPaCkgVNC10t9j3MozKbg5F8qd9mTMNCLsaN
jejDCEA+u7E8S/olQTm1CygfjrVOdHtbprqe1Ra9d4qZ6ZE8Yt1SSc2XzdEc
oiOMaBr0lKdalhCsNCvQjagXkJwf9Azl9rOiqWhdeNzoKYPFQjP3TJFiDzb6
R1DSnnlVSuKR59tSL4vNofiy3U8Ehvldnnu4oyYKEQEDgsAHp2+dYh1eVpWi
HJmnf+a774lKPbnJYBw3hybnuY+H2cn9hxIl/viIrn3MZOOuVoXOOanqdd7t
fnKy0n00XOHeEP/3mY2lKgdUcI5AjL3CpjJuapc5TUnQroOwQe2smFutakfk
TtuFImt4NbclOWlMfv3lraJe8lD4vaigqGHWvTXEzKoKgTye8pNh97Y1aCBA
RxVONoocxBgX/Hp78lWCd2JwECUkO8NyqIQsaH8mxQmQAjp5bUvV0Mebth1I
p2Va17DIsuRn1D5CWrakscRtXlimYKw2X/HtWkqDRoI408OlypcJfeKO1pmS
vU9zw5LcnmqfpJP2/IL94lQYByddYMKPv2nvIRfYaMbpty0sjfSXytfWeQQc
eapjOApCVfZeAh1nBvut3dVuV7vt0nlzb737yVErZSd17StszWO53ZAxTu1c
azkhXNx8Hmq0tECYS/jMhoKsUkBVaMxCkYFwKXRSjzTXKsCQLv2xVVbMoBjB
5b+2Eyz+61vLxUu+uLXOXd9pBYyu5kXK6bt/faPbvGqqTukD0lKCEh0zDlqq
8yES1gWl0uBL1NOmv851s5XlcQlZ7++cqEAeWnEDYpR2Lio1Fpp2a3JSOgF/
/4PhUnxR1CvG8QPDQGt4/EgejwxYa+73dte7n94rSaU8fnmi3P36vgr+tiAz
NLaCVl3bNsP99D6jkWYXxAubytwzg6Xu5kCpu95nFO3sZaDeA9SQ46Gi51FP
Gl5aSFkcYQ677owpfFn7zmtb2Ap1pa1Auc7F4SppZmu8KoQKO2QEEIXg1gLJ
F/OojLe84IfBA6kKVXgU6vwIhTooUrV3kWGrx5eNS06HpCBKt9Gkg+mXJwoc
9erHQuA4qz5P4TIwdUOQSFESI0lwwtQ7jECb/HgZ1Z/2hRJkLp8q2eWdiuRB
wVpXLTSuHPEGOC+iMZzSPeubdF5gs6RMg8wJ+B5NCJLEoJkVm6u6h9/BqROC
sA30Rn+l2+y54V/ZUa+TH987WBqNc9AP/aaf+8TCSQYfTWChU9wJWDY47Wv+
tBkwojTwxpCV2h5rL3RDnlaPjI47ATr0vCgSeg151sVOXWUtyoRKlSvA6emd
dmf3ddzlnuwv1TXKtLtogbHFnIlCls5cghDrAx1YDAX01rvrFWLZoWF6lc7H
dMyT27B+PiDx0LRKNK4yusSz3FoY4r11wnKhXtA/bCKzgpDQXRycFj0wQ/zO
WzumuPcOTHBfOSiW/tBE99PTde4Hx2slnqrwaVtdaoXl+/dOdj8/U+2+caRS
yU3eP1TpvnrQuJXhWv7inkrF4YNmZN/OsAgtikKJ0ZDrkrYl1Gp2Sq3CALGC
9xIQXhwzhpecPknez4277jlw4FNAvaBggP6cyJGh4pdY8t2jjPFanL/q/RV1
oQd9lEjP+LhXMeoPGc9BkwuQVB87rqi67lVrOA4JR6NxJ6l24avQrqnVWXdu
fYmC0dh5AYKGcRXSMkANaNlJv6Ns9fwZSk9G9xRAwqUu2zPBfoyrvZXuC1sq
bXGkFX0OiLcA5MeCEjoVbLCLEbiZdtVWMPVoIYMmuJeeBfVavN+/qibyIVc2
1CmhAa0L6EfoSaFOpB60PMh1iAzCgBYn/0q/sQglVQwDyJg30QIDXKh0GMAH
4fSYVze69YB48GNXukt0V8gzkoG8tqXYfXV3ibu51VS4R6zLKV0BUaQzIape
SwpNveYXaFGffAOUEvlC0C/mNTx7hrVWFZMlykH+dXlEN6vLulnRyDXtV8U/
i4gaSTvMXiVucPEEHX/kPeslrjhK1bqr0aBXXTPd0a6ZVrhWBfWbd23Gamtq
SvrsxtmZSndmcLbOrlzZ1uQuy+PS1ib33J5Gd3Nno7s01OAuD06QqLfeHWqp
06kolQ92+sVAQd8gNsCkZmOZu1TLQruyd0mDZm+jRvQXGyGvhb/GoIMD4x4+
79egw5aDwyP1JIBEyxi//WyfMRGx0oOcijyMlP5Sa6F7qMU0jFJ3R1P+SBbo
FDRJNUnr8T7NOnS7NGum9r1Ya4JOVZeMc/vEW7F/gBkh9kvc4/d9AZ/aMEsy
1Tnx/E7PzHzlu2eNELKELiJX8J/AkXjN7yrmO9/oKlN5xtrg2LUUsrpUy+c7
KZuvrnZbmyMW2QR/JUpXpE+v0AoFakkyhyMilj4hAnOpd6KyLZLDvL6lwj3W
Z9BU/CsnTCWKMEELcN1GysmneLjZmvZKIOm3kFG0ZCCOXhE1aKBxN3tL3FN9
8pCwB/bG5yS5eGmzxFQbxkcZ2Rm/WIU9vVikA34dOKeHVtHYoGWGIw4NUBKP
QhMzkTzRBmQPcx+Pc1SZBsWT1vKGbqVWpzwXwEE7l1XrvkQAH0zUvg73ybYS
3Qb11nZjMHpnJ1SGQAor3bvy/7s7DPTxrZN3uF+cq1fX9NUjk92XDk12L+yW
JGXPVPfi3qnu8a0z3FVRpWvbAVkNzkL3WxZFLais7S2Uf3rgh1JWKxiEAayZ
US8LFwgZwYBofLu4aggUAMPA6cq2teFlpcqKCmv+JV81Je57qC1mpSa2xJ1i
Osm1iAXJzok8ArMTc0kgLthJolu3lha4eXHvKhf4yPxPmqDJ+6Qj8Y+i6NCU
Z1akPCF52rS01p1sH+9Ot1Wqo2HHDpBORhYQge4EvIhaOX0uXR6xwGKbsOiF
v3cvK3ebxQvhii91Vmtt4GaCMpC6hcK7fI+na/6EoJgFMYo9L8yakMhF8yYs
sYSVoGV56IHVaGgJlTZOCNWi9YFjY+yUgTxgZOw9ZtfPHr8pBi+JsWIy66ke
kiLJ1iTlfUZUhfz789vK3Jt7yjXAeWKzbzGI82HgkMFD5qLOidpgNI76XWR7
lxqXOC0MaquhziPfQzlbdHYpo1Mk0fRShzkm45wQLWr2hDn7V9Toljlmw6F4
vCoqfU2c4/VuYs4bPcUs1qBG5OtEj3VVKHSqS4K7bx4wnq8Phyvc1w5UuC/v
L1dGuvf2lcu/K3Q7HhMzH0gA993jle7XD9RoAdRUQgK/Ak2lyt0fkqiem+S+
erTevbKnzt3YVOOOt9VpJ1h1aGmT6xWVgC5PblIecm4zwflGRBObwVp/rwgG
+VF4AJQ/IMHIfnmc8D3Lg+sa3F65fzo67IcpGZqqKS/KlfVoaFZnz6Uq5l4N
jqZ/lGD2zA/PaeYjD+26yb1gerp5+ULXtmKOJjas6Gxf1BDNMPbPr6LgkaWU
nRmfoC7zoxpz44Eq6Iew4cGDXE4owGGvAH1euXyhvNgvoFjnB04JialJ4ZwJ
fSm7wBD4fJ8xbFNoI8eRoDETvNBgs/Em8QgIjCxVDslQoQfsk8fudXe6452N
7r6eae7+vunuxtYG9/r+Se5dsaIXhkwO2QUMcuj6QJm7Ar90lw3Ohl1cKvuJ
NDHI/ANtNYonL/WkYGHRDiWBg0vyS1XoiyMk2wub6rTcAgr1yHIm7QtJzLMU
MUQr6Zed8A84F4+sihu4RG6s0X5dPuWzEjJCaUwICU3xE+L8rsunfnmrSL+k
KN8+Xu2+ebI+vDcfYc9TYa9UYf+zR+t0bJiVMUxAsq6ty4fE96yp05ATK0dT
ktD13W1F+b4MT14RxnMSCp41xbexHOhkIGcHPCQPA1yUqHdA1sNSaeqr2DBs
GVhe6+0zUK5A/6h1m+9t4oIFC+jaJtOWFCioNq0AWsn2unGv6cHIIUKj/S+N
1IOrMfs+fVKlO9s7xR1on+52tjTqfJx8Ls+JS/MlX4U4MbZrNLi1qh+BDQzD
jIvU5Q1d1mgEvnNyeawT0P6FZhPMVORrJ1bkh4mLENBSUqClT3qnS0fXWdBK
IkJCgurRRHhOdIWzJKC71FUTmFiUaCJPi9Z52t/atWICOIxMyKjwE32rZ2s4
Bk0fpF7B74Q1HtQUSUzgZBhYc6eEYVPd4MqpOg7Rt3iiToUGy8HCWD/cBFu8
kXnJn2Giy/a95mttGrYLCZ7NY1hgXxBpDCMjxGR7FgFxOrqcnlNAWg7MYcJm
QMmte+eWRqoiF83yrcW0v7e1WBtcuxcVKCwXxDsVsVt+8fwfHKt2v3fojvDW
giTs4ddQvT4imnKq2n1wuEqXLn1ue7nrlTNokbM411GpG05PrCnS0ZBdi2wE
8nJbga9fF2oSEuCsnZ5GQyndR+/JsrdUag5Kdz+sK1d6zTbL7IHaUZUmiAL1
TFRMQU9yFWvd5iuH4PMD5aNxQLXpqEpVxqvHsdEZSKweldHSJ35EEFVfzs75
Mvfqrgr39KZyyWJL1UHT3aJmBpDkZMjWY6Z7WxmxTBdpg6vZtrLBHWszBrvH
umvcuXXV2mfhy6MeOxaWarkM1Ti3HlScgbv3+f6qHSF/jo/KKrwWZkoq/iwP
e67H0gjYFKlAQidLinGtq1xTFG2Gyu8FHUfZhF7vO1tNX8Soswwd7CoD1ves
iL0XqbSqX59vJHxtp6gX9eYSzXCe3hUtL9eppBM90932dTM1tBpQMycKFjP0
ev7/Nay0Jwq0+MgziKkKkKjBgHRrsELLOoaT1VZIt4ZVYTQLGoKAN/ncgLVF
KPahQ0qX2acj6WHSMtCxrVZ6tYhU6C6lKg1jfGSPFzpLdCfJa3sq3ftHq91r
w6Y0D/VPU3z6T45X6AwvQChczI+OAh8sd799qNr92YVa96sHa90PT9fo7iTc
zmDLXA3knhos002iMF0QkN+7qkirQATcuz26mJRCFCkTaArb/IeGz6xohCa9
Mljk6aOqlIAI9iUNTpfN1gydAAMb+7Dfikqux/tIR3B1NzqVD9ojIfLc/Inx
oNGIvERrY16rUmVoC9IyJ3LkJaZS1ZEjEpWKxtefGqpwXzpY5V4RDb4pR/1w
R6noRLF7rtcaxwGftYZiSLcOZ1OugXyCZVuP9kzMxkWyvCSOx2BW8icVajL0
9ctmRwM9LR46DHSCkyXs0sldDrY+sthoFqvJKYNQdHzTr3dDm3BwlL6u++U/
3d7DgxE674dWAKtRiLzZpYMXutmDmj+d2rBHp32ZDZUF9aLcQrX6y9u5IVSg
jf/o/SNWPNjZfrd7/0C5e3lLqfvMJjFCrJ/tK4WCUukudeYPZhlfhrLNGy0x
hS5fbIu6u4U84l2SsUYmIGpArbPQSMupoZBEc2+IUr4kSnmxlSkGz+BQaHxr
MWYnMDpkvblCWr++u9i9qfAImxZh3fM1+fCf3VbuntpmX/Dmjqm6J/SnZ2t0
8fcfSwrzJw/Xuj9/pNb93ZU6xegkPBZrAt/2QNnBlrvdS3KpZzeVKcMFy1XO
r5dotrnYHfYZLx08AISmXDbrvs+bOav98XEnJt2U3scB333HMkWzaUsMMEEJ
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
yi8cdlPjHbob+g7JXppq5RCaasbZ2L2WkniIPTF10HpSqCZdjb9Nqpgk/4VY
yn+b59PfJijF1hzf5rfRt8nqEzHexIdUiYQsL0rIMuGmmpDnq5BPGDnCXJCM
C6J4wH/GF+zDpJAAW3J8wL/PIWu5Qj39nBZ75IeLhgv7X3nLLp/aZLA5/pVR
tPI/4+ei1/lLvBifbBIIt8nekYp5/mf6t6kV8ld5afT94e5tzHGV/27P8VJe
op8lq9fKi17DfzbWlHk5x6kO5rjsv6Yv+7ZBZblsfhLFx4f3Kdrn7B2puuSA
PZeK5P9J/yxJXpkrBkMSDjpBjZ95xY5jZFjYl+Pqfx+fXLg6V/QnEj56Yqtt
5vOjz5of9+a4+N/GL9UhL/mYOS6uL59qF/+CXSXVFuiJjzYytH/NU1m1sUXh
skEoUtedYdd9Lcdhd+e47l+M/TbOtCu/nvusO3Nc/Le3v3jyTs6xi38x91l3
5Lj4n+hzBSNvpF4+q4Y6LxIT/ptnv+ENu1QqJGq351Jdv1+NXU4W25XftKuk
ooK2HFf++diFZLld+a3RR867W3Nc/CfpI09o+6j7ucou/nb6yMP9XJfj4j8c
u7CstYu/m+O0W9Kiqf/3vbFLynq78ns5Tnttjit/69PFJLqR/GeilvlS7iNf
k+M3fDT2+7nBLv7l+B1JH7A6/kpRFvs+f4xF782SWsg52nGvynHpr45dVMw7
ZX4/feZ6l1bmuPJ7Y7+bFlFkvpaWNv0sK3Jc2TShJNfdHOUbLCK3Exx92ObF
0vF6wvp8ms7b3tnMB6OPm3cuzXHxV8cuJtZMyXyY47iX5Ljyy7GMFIc7mUtG
+LXWcvYym3YPasY0On/p9vcveT2DqWX+wL7cSKew0C6UCseeH7tw2FhO5huj
D5mfLshxcUt4x67ttobKG4m0F56f4/I3xn4Pz9uVv53joM0TpcOpq/E9vL2e
2yBF5ju5D3xujks/lj7w2+m5gWsz38194HNyXPzRT7+b4eL2OTLfj881OuvZ
9lz0//xnc1pjU/Vrdukf2GVSPmFWfOkoTEuM6X+anlvBMfPx6OPm3TNzXPz0
2GXE6gjerY7ywHfmuPiJWEw+VdVN0TI/ynHeM+K7FsVTx25/J5NXthwm8+Mc
xz09x5UPf7qMhDtpOUKIYlIzetNyXNkM5dhjQLPBmZ/GB550CVNz/Ia9Y7+b
v2cX/1n6bobb15D+SnoLd4794halZX6RPnI9yik5rrwtfeS303lz1plfpq+i
77gjx5WHxi4mFmBk/ij+lklTNSl9cf0/C2LGpvPmepNxevK4c62y3hC/9NPU
3vxZ5td2leAX9MtOyHHlzrHfSHMImd+kr6LHXR8/FwU8Gu16hb+dX+AVFkT7
xGiUa6iLRSe6esvYb6YZqcyfjj5uflqb4+Krb3/x5M00fc/8Wfq41VTV5Liy
pUVjV/uf2+V/m+PMq3NcfnH6bt5OTv7YrvznuY+8Mv4+UbA2f+yiYmed+fe5
j7wix8UDmnoMam+HEfL/lHcoz3Hlu8YuKXbJzF/GJxuddln826KYynzR2Mo9
f2OX/qvRx83bS3JcfWp8eJ+m87+zi/91+rjDvSzOcfHJY7+X/2AX/485jrso
fi4KftQUjCUc/Be77t+mD1s/oQdx5SBjGdNt/De78t/ZO1KuuCDHlStvf+Xk
bfwfduXfxaeX9MJ5OS5uQ5FjV/j/Zb/hP6VvZfANvrOTCqwKxy4n/9su/p/t
fakjz8SF9Lyxy8b/sQuaiBQnzVO4WFKhP+F2/V+7yD/GtyHIyyfd4P9n78iM
+/8QQvSZ\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"e4ad6154-4b3b-4aea-827a-b121039245ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"globalcrossingeq", "[", 
    RowBox[{"hext", ",", " ", 
     RowBox[{"Transpose", "[", "spec", "]"}], ",", " ", 
     RowBox[{"x", "+", 
      RowBox[{"I", "*", "y"}]}], ",", " ", 
     RowBox[{"x", "-", 
      RowBox[{"I", "*", "y"}]}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"3", "/", "10"}], ",", 
     RowBox[{"5", "/", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"3", "/", "10"}], ",", 
     RowBox[{"5", "/", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9565514659936323`*^9, 3.956551477757365*^9}, {
   3.956551552648516*^9, 3.956551610108317*^9}, {3.956551672813999*^9, 
   3.9565516743331785`*^9}, 3.956551767112263*^9, {3.9565518378213205`*^9, 
   3.9565518417782907`*^9}, {3.9565518722516747`*^9, 3.9565518786444373`*^9}},
 CellLabel->
  "In[703]:=",ExpressionUUID->"a336dc92-ab63-4b4d-bca7-3e3b1480b1d2"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
rYTqed9bDEodndzJ85v7W4+KfarjSb7R2HO+zYk84yhyfY3rhAoH8vwXmz/8
Zv6/ec4+Nv6umyXFIQb65NmZjd933pCIQx065PkWG7/U5oBTfgWa5HkaG/+d
Bhm5C7Vq5DmVjf/XGuNWpyQl8vyOjT9ddYlpXuoM8mzMxi/pcu/qf/OcrWy8
UobDVaTj7Mmzhd/xTFnTBl70jZRTH/fbk+cLxhWFrxUbeNembHMd72FHnsVl
v3/MEWvgDZ+2MX62ly15Dh80VdK1s57X/HnnzBMjrMlz9QuTf24f6nmM1YNy
y/kW5FmzMCSw8Uo9T8khgeeduJg843hkQJ4TRxXb1TV73wiRZ0s2/nVbU12S
B40mzxfZ+L/fHvRHKkmcPI9l4/884WDQaFNx8hzBxh/SZJL5cNUo8lzLxj8+
5evkHSYi5FmLjf/uoir/y//Jcz7P0RCMsGrkFQYFLROQtaLnDh4bb8JR593Z
ZovouePIyvUrOyUbeXXZZj2dOfPouUNwwYUNF3oaeN36gVcNBs2k5w4vqbrL
gY0NvJ4RnhHGT8fQc8fdrwLNivwG3sfWLyvvKXYXwbPCUwXRTzn/eLvvnvfW
p04Xfjex+cOUdf+b53zJxi+7QvPZhNW69NxBn9MHn19ob5pHzx3H2Pgjfo31
MbioTM8dQ9n4xRyGy076KUfPHT5s/NekyiT3KU2m5477bPwRE2sP5s0eRc93
s9n4C+4vafxvnvNxQduRVO0mXskf5xv+K/zJs+oOqUf60k28YTWKXftNPMnz
DjbeB9KqB4+uciXP3yx8Z/JfN/LEEwU6PkUtJ88Oittt4soaeXYL0xITFtqS
5+vCNxK0cxt5Cl3eojbxS+n5btL716d7Mhp5e6/lHBResZie7+LZ/KHKgDzn
Uzb+zI2fy8/cWkqe1dn4mS+njtfVmJBnHK9nB737Ps6APP9g4+8wSJw0M1Gb
PK9g46/OPHlh5EI18nyTjV8osfVtt/FM8jyZjf/Fq4aJ/81zljw4qZcl+5y3
bs+lwM8bIsjzjNzHq62EnvPKvDeljTILJc9paT17xT418U6d9TNoawwgzx/Y
eKWHtuRNTvUmz6Z6SzozLjTxnI5/0DfleZDnM9Lh0qZZTbzSpLzK+JPO5Hlk
3wFToYgm3pORv3InSS8nz8Fs/jB0QJ6zlI0/R/Djig5hB/Isx8Z/SnJkQtV0
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
XZ/9P0NOojE=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
r3TjqsT9BOmo1Ynrbuml9YnrZenJDYlrc2nRTdr/OdaQhxL3A1+HtyfuGUqX
bkxcj0s3bkvc35N2/Slxf+81+Ge4FfwGvD9x73Gp4lx03X4E3pexHsiTsR6Q
rlK/STFKOkl5XNpAOkl64ovEfUVp3X1pXlDO+j5xn3OJ4kHiHuli+Bu4bo7r
7q8T9xVVt+5K3HtUTfpV4t6j6tbPE/c5pZM/S3OiNEZuaU34Xemp4D5hPZ6j
B7wYbgB3C+4r1oVvCX5HteA74ZfgOvDr0X0i6duewb3HhvC70X0i6dtmwX3j
6nrXwT3G+nBz+DH4smgtrH33JvfWO7ivpf6W9IZ0qjSHdLTu7SWuuS24R6de
3ZHEuUz59Gji3u8y/l4mWBuvwBcM1s/KFyWC9fNy5bHg/mpt7uFY4j7wm4z9
ozUNv601nlibSaedSNwTfovxjxP391Q7JMF9vHfwmTQ3KbeWzFpvKZ6UC97j
7+HbBfcJd+FrBMeT1fjqwftllWJSdJ/xe/im4H7jN/jx0T0ZPddz0Xtvk3Jj
cI9xd7CGk/6V9n4runf5HeOjo3vWuv9V0dpUWvT24P7hXvwlwXv8Y/zI6J67
5qRTcP/za8Xh6N6RaiJp6UXae1lre9UWyltd0veodzQmuhev+RwSXNv+qLgS
Xfce0ntI48tmxbDoXuRPmpvonr7m9sXoePqFclF0X3U/PDc6Ln+mNRXdu9fa
bpOuE8XvldG9zoOMNQnuhW7FXx/c+92J/yS6XyyN3Ta4r/ul1k5wX/QHfKPg
WlL3OS66Z6W11F73x/hX+LrBcXs9/s3ovvA+eHO0jpSWGx59ZqDY8nD0WYjW
ba3g3LEW/1CwDleMnRedVz5nbGJ0X0v16UPRZwyKS0OizzYUKxoE5yzlh9rB
OehT/KfRNaFqpXrBOWsDvn5wLtuo+wnuIWj+6wTno3X4SdG9nQ/hEdHnHIql
E6J7g1rbd2DLcvy8NbFH4TX4C4LzlPSP9I10juqyasH54hP87Og8p3voHNxn
3oN/I7pHr/W5LLrn/q32XHCvW9wnOB8pbvTVu4QPBPdDtBe0J2ZF5049b5Xg
/KtnaRic67WPLgrOZR/hX4nO6zsUS6LPgRSTh0afAyn+r47ut6oGnBmdy/Xe
X4vu3ev+l0b37rU382V9hqH4eVbWZzmKP4WzPlORXsqb9VmO4m3I+hxFcbJo
1mcw0kUx63MXxdUiWZ/TSMudnfXZieL2OVmfhSgmr4nuGalO/CK6t6W6aVt0
H0p1U/6sz2CUCwpkfZajWD04uDelvVMo67MW5YjF0WckiglPR/ctFcdyZX12
pVx/RtZnVNJ7C1Jdpb22PPrcQnuqatb1ofRb+axrSOnPclnXitIt52ddZ0qr
vBytjbbrPWZdQ0oTVs661pUmrJR1DSwduDC6B6S9nDvrsy5pzlJZ18DSQoui
z0sUk4tlfbYkTXhm1mdp0ooVs66xpSGLZ31mI238THSfVuv88+h+nOrKp6J7
3YrnW6J7Rqoxt0b3klRXtgw+61FMWxfdQ1Tt1j34bEXx7ZrgMyA977XB5zJa
k1Oj++raO3Oi9ZZiWovgcyvFiiXR50nKHWuje4jqG7QKPkvaphgT3ctTPdtU
7zLHsbRx8PnRFsW/aH0jnfMY9lWO4/am6B6o6vHp0T0pxZnJ0f1/7aOXonWt
vmtadA9L8e3V6HMpxcwp0ecIyjv3Bp9JKWc9Ed1XV59/Y3RfVfW7ziOlUZV7
1jOuRo96R+9Fn1cpv9wXfG6lHDojWn8rjq2IPidTfNgQ3dtVf+CFaP2q5/0/
WWLcOg==
            "]], Polygon3DBox[CompressedData["
1:eJxFmQPUJsfaRbu6Op5oYt1k4olt2zZvfOMb58a2nYltTGzbtm2b/945vda/
Vjpdu+ud70VXPc85pwdtvP0q27VN02zK/zrOe9WmeZLzyfAEwzTN3vBT8Cnw
hPA+8NPwqfBE8EHwS/BZ8CTwrvDD8DHwOPCB8IvwmfDE8MHwy/DZ8CB4d/g2
+Hj4Dj7A+Fy7sTTNnVzbk7kdOK5nfCTztzO/CnwSvA18JbwyfCK8NXwFvBJ8
ArwVfDm8KnwyvC18Ffwf+FZ4P3g03mubmvc6GB4dPoTXrM37b8S1wtxSHEcw
3oj5C5nbDr4bPhQeg9evBQ+Bd4CvZv45jtn59wtw7QuuLcb8IYw3YHwBc/+D
b4dPgO+E/wtfBx8B3wZfxvk9+DOOaxnfyjEu43f5m/cxvy+vfwY+jev/4v0P
hR+Dz4PvYX5D+Fp4d3gA89vD98CHwWPC68NXw7vCI8IbwNfAu8EjwVvAt8D7
wqPC28J3wYfAA+HN4ZvhfeBR4E3hm+C94ZHhqzl/An/KcQ3jXZh/iPHRjMdm
fnI+4zauN77Pj4x3Y/4R+Fi/J/NLwKfBG8IVnofXnAufXvJ95oRPd73AI8AL
+Jv5/Uvu53zwJfA5JZ9vXvhi11vJ55sfvhQ+t+T7zdHl/Y6Dhx8m99u//2/3
A7wCfA68BTwMvHSX9XJTyf5YuMvvd2n5//Xg5/lvm883O/On+v2YHw5es+b9
t2/zfhMxvym8PvNfMV6x5vv+h/lhmZ+7y/ufVnJ/vN+v+vmZnww+HH4dvgCe
HP4Rnhgeh9c/xL/dh2Nhxktx7RNesxs8Czw3/Cr8P3g2eF74dXh3eFZ4Hvg1
eCd4WnhW+Hn4h5r1OIBrDzJ3sHuS8dpc+5X5feFF4KVdA/AyXdbPzSX1Y2d4
Osazce0F5n/h703FeBKuPcrcT/Ak8Ljww/AeHHMzXtg9wOv3hOeBF4Hfg/eC
54UXhd/3N+WYC14Ifofxr/y9qRkP4tpjvPZ3eEZ4KvgJ+Dd4BnhK+HF4J/hB
+Cj+7Vh83mW77PdbSurd6jXry6Lp/ZyN+ePgw0vu15zMHw6vxHyBJ2R+E3g9
5r9kvBTXt2S8Fcdv8KQcWzG/Mfw948k4toY3gX9gPAXHtvBm8E/euy5/f/+S
9blgzfuvxd9t4ZmZP8z6VrJ/9mP+PngI83d3qbePut7h8YZJjX0CPqlN7d0D
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
Jr2TnshsRs8ztP89/bx6psv6fmg9tj5f3vdj66EZx6V9fzMLM9O7syTjMetT
sz1XoiHVcnrI+0s0nd7y6hq9oae3H15To0f09Pa/D3i/2eEBnPf2XtfoETMF
+9+18GJNPL/9c2iNPjLjsF9fDy8LL1rSP/Vwt/b13H5kf7qtX5/WLz39LX3/
Mds0Qzqv1xvWWjOic3s9aTZmfx/S6w9rtxmTWZOZjtmYGehdJRmo2agZ590l
GZfZpxmUWZQZgtmZmdbpvT5RL5jxnNbrJ7M5M6Tje/2mnjUDHL6kxlnrzKDM
osxYzG7NWMxazCzMbvXEemMzKrM899yIJRmOe/GKGn1hJqSeMZM6rteXZlVm
HGZXZmRmH5fX1CLXoGvRPT1xyZ52r19Zo1/MkNRLa3bRAmqCwfyt1brkyw/B
U8JrdMmTH4GnNl/pkjc/7N/0t6jxN6P19XrlLnvLPWb+tWqX/OJBeArXbs36
MWPS/5xe45cG9vXxVmtcScaxtb23Rs9NWuKvLq6plYP7endJjT6bptdXF9To
wclK/NZ1HBcxvsqaz9xxNfVbj2P9vbBGb05e4tcugqe33/X62czknr5emKWc
UuOFBvT96/gaf/hXk3p9U41/VYOoRW5WUzTJ4NTrN8KrwsuU6Pu252m4N4d2
qUEzlNRka9NVzM/XJANUD98Cb9wkA9cP3VDjj5Yu8Qfft9l/E3A+EL6M4xTm
zuba8tZvrg9vL+DahsydbE2yX/T99aQaf9v1/e7EGn/c9v3nhBp/3PT959Qa
/ztK379f5O9PCf8J7wJfWqOnzSj1t+fV9G57uP7T77xOyXfytzDDuIK/8UGT
bOOfjKzEv5k9m6np5/R7+iv9jXmHPd/eb8an39E/6m/MfMx+1CiT1WREZkVq
3Glr/JB+Uz+p/zADMm/YAZ6qJtMz21PjDqrRPEuWaBy10LhtaqU189teky1W
0qN+7zXTEiUa6K9egy5folnVpvYP7533UK+rBlsKXrnvJ2qwxUt6qNrMzMrs
Ss04RU0GZRalR5i+JvMy+9JDzFijCecv6XFqRZ8pnFqSWfuswcz8sBJ/aJZu
RmketH8Tv2hm/UDJHjbLfrXkGYgaZmivIZcr0aBqSzNTs1M1++CaZzYXl2SA
Pssxb/I1zplPmamZ/5gR6M8VO2ZvepLZazI0szQ9zaw1GZtZm55pZn+/mvtk
bmt+pQdaoSRj0xvpGdYt0bx6CV9j1rVfk397tmsQPhZeoCaTW7Ck5//Ue4oF
Snq+XsMaZi2zRh7B66/j2vtNngl9XrOnRijZU+4117Br+UOOLxh/yfER4485
vmZ8rNeaPJP5pibzNPv0NV/V1GBrsTX3yJoabC22Zh9dU4Otxdboo+Ct7akl
e/ChNntw+pKa+2JfE5YtqTnf9z18vpKaYW+3Zlu71Xv6IT2J+majJl7lqjb+
4rn+89oz7B36jWPUI13yc/fP6DX53dr9/pb1CGuW6CW9g57T/G7LJl5Uz2ft
tIbqBfWwZs96Qr2tnnelEn+nF9bTLlSi2fS6eky1hppD/6fHXLHEA+s99dhm
23povbce2+xbT6r3NuM369eTjlfjYVcv8UB6Wz2xzwo2beKV9ayrlngyvaye
eLUSD6VX1rP77EiPrpfXI69R4qH0zj5D8FmCnnqimmduPnvTQ08Mn1mj783o
9Bv+/j7De6f/vc+qyRfGL8knvebcpW3uzV81vcTMQb3qmnkbvqTNWrqjJr81
4zXrdX+b543Wr+fR+34zd5t7e2dNdmuGbJbsmnsLvrjNWry15l56T81mh+uy
d9xT7q27arJZM2Cz4NrFr8xZ4g/bLn5sjhK/UKxfTZ7ZqvftUfYqe5TecPgu
e9U14Fp4nPMXTfaP+2iELmvDNeHaeK5Gq6nZzOpG6lKrrbHW2vdrvI0eRi/z
QY0W0fPofTRfanv1lf7g4ZpeZE8ya7y9Jv80IzcrV7OoXex5ZsX2SHulGkLv
+3eNP9Ez6i/MY/Vr+he91W01tdEaaVY+oEsvsKfYW9QgahH1onpzYJfa55p3
7dtj7bV6Kr1V18UP+wxOfz5sl95gjbPWrdRFC6t51D4rdtHKamS18jM1WaaZ
o37rWTVRk4zTrHOFLl5Dja3Wfqwm/zBjNWtdvsuzJz2J3uSRmrzMDNcs974a
P+8zC59dPFiT9fvMw2cfD8GHNnkG4LOAB2r8n89IfFbyaE2Wa6ZstnxvjTZQ
I/hs5P4a/+8zFp+1WMPfgC/sa/tYXP+8Sc2+vI3GUeuo8fTed9fk8z5j8FnD
6F16uT3H3jNyl16vRlArqDHVmubj9ktr+JuML2pT2++p6UU+o/BZxVM1WbMZ
t3mGmkvtpeYyC3iipleZYZtlP12T/ZpRm2c8WaNl1DTmH2pStama12xhSE0+
PGZJvvF4TRZu5m32vUD/edZs0xvV2Gpt8wOzBjWh2lBNaDbyfE2eZYZt3qmG
V8vrCcw+3qnJjs2MzZ/eq/GyelrzsVdq8ikzY7Pjl2u8mx7ObFhPobdQY5oN
vVGTv5k5m5/5HfwuegizG5/ZTFBSE32WM06XWmwNt5Z/xL+/v0kGYhbyYY3X
1HOaLb5e4y31mD6r8BnPRCXPbHz24zOiCUue2fjs6K0ab2Fmbv73Qk1+aMZv
1v8afFGTzNvs+8WavNBnCOaBr9bkfWbkZuUv1Wh1n2H4LOPNmrzSjN480ucz
Pu+ZpEk2qF722Z/3dK0uGt/1sXkb7b9e//d2aeOF7BH2CnuKz7a+q6n11nzz
xXG79Dp7lL1q7C69zZ5mb7MH2YsGNcnCrNHWamv4V70eVr+qj80C9WB6MT2c
z8K27n+vg9p4vVG6vNZ/o/Ydo0uvtsfb69/l9Tc0eQZhHnp2zW/vPfZe66H0
Uupnn53o2fRuejqfhegJ9YZ6RrP4c2rupffQe/l2TXZihmK+q2ZSu31VoqXO
rdFSrgHXwphdtIcaRa0yfhcto0ZSK+kh9ZJ6UJ8FWmOttQv3v4ceTb2vvtcv
jAWv20RDqCVG66Kl9Qh6hfG6aAU1k9ppRI7lmngMvYYZilmKGYzPJv6o6R32
ELM/e6q91ZpvFvt/38C3zg==
            "]], Polygon3DBox[CompressedData["
1:eJwt13e8FNUVAOD3dveBdASEiFgIiglNpUpHagQBpRqlKDVSlapSlSpVpcYC
NsRuIggoTakqzVDtGBsBEaMURQT8zm/eH+d3z/nm7L7ZmTv3zivbY3C7Qams
rKwPRU6M6aysrmBsdlbWZHVT9QpRljVmLdlpeWl2sSiX4erpxh3q2+Sj9E3Q
d4P6MnGpuNLxJo7NMFZSVxQV5K3YHONK9Z/lTXy2lc/+Jr+WXSMqOd5aPc+Y
JYrKG+lroTwkL6/nKvEXx1qoHzZeob48XN6UzTSuSSfncDKTHIueCuKvEayl
Y48aV0Utb+lvtPc3UuqzohCrz+qJMfqqsMrxW+Q3OTbXWFrUkvfVM9hnizi+
Np2cwynHysbvFH+S12C99Q3UV4gVZ9ew7qwPy8NKsGvZHawvyxvXndVkfdgg
VpiVYtVZLzaAFWTF4hxZN9Y77i/bJbqwMWwSa6IuIy6J89J/g2PTjBeJqvIe
+vrpK+B4SVaN9WT9WX52ThRmDVgz9q28ur5/GBeyxayNnp3idjaaTWSN1dX0
9WUL2HzxonoLb5tKJmMNec2YA/xmNl7PVIeuZxvTyTU/m0nmSMyVa+W3sqn6
pohF6s28DTsf5y6vLjakk3n3eya5f3Ef14vm7NdMMpdiTtWWj2RLfddr/m5X
9kv8ZnUVUVkM1/NOOpl3p+VXxzwU60Qz9gsrF/NfbBW3sCE+N8r31VafTscE
c+6slvSAfFM6me/nfPY6eVWRinvCmulrre+o/IKYx8a2rBM7JV8nCstfMr4s
bo37KO6I50LfQsea+74fxCb5GvaKY8fU1+nrLp/NFjjWIuY8K886sW7snLxg
XCNjR9aVnZUXYFcaO7Au7Iw8zUoam7M27Jg8w0oZW7C27Ed5NithbMpuYj/I
87LLjG1YR3ZSnj+upbE9u539Ln83nTy3ZzLJmhJrS1l5I3a3vpH6SrE67F72
AnuddWO/iRxWg9VnX8jfZ+2Nw+IZZ3XV50UR1pA1Z9/Jt7GOxhFsHKufO7di
jlXJJHN4gXG7upN8pL7x+hqo/yO6sXExT1mz3Hsc97pyJpmv842XinryAfqG
6isezymrw/qxu8RD6jKiLuuvHqKvWKxtrCEbzEawkrEWs/psIBvGSsQayRqw
QTGX2UWsHhvLXmMrWC9Wi93NnmIvsM6sBovNYxF7nnViH4gObDgby+qp94ge
bAKbwVqq6/rsGPYqe5P1Zu+JdmwoG83qqK/XN4I9z5aIN9R7eU82UT1TXyv1
PtGLTWKz2E3q/aI3m8xms9axnvj8YLaYLWUd2e8iL6vFGrKD8jdZaWNd1pQd
jznG8hhrsgbsc/ludqfxQTad3aj+NeaM+hpRk+1PJWt+rP3lM8m6MMv4mjqf
vIK+avq+SiXrRKwXV2eS9Wi28Sf1f/XkF/lEd5Yv9jjHb1Z39tlf5If0PWJ8
g61m96m/FdNiLWDL2D3qj8WA2BPZPNZe/Z2Yzl5hy9kQ9aPiM/X53HeDNx0/
wf7PrhBXs62xrrBP1GfUsZwtY49IPmVnky07aznLkVySSvbP2Ef3q4uICqxV
PPviS/Vhn32MrVZv9NkHcud9bXZbPPviqPpr/iB7NtYwff3UjflUtoqtZ4NY
IzaZrWBr2YA4N3FP7Pfscfb32E/0LWTvsV1sLPtcDI29nT3Jbld/IYaxebHH
sC7q/8X1YsvYGna/+gbfN4WtZOvYQPaNmMCeY6+y/nGNxRA2hz3Bbov9yWcX
sK1sJxvDOrMX2EfsIJuZu+d1Zvey+0TKjWrPnmN71Z/qeyj2HfYU+5B9xCan
k2tfMZVcz7iuU9TtxLNsj3q3eDf2XrGY7VIf8NlJPls03uNYF9Yz7jv7G5vD
lsczLUrnJHP3S3lecYHYkEme6eGpZM+PvT+/vp/1HZKXEpf7vndivdU3MZU8
9/H8X6hvTtwTebbIo29F7EP6njfuZ5+z6bHnsyfZDraPTWBz496p03E+bGXc
Q3ZQnRPnx1ax4+zHOA9xWbzr+K757Ct5gThffW/ra82fMG5ne9mDek7FO0I8
G/H8s52OXxjvGcaurFc8D3raskVsZzwHbGKsm2wJ28c+Y9Ni72BL2QH2BZvB
TsbfUZeP9xC2K5Xct2eMG9kmcWVOcv0mpZJ7EffkrXgHFzNSyb4f+/8w3/VU
vA/E9Yzrz7bEms6+j/kkLmKbYs1kR9UZUZJtZo/F2qEunp28d8T7x5PsiDpL
lDBsZC/GOqu+NM6b7YvnO53873Aik/yPEP8rxDthn1Ty/hbvcTl+x1uxN8Zv
jHnqs/nUB0Q/Np3NYbeo304n76/HM8n/JvE/yr/Fhayqvjr6Dsc7ADujLiOu
YntZnjiHuKesAzsRz6i+E/Eb4rzZdtZA33jjv9gq1ldPfTaOvc5Wsj5sSdyn
uE4xh9iO3PWvTCpZ52K9mxDPmr7j8mJxPvq2xV7HTsfzI8qx3ewJdlh9Lt4D
xAb2NPsprnv0svfZM+xndVFxCfuALWW/RR3zgu2J82cFjJVYDfZNrCusv3EG
m8vaxbouBsZ+xeazDunkHfhs7rMRz8h7fsdBdr++x9XP6rsznfzPVDCVvCfH
+/JOfV+xB+I81S/ruyv2NjE65g1bwnqmk2fwWHay38W+tyn2TTFL3zr1Fn3D
9TRlM9latpkNZTeyeWwz285GsZbxDLMtbAcbnbtezU0lz0s8N+vUX/JRcb3V
z+nroW7BH2bvxG9lI1lzNputZ1vZCPa6yM8qsurs69iLWTFjNVaXHYk9ghU3
Vmf12PexP7OUsRyryD6Rv8Sy492BVWAfy4+wp40b2DY2Vf2KSMe7A6vEPpUv
YF+rC8WaxVbHuswuNtZhTdjP8oWxJ6mLiIJsDXuVZYxXscrsM/k/410i1uD4
TraWFY7/d4ydWXd2Xv4H8ETl6w==
            "]]},
          Annotation[#, "Charting`Private`Tag$112178#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkrh3EcwPHHfV9JKSJ/ABsZGGVgkgxsZGCgZGA0iM3GX8BKYlds7vu+
kuRKuc94fcvw/r0+9fvW8/n2PCWt3Q1dMVEUDepVYX7UhaZjoyibcyzmKst4
wmres57fbGFaXBR1soCF6jdXcpi1HGMTJ9jOWfZygQ+84rs29aw7LVpoi0vc
5jJ3uMLdsBP3uMZ9rvOAG9zUoXmLR9zmMXd4wl2eco9nnHSPa37oXC/hjhqx
2wYHOM8ezrCN42zkKGs4xAqWq8+czw6msJmfnlHHW1bxiKXhXiwKd3bukm/K
0lM4qzw7ZjKXGcxhejjDNGYwNbwDpjCZSUo2J4SZcUwM75gJ/FW8fsJ/+pI1
oik/N//fwx/K50r0
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{690, 1003, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
        914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 917, 696, 1119, 1009, 
        1218, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
        701, 1124, 922, 702, 1112, 1125, 923, 1004}], 
       Line3DBox[{704, 1010, 1219, 703, 488, 705, 1126, 924, 706, 1127, 925, 
        707, 1128, 926, 708, 1129, 927, 709, 1130, 928, 710, 1131, 1011, 1220,
         711, 1012, 1221, 712, 1132, 929, 713, 1133, 930, 714, 1134, 931, 715,
         1135, 932, 716, 1136, 933, 717}], 
       Line3DBox[{719, 1013, 1222, 718, 1014, 1223, 720, 504, 721, 1137, 934, 
        722, 1138, 935, 723, 1139, 936, 724, 1140, 937, 725, 1141, 1015, 1224,
         726, 1016, 1225, 727, 1017, 1226, 728, 1142, 938, 729, 1143, 939, 
        730, 1144, 940, 731, 1145, 941, 732}], 
       Line3DBox[{734, 1018, 1227, 733, 1019, 1228, 735, 1020, 1229, 736, 520,
         737, 1146, 942, 738, 1147, 943, 739, 1148, 944, 740, 1149, 1021, 
        1230, 741, 1022, 1231, 742, 1023, 1232, 743, 1024, 1233, 744, 1150, 
        945, 745, 1151, 946, 746, 1152, 947, 747}], 
       Line3DBox[{749, 1025, 1234, 748, 1026, 1235, 750, 1027, 1236, 751, 
        1028, 1237, 752, 536, 753, 1153, 948, 754, 1154, 949, 755, 1155, 1029,
         1238, 756, 1030, 1239, 757, 1031, 1240, 758, 1032, 1241, 759, 1033, 
        1242, 760, 1156, 950, 761, 1157, 951, 762}], 
       Line3DBox[{764, 1034, 1243, 763, 1035, 1244, 765, 1036, 1245, 766, 
        1037, 1246, 767, 1038, 1247, 768, 552, 769, 1158, 952, 770, 1159, 
        1039, 1248, 771, 1040, 1249, 772, 1041, 1250, 773, 1042, 1251, 774, 
        1043, 1252, 775, 1044, 1253, 776, 1160, 953, 777}], 
       Line3DBox[{779, 1045, 1254, 778, 1046, 1255, 780, 1047, 1256, 781, 
        1048, 1257, 782, 1049, 1258, 783, 1050, 1259, 784, 568, 785, 1161, 
        1051, 1260, 786, 1052, 1261, 787, 1053, 1262, 788, 1054, 1263, 789, 
        1055, 1264, 790, 1056, 1265, 791, 1057, 1266, 792}], 
       Line3DBox[{796, 1162, 954, 794, 1163, 955, 798, 1164, 956, 800, 1165, 
        957, 802, 1166, 958, 804, 1167, 959, 806, 1168, 960, 808, 1169, 585, 
        810, 1170, 961, 812, 1171, 962, 814, 1172, 963, 816, 1173, 964, 818, 
        1174, 965, 820, 1175, 966, 822}], 
       Line3DBox[{821, 1280, 1070, 819, 1279, 1069, 817, 1278, 1068, 815, 
        1277, 1067, 813, 1276, 1066, 811, 1275, 1065, 809, 1274, 584, 807, 
        1273, 1064, 805, 1272, 1063, 803, 1271, 1062, 801, 1270, 1061, 799, 
        1269, 1060, 797, 1268, 1059, 793, 1267, 1058, 795}], 
       Line3DBox[{824, 1071, 1281, 823, 1176, 967, 825, 1177, 968, 826, 1178, 
        969, 827, 1179, 970, 828, 1180, 971, 829, 1181, 972, 830, 1182, 1072, 
        1282, 831, 601, 832, 1183, 973, 833, 1184, 974, 834, 1185, 975, 835, 
        1186, 976, 836, 1187, 977, 837}], 
       Line3DBox[{839, 1073, 1283, 838, 1074, 1284, 840, 1188, 978, 841, 1189,
         979, 842, 1190, 980, 843, 1191, 981, 844, 1192, 982, 845, 1193, 1075,
         1285, 846, 1076, 1286, 847, 617, 848, 1194, 983, 849, 1195, 984, 850,
         1196, 985, 851, 1197, 986, 852}], 
       Line3DBox[{854, 1077, 1287, 853, 1078, 1288, 855, 1079, 1289, 856, 
        1198, 987, 857, 1199, 988, 858, 1200, 989, 859, 1201, 990, 860, 1202, 
        1080, 1290, 861, 1081, 1291, 862, 1082, 1292, 863, 633, 864, 1203, 
        991, 865, 1204, 992, 866, 1205, 993, 867}], 
       Line3DBox[{869, 1083, 1293, 868, 1084, 1294, 870, 1085, 1295, 871, 
        1086, 1296, 872, 1206, 994, 873, 1207, 995, 874, 1208, 996, 875, 1209,
         1087, 1297, 876, 1088, 1298, 877, 1089, 1299, 878, 1090, 1300, 879, 
        649, 880, 1210, 997, 881, 1211, 998, 882}], 
       Line3DBox[{884, 1091, 1301, 883, 1092, 1302, 885, 1093, 1303, 886, 
        1094, 1304, 887, 1095, 1305, 888, 1212, 999, 889, 1213, 1000, 890, 
        1214, 1096, 1306, 891, 1097, 1307, 892, 1098, 1308, 893, 1099, 1309, 
        894, 1100, 1310, 895, 665, 896, 1215, 1001, 897}], 
       Line3DBox[{911, 1008, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319,
         1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 1217, 904, 
        1002, 1216, 903, 1315, 1105, 902, 1314, 1104, 901, 1313, 1103, 900, 
        1312, 1102, 899, 1311, 1101, 898, 1322, 1006, 1005, 1007}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{251, 474, 1113, 252, 488, 280, 1223, 503, 295, 1228, 518, 
        310, 1235, 533, 325, 1244, 548, 340, 1255, 563, 355, 1268, 578, 1163, 
        370, 593, 1176, 385, 1284, 608, 400, 1288, 623, 415, 1294, 638, 430, 
        1302, 653, 445, 1311, 668, 460}], 
       Line3DBox[{253, 475, 1114, 254, 489, 1126, 281, 504, 296, 1229, 519, 
        311, 1236, 534, 326, 1245, 549, 341, 1256, 564, 356, 1269, 579, 1164, 
        371, 594, 1177, 386, 609, 1188, 401, 1289, 624, 416, 1295, 639, 431, 
        1303, 654, 446, 1312, 669, 461}], 
       Line3DBox[{255, 476, 1115, 256, 490, 1127, 282, 505, 1137, 297, 520, 
        312, 1237, 535, 327, 1246, 550, 342, 1257, 565, 357, 1270, 580, 1165, 
        372, 595, 1178, 387, 610, 1189, 402, 625, 1198, 417, 1296, 640, 432, 
        1304, 655, 447, 1313, 670, 462}], 
       Line3DBox[{257, 477, 1116, 258, 491, 1128, 283, 506, 1138, 298, 521, 
        1146, 313, 536, 328, 1247, 551, 343, 1258, 566, 358, 1271, 581, 1166, 
        373, 596, 1179, 388, 611, 1190, 403, 626, 1199, 418, 641, 1206, 433, 
        1305, 656, 448, 1314, 671, 463}], 
       Line3DBox[{259, 478, 1117, 260, 492, 1129, 284, 507, 1139, 299, 522, 
        1147, 314, 537, 1153, 329, 552, 344, 1259, 567, 359, 1272, 582, 1167, 
        374, 597, 1180, 389, 612, 1191, 404, 627, 1200, 419, 642, 1207, 434, 
        657, 1212, 449, 1315, 672, 464}], 
       Line3DBox[{261, 479, 1118, 262, 493, 1130, 285, 508, 1140, 300, 523, 
        1148, 315, 538, 1154, 330, 553, 1158, 345, 568, 360, 1273, 583, 1168, 
        375, 598, 1181, 390, 613, 1192, 405, 628, 1201, 420, 643, 1208, 435, 
        658, 1213, 450, 673, 1216, 465}], 
       Line3DBox[{263, 480, 1119, 265, 494, 1131, 286, 509, 1141, 301, 524, 
        1149, 316, 539, 1155, 331, 554, 1159, 346, 569, 1161, 361, 584, 1169, 
        376, 599, 1182, 391, 614, 1193, 406, 629, 1202, 421, 644, 1209, 436, 
        659, 1214, 451, 674, 1217, 466}], 
       Line3DBox[{267, 482, 1120, 268, 1221, 496, 288, 1225, 511, 303, 1231, 
        526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 363, 1275, 586, 
        1170, 378, 601, 393, 1286, 616, 408, 1291, 631, 423, 1298, 646, 438, 
        1307, 661, 453, 1317, 676, 468}], 
       Line3DBox[{269, 483, 1121, 270, 497, 1132, 289, 1226, 512, 304, 1232, 
        527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 364, 1276, 587, 
        1171, 379, 602, 1183, 394, 617, 409, 1292, 632, 424, 1299, 647, 439, 
        1308, 662, 454, 1318, 677, 469}], 
       Line3DBox[{271, 484, 1122, 272, 498, 1133, 290, 513, 1142, 305, 1233, 
        528, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 365, 1277, 588, 
        1172, 380, 603, 1184, 395, 618, 1194, 410, 633, 425, 1300, 648, 440, 
        1309, 663, 455, 1319, 678, 470}], 
       Line3DBox[{273, 485, 1123, 274, 499, 1134, 291, 514, 1143, 306, 529, 
        1150, 321, 1242, 544, 336, 1252, 559, 351, 1264, 574, 366, 1278, 589, 
        1173, 381, 604, 1185, 396, 619, 1195, 411, 634, 1203, 426, 649, 441, 
        1310, 664, 456, 1320, 679, 471}], 
       Line3DBox[{275, 486, 1124, 276, 500, 1135, 292, 515, 1144, 307, 530, 
        1151, 322, 545, 1156, 337, 1253, 560, 352, 1265, 575, 367, 1279, 590, 
        1174, 382, 605, 1186, 397, 620, 1196, 412, 635, 1204, 427, 650, 1210, 
        442, 665, 457, 1321, 680, 472}], 
       Line3DBox[{277, 682, 683, 1125, 278, 501, 1136, 293, 516, 1145, 308, 
        531, 1152, 323, 546, 1157, 338, 561, 1160, 353, 1266, 576, 368, 1280, 
        591, 1175, 383, 606, 1187, 398, 621, 1197, 413, 636, 1205, 428, 651, 
        1211, 443, 666, 1215, 458, 685, 686, 687}], 
       Line3DBox[{459, 667, 1322, 684, 444, 652, 1301, 429, 637, 1293, 414, 
        622, 1287, 399, 607, 1283, 384, 592, 1281, 369, 1162, 577, 1267, 354, 
        562, 1254, 339, 547, 1243, 324, 532, 1234, 309, 517, 1227, 294, 502, 
        1222, 279, 487, 1219, 250, 473, 681, 688}], 
       Line3DBox[{467, 675, 1316, 452, 660, 1306, 437, 645, 1297, 422, 630, 
        1290, 407, 615, 1285, 392, 600, 1282, 377, 585, 1274, 362, 570, 1260, 
        347, 555, 1248, 332, 540, 1238, 317, 525, 1230, 302, 510, 1224, 287, 
        495, 1220, 266, 481, 1218, 264}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
k1yJWqtzgi8MRz+VePFgdXUPEiUTZ7eM8oR4XLdIXu2txRU34smLRz5RclW8
PzO8abntgVxyxpl9yXwiMB79n1lEF3oHyePKphpDim7ANrz/pesZmzTlaQqx
f8xFbGpMg204txX9jnnYbJNIzjewLkv7J0MIzgscfMsOdfCOJalv2LkjlsZD
Bc4LbJIwS6YsCCbbJGzCjANBMAPz8/AuumrJzACiJGH/znh4DYb1zGlK6aPM
Ll8yUcaytEReL2O8D2TMBYmTNxknoxqnlJygjwLnoXN4Jy+izrPfVc69rIh3
egZTN2VbDlErYsuueKdDJ+Iz3pXM8YqzGSTqOVcxITkZ0rH/blPPpK/cmUJ2
PqbTnU4mwAzUN5vTylXNG55IPOrp2fSnMeCOOLlNE91y6btY0tHCFRoHR4Aj
1vXanZxy8bRwUviZxpfs9oenmN9GS5g35UEhJLSLXfTaxUvxPZ0pYczFXYFE
Vf4+3ip2hb4Y7x0plz44x49EStmaMUYO8u8SnocyTrQpzodo8NwPK0ZawyKM
dxPPrBx10ZvkyJhJ3yr9BbFo3428wS0C3uCMq/R+x+zbED6YGtS4bCVJOOdr
V2hw9sdTBZDsR3Vdmw+RtcgP183n6PCzHPyaTW/NvHmMfIP8kOFiNb0LxlnQ
9y1t0/rdlFxD/HBok4Gv94FUaKyloQn9TEgHvg9H2kW6MWsTYXczXfzTjj/I
XszDmf/g6fWVcR0WmiFAJVT84MkW0oMHiqVstizG/0udExx2aT8pxvWZzYti
v9vpA9sGKZkalGp84TV8td/m1XIbBnmCWRfdPp0sgpWKOT61RQk73SBMRtV/
vb+WJKB9F66bk2DdZt7iLjrTm1BK6MCwP3zAFHndpYWs23tPAiPFND/XzA3m
Il4dWcOdDqnOhFAxrTu13AGikD/j1sTW9vomFUY0U6thR63hPPKUVJu5AxXh
CaDbQedEDraAH7BueoS8u/4C3l2ulC1qGBzwRedq/4uZf0AkroO8bmna5OT1
RX9w9SLtndAb/e9NxQVvC9xhNaXB737Z9+XepO73h1JNhx9coVpGy/zTtaEa
7Vqdi39e81m+3w68HBMsHUN67jvwucOUL4vKAUMxaxJVGALTcB/deE1na6hk
gJKYLj+9OgCOIo/FtYWOV05Ihh1NdB2T6gXTkC/k38om5Y+KA1k7XVZY6wq2
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
/JAZ
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->NCache[{{
      Rational[3, 10], 
      Rational[1, 2]}, {
      Rational[3, 10], 
      Rational[1, 2]}, {-1.7836441409656614`*^-7, 
     2.5032599615549325`*^-7}}, {{0.3, 0.5}, {0.3, 
    0.5}, {-1.7836441409656614`*^-7, 2.5032599615549325`*^-7}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9599047516967754`*^9},
 CellLabel->"Out[703]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0vXeQXcd5L3h0zrlxZpAGwCAMgAuAAAFGyTBpZQ1FkxYlKhFKlEhplCCK
OYtJHCYxCYxgGorkMItBIsVRjiPJEmzLIz9b9ns2nMbeqvlnH2prq7a2amur
ts72F/vrPn0vwPLurboz9557Yvf3+32xu9//2cvP+eIFn738y5//bO/PLv3s
xed8+fOX9U696FK3qXhDlr3hP9z7072sdJ+rLKv9+c8sO+TnP8aP5YT7M+fe
C+495d4Fbm7Dx4nMvyaTuzV6/HWO33jIQ+Yqu/Bjs2cO7fG+8DnHnztTfAW5
0gKfCnad4e+8b3OOt03wKSre78H6VWVX+xDwewO/FTN8hsyfvbHAu/XMmem3
fCZ5kUIf25+l0CPh1ca/pTzyBD8PtWAxZe/xgfrppSni0+s2PE/e848gtz6R
+W6Tq+n3PlcLztz3alkpDS8dly/oj6/zki1pcXnZ289KeiQ5hzTWlLk9+G0h
umURyfQ1sSd5z549uuEfWF90B82gR83dJKRugr9PZl7W4YpNOrvAAJ85n8xq
gt3LQhDYSzBopT3kXK3wsfHR87ksEAnBkRyTLU2fi7qtM5OF3TJldpO7tKef
MqeHu84uNrd9Jj1hj3+PW+a/wAI93kf656L6VWMW6GWvmwUm9DeUnfpFkAUm
w7O8HhaYzIzAXlg/fYoFgm34MMgCWUO6opf5drQXUnm3F3o/naY3MjIytWvX
roUzzzyz2rNnD/wX8Tq8m8haE3xOuYfs9dzHe/FjB+5jcvv27TMTExNyH/BZ
7gvu0SJqMrqvgLTo/hvQddLIk3I9Q8PJDngPfmym2gW+0+VKuU14T6xdu5a6
ox/PMKfAPajkZV4mWMT7UY6VvlPwY1taa+7000+Xu5PPcDuFv0vYLG/qr76E
1ednaUbCAzZa2ctCyNp7PDlsQWkmuEe4Z24guB8UtkxboCG7S+tip9Nd1eyW
VnozNXVp2Qk+W3KawI+tVBvCBWE7n2YIPssNyf5WImybZ18313hnvQ1EouEc
RA5N+GibR07HLe2+2XO+7TDuewiPxHYj5cxXELGEG4XvsD2705z8Lf6GrWzD
yeGY5XS4nA6vJbqXnw+33WFOeSJ1qrSBvV+5RW07eC0LbxHPx2iVxsFvt5tr
7ArbJGYPPHehrclPIb1qrxA0jL3Cm8KejPmg6U+ZyWtZeBm8CRKoQm4Q97/N
XOa4/p2rDzJO59DbhFeZaKBb6bwH+TYyr1WN8djwv+qrCI/A187w+WM0b+p/
T9KkeO98T/8T/6J9B9Cc48dHdW3sO7XI8FSGV9WkkKOFgLb1bz8Vus397xWO
k33lXv9X/NuVKwpz9zJjI2TeIolVQM0OmeADt/J5+3AD7mqksUd3KAKX+aYK
0Cp3D0/+NfsAxUQWG8x4l8yUwu7yJsu+lBuf4icUIGZG9W7s3+YRkSJxKNA3
JZ6Izt+026z83BI80WRmlLdxAbS1jdcyxy0Pb1Je2CD6EgDZByOg1ZpXgEiQ
QA0Gm6gV/DbVajcHNx1YHEbWdRvfidww7eflqQU7W/MBvqs5ts7fcky28P2Y
xC2TEipEv+G3m4JbDm4v5WoJ0jMrYQYCVg1bLb2GjrO0neWIPbxFlZRjaT+x
Y+xtiyrCfeu3rQySum02KWTbTGbdEnWQety2dLNpSzmlx1I33aFtgXjcSDdD
lNiMKUXEQAQr866YgFGfEV6r8O9gBVL4u1Dg8d3Kk9m7tdZPeLdK4NKE2Pvc
M73MkLrhDWEYgiHp4r56JaVXU7fapW2BNNxAuxv9B7c5qbvnE/7GJvgX/BW9
8yX9GxKujFd4c3hV/DbkG1fvjuGKHbWs/sCW9t/W/5RChNhn9pTUNGV8qzle
v1A7A17R6XF7x7enHCooVGGG13XmkkP+KVLUaIx75ZS3hU9hLl3CpVU6M7bS
rjeXa4eNFncG6Vw4+u2Ji4ywALAYY/N91Zy84Xsajksaj6eE58BtS3y76Tbb
RkV407HJeBodHpghS/Tp7Yk8QyKRFNQ3Cl149T1ZJDbX0u7/D/7t9EMd/KgC
/L7EqZcmHv0aOvX/7VuzL27EwOTWxKeiAEBoDSzT5uCT/19hk1qHCS7WSjzx
af3OGxn7V9MV/s/Bt48C1fWHawdQvCCUeLpMaY1K+HwVHfF/+GdJuVqfSJyQ
erQJP1tpkjbkE//vYefGjyAXw9vHq+SwiXnJwtBaXl+hc/9v/g5SOPE+Ft9+
oP1G/TYF55V03v8ZdmyMlUl/pJLqSt+xeoUr6Gwv0k+9rBbBDh2dMrHNBG4m
5PijcNtgpfo5Oi7QSnyLgQfEt/gC/tWYnXhAE+YWAseBbrVjzQN49bLQqkLF
emT/xoTb/yKdPlAxq/iSwv/wupwu8U0620RmjLvMR9LIk4D74LhRfItwS1Ph
U03Kb1vwbzKOJXcO2/Yk7ng1bVP+gNdl9o5TEd4wNhvF6PDpyO/BhxDDppf5
OLMx2LVr6Hw1E0ZIKQq5IAmlumB1uB8KS/hA0pL25gOHhWP4st9E5r3Nycxb
sgt+X3wS7dYN+Hcw+UnAwFpkXwhvHX8b43u2dtCltcfRW09JBz+O3jK/rIDF
jxPsux7/Jo0UeLyLEndNOGjEfYkMTDaPxjxDl7g9mdWRKbvBf8M1sjn78CHb
I+heOkXb+jBxW1R9moKcl1Y/nYDPfgnfobVxsD3QkEy5OGKWZd6qn8p8hpDz
O5bHepnnKct9sac4Y36HB/mgaSn0LI3vI88v/py4TPJbn7j6JF+aBLWVUmmK
14u4+bKoj2tNRdJmdlE7ikxdDP5bYZYbZVgF/ukhs1LR/h8wjURX0p8yDxWO
mMvZolYKBC7zHbXSP13/fEjof51P2+BCM3wh51foxeEl1tda3tV6muxGplg8
QXqhsvfhLfo5/IGwoW4zNxtrZOthiwbQYENW64GGnGrKHJOtwN8Gx6Mbvsnk
TrJz8O9wL/PiiX3UW11UUx8frqpX18BnRT833zp/Km19EzAY2Hwt33y6veFb
SWWVWwlNK3SQowCaaaJedL1eZlzvyOGPjZNL+OfMUwk+/eS7O9XczSsKaIKs
AR+l0dWyX89PbDVO07eCPnFK1UTZpZDBmioHWchgzErz+Hewy3Mx75P16dmF
6VWOouDhSvwOv/Hx/FyB/2qeK+7d4Ll4P3kuQ7UNeQgxdRAtH6LDfuefKDZp
9BYuTvQUvCeOaVYzFyzt4sMU+JXFXjIXgdvo4+UpSmfl2ssi4s1MmY4cv5s+
/wX+HRpoxMA925s4/zB6Z5gfCERPnDI0mPJETlVek9y4/PNk9PNEZlO/xWRm
zMoz6N9vuZn7GDEpFvkyH5J5HapP43pmGT/IzE2nVRPsWpKMlfYqGlgJvRTR
yCxajZnoNxTHiGYN9Rf6fPCi6oPs1/j3cKwTbGDUJs1m0xLDcsZO9Z01+GBA
ApnYPYdMlJss2ITcWzuxraRWyhQov+S76uMPX8IPluqJXTtXV4CjlXznMzee
Vu296oyKH5DMkjLub58TPo/u4Odh26XiApkh1ZmsTqo5C8Tp735jteeMY/Db
Ciba2TvfVV190VkgNwpM9lQCmYvyp8gQ59JPP8G/QwOVYeajDXjoBf6OJ7M6
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
D68ez/TTMzw/4wxP6/lgifMqS9EnK+L0ay6QpxIR4dSM69ydcV5LyfeGh13o
//owopicceQ3Ms5rMXlkfp0eeVH5eQ0M1qwjJ6KgYsYp0yOf7c+SO3MTk4fl
395M7uNDZN0gV/yYaHHGGe7MOHO/9+fB/QVZN7TUw4rcL4vZxmcc+S08cA8u
+M9w7VWPtzT7vAbpEnd13kqeAP5meX/yXBvWIy9P/mH8ck0XJsaZP/h97rzm
Mv4cPeyK5Mv5U8dkHPZt//FuX5w8LJ9rPezK7PN6esaR3+HHUqLf0r9EG9Sj
rkqeXXvU0zLO2jsZZ1e/b6J5SWwXnZNxdkdlHPaP/FhMnF36Z5uWfs9zM07q
qRlHe5cfC+FJdRDUQ51XfiLx55/S49GSHZXZp4danX32TvZ/umvNf0p+qj0t
eqDzkweyJ+ykjAP9OXleufXpUS5MniR+y4kZh/hL8hDcHvSqXZS8yPwXn+Bf
7jq7XDVWV6yq9KzZ94SHXOP/tnAok/Wfkgh5y78UL8F+HE2UhxvNuKUpG9eW
nzg8fWzGwQPq4iVyMZOaBvv9XKtoXcb5PCbjyK8lj8yv6+HIMls8Wi/vSLD3
aNmX6Euv8GNleGQc0bZbe0m40wyQQ1+SbGj2dB+ZcfSX/MmzR8843XzwDjn4
peWnG08fkXHw53t/LYfIwTfKURLjXKqMib/Ls9gVcxMr2cParpA47t5y3Msy
TvahGcd9qveXUab0RZdnn+uDMw6+fecHD6/kp+XgV2Sf669mHPxnvK+QvpAi
25mDOddM8O+z8glXyaESiNa6ysRY8VDv28kX5cgawiVwPSLjyPf1vpFIaXZ0
Tfkpx7sPzDj4PclTvrMOL2+PNiVPub2eB2Qc/Me9byxyxaJrM872/smmyb/d
1fuWIr0j+u+Ms/3ljCN/f9fNxF1I/BNmRF/LPuX7ZXzCrb2/nsL/6Ov+HeHo
8CX/JzlZcxMeetPvZdiMvpG8mvakfzHj0Df2vqnIlDwbZCfGhi9kHPn63l9N
eUP0P8nWxt/l8xlHlj+vMutqlo0Nopb1y5SdbBnFktLnWv/SXfV5iUWiG8pP
N9752YyDX937ZiIxX/StjNP9nxlHvty3kQp7JbPaiA+m7bVPDA88OZMjk407
v37h8cRXiL4tf1x6UBguB0oIsXW9bxySOYu+U36S8eynMg4uUq73vV1C4+i7
/qw6TH0y4/CB9t3VNZSQMLo540Tr3PiEnOry13Dn/VwiLTGCyk/4PhmHXpE8
4Tvr55JFCYkWnvC9Mw6+ZNdX0x5cTl50mz+v7lzvlXFk8RZ619Xlske3y2ES
Y4IIs6RMm+f/vl31c2mtOoqUDQdDMg4+u/dtZIMcfGvydNtruUfGwc/wzWSX
XV2EWnRnxvke7K+a01OBf7WrTi8os4N24nR3ZBx50s6PHF5JIXD0A3lHwmDc
LePIYrD0XgPKwBv90J/wcEgYmPEJwRyBXV1NGWiiHyWvpr18A5J/El/CU3t/
cAF29JPkKfdzZlNHPjl5ynfW52+SI9+dPAq/oz3jyMf3vpkIRqKf+r8yRFVr
8uD8m4SDvevz0iVV8PawWkBSqB3uX7qrbi9Nm635YFzgP7Yl48gH9/5CiobW
ICA5LvT1+5zgOQgP2uF3Ni7gFXKio/vly6SHhmbfdNzR9+/9xZQvHD1Qfrrx
bFPGwb+084OHF1OCLY25ksNwY8aRP8ePve/2j8rhH8445w0Zh/9M8mrurJ1I
hBs9kn3K6/zf48TaJ3vfVCQ2129fdsprMw6+T/KU76zbPysHf0zekRgdajKO
PLT3LeUFOfLj/sy6s805JZaYMmO4dybPr+WAT5SfZLy90v8FTqcN9KdsVz19
hxx8e/Ik2ytYkXHwtt5fQUlTRb/IOMklv89JHgZAb0SgZD2iJ5OnmL+hJj8S
Uqqp9xdPfH9rCyUG4Kz8R93OjxxeRvGVo6f92QvH3lzGwSVV2PtuLhZv9Ezy
UtoRIcu2L/a+nbwnB39O3pc45fTPHjXX+7bxvhzwl/xYEULJHizsxj1cro/k
IM/7y2DbS08XWJLt8rboE/8Hpc8rBg==\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"46a3ca9b-64f6-4829-ad45-d297bf8fca53"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 741.75},
WindowMargins->{{Automatic, 1147.2}, {Automatic, -6}},
FrontEndVersion->"13.0 \:95dc\:65bc  Microsoft Windows (64-bit) (2021\:5e7412\
\:67082\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b356865d-61c4-4d22-a497-333efc1a407b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 168, 3, 45, "Subsubsection",ExpressionUUID->"bc9e6e39-30e0-4fc2-9bac-8cc73e0e3ec9"],
Cell[751, 27, 1941, 52, 133, "Input",ExpressionUUID->"656d76a5-a611-4823-931d-154e02e214e0"]
}, Closed]],
Cell[CellGroupData[{
Cell[2729, 84, 199, 3, 37, "Subsubsection",ExpressionUUID->"87dfd079-02e4-433a-a1e0-07156065b98a"],
Cell[2931, 89, 12476, 329, 1116, "Input",ExpressionUUID->"657dc304-4071-4919-9615-525dac0d7787"]
}, Closed]],
Cell[CellGroupData[{
Cell[15444, 423, 176, 3, 37, "Subsubsection",ExpressionUUID->"bc81cfa7-fa30-4737-b1ed-796557669a40"],
Cell[15623, 428, 49147, 1329, 2688, "Input",ExpressionUUID->"9a7915a4-0f71-4382-bf30-58a3bf0e7806"]
}, Closed]],
Cell[CellGroupData[{
Cell[64807, 1762, 194, 3, 37, "Subsubsection",ExpressionUUID->"58153d29-b387-4163-af7b-b6098bee43b7"],
Cell[65004, 1767, 7007, 147, 531, "Input",ExpressionUUID->"37d4b4bd-de76-4a82-ab38-459141ec371d"]
}, Closed]],
Cell[CellGroupData[{
Cell[72048, 1919, 203, 3, 37, "Subsubsection",ExpressionUUID->"63cec818-33fa-4881-85e6-867f3fc0dc3b"],
Cell[72254, 1924, 18517, 479, 941, "Input",ExpressionUUID->"112d5e48-5929-485c-83fa-962f2ff7d88e"]
}, Closed]],
Cell[CellGroupData[{
Cell[90808, 2408, 166, 3, 37, "Subsubsection",ExpressionUUID->"ca236c00-af56-457c-afa1-c7301b0ce705"],
Cell[CellGroupData[{
Cell[90999, 2415, 7770, 134, 162, "Input",ExpressionUUID->"b2894711-526d-4eae-b4e1-47b797ee2bf1"],
Cell[98772, 2551, 4468, 103, 171, "Output",ExpressionUUID->"691d1d81-4564-49df-9e5a-c1bba8faff0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103277, 2659, 3790, 66, 88, "Input",ExpressionUUID->"63564b08-30ed-4e6f-b8a4-03f522258386"],
Cell[107070, 2727, 1104, 27, 169, "Output",ExpressionUUID->"881358d6-3a34-499f-9f4c-006a114b26af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108211, 2759, 2468, 44, 119, "Input",ExpressionUUID->"e00f8de4-49fc-4e99-ab30-f92671e39e26"],
Cell[110682, 2805, 2033, 43, 244, "Output",ExpressionUUID->"cc4ddd30-8525-4806-8f1d-2ec49ab85944"],
Cell[112718, 2850, 1056, 18, 22, "Print",ExpressionUUID->"f7022d3f-537a-47e0-ab0d-6e2c1268be3e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113823, 2874, 186, 3, 45, "Subsubsection",ExpressionUUID->"12e0aabb-9e9b-4908-997c-9c6365da0cf7"],
Cell[114012, 2879, 7400, 184, 383, "Input",ExpressionUUID->"944bc207-5976-4fa5-ac7a-22c0cff23255"],
Cell[CellGroupData[{
Cell[121437, 3067, 787, 21, 43, "Input",ExpressionUUID->"4625b1d2-5b48-492f-9b4b-74baf475af6b"],
Cell[122227, 3090, 154208, 2532, 271, 59421, 977, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"e4ad6154-4b3b-4aea-827a-b121039245ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276472, 5627, 957, 23, 43, "Input",ExpressionUUID->"a336dc92-ab63-4b4d-bca7-3e3b1480b1d2"],
Cell[277432, 5652, 145966, 2398, 279, 76551, 1259, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"46a3ca9b-64f6-4829-ad45-d297bf8fca53"]
}, Open  ]]
}, Open  ]]
}
]
*)

